package roxanne.main;

import java.io.*;

import roxanne.syntactic.*;
import roxanne.ast.*;
import roxanne.translator.Translator;
import roxanne.codegen.*;

public class Main {

	public static String pathOf(String filename) {
		return Main.class.getResource(filename).getPath();		//??
	}

	private static void compile(String filename) throws IOException {
		InputStream inp = new FileInputStream(filename);
		Parser parser = new Parser(inp);	//?
		java_cup.runtime.Symbol parseTree = null;		//??
		try {
			parseTree = parser.parse();
		} catch (Throwable e) {
			e.printStackTrace();
			//throw new Error(e.toString());
			System.exit(1);
			return;
		} finally {
			inp.close();
		}
		DefList program = (DefList) parseTree.value;	
		Translator translator = new Translator();	
		AssemblyWriter asm = new MipsAssemblyWriter();
		try{
			translator.translate(program, asm);
		} catch (roxanne.error.Error e) {
			e.printStackTrace();
			System.exit(1);
		}

		System.out.println(0);
		System.exit(0);
	}
	
	private static void getTokens(String filename) throws IOException {

		BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));
		InputStream inp = new FileInputStream(filename);
		PrintWriter out = new PrintWriter(new FileOutputStream(
				filename.replace(".c", ".s")));

		Yylex yy= new Yylex(inp);	//?
		java_cup.runtime.Symbol sym = null;
		try {
			sym = yy.next_token();		//everytime sth is matched or when sth. is returned
			while(sym.sym != Yylex.EOF) {
				//String input = reader.readLine();
				//System.out.println(sym.sym);
				switch(sym.sym)	{	//??
				case Symbols.NUM: out.println(sym.value); System.out.println(sym.value);break;
				case Symbols.STRINGTEXT: out.println(sym.value); 
									 //System.out.println(sym.value);
									 break;
				case Symbols.CHARACTER: out.println(sym.value+"test the whitespace"); break;
				default: out.println(yy.yytext()); 
						 System.out.println(yy.yytext()); 
						 //System.out.println(yy.string+"in default");
				}
				sym=yy.next_token();
			
			}
		} catch (Throwable e) {
			e.printStackTrace();
			throw new Error(e.toString());
		} finally {
			inp.close();
		}
		
		out.close();
		System.out.println(filename.replace(".c", ".s"));
	}
	
	public static void main(String argv[]) throws IOException {
		//compile(argv[0]);
		compile(pathOf("newtest.c"));
		//getTokens(pathOf("example2.c"));
		//getTokens(pathOf("example3.c"));
		//getTokens(pathOf("mytest.c"));
		//System.out.println(calc(pathOf("expr.c")));
	}
}
