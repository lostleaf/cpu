namespace :test do

    desc "clear all testbench executables"
    task :clear do
        rm Dir["test_*"]
    end

    desc 'test alu'
    task :alu => [:clear] do
        test(['testbench/alu_tb.v', 'alu.v'], 'test_alu')
    end    

    desc "test pointer"
    task :pointer => [:clear] do
        test(['testbench/pointer_tb.v', 'pointer.v'], 'test_pointer')
    end


    desc "test instruction memory"
    task :inst_memory => [:clear] do
        test(['testbench/inst_memory_tb.v', 'inst_memory.v'], 'test_inst_memory')
    end

    desc "test instruction cache"
    task :inst_cache => [:clear] do
        test(['testbench/inst_cache_tb.v', 'inst_memory.v', 'inst_cache.v'], 
            'test_inst_cache')
    end

    desc "test register file"   
    task :reg_file => [:clear] do
        test(['testbench/reg_file_tb.v', 'reg_file.v'], 'test_reg_file')
    end

    desc "test register status"
    task :reg_status => [:clear] do
        test(['testbench/regstatus_tb.v', 'reg_status.v'], 'test_reg_status')
    end

    desc "test instructipn fetch"
    task :inst_fetch => [:clear] do
        test(['testbench/inst_fetch_tb.v', 'inst_fetch.v','inst_memory.v', 
            'inst_cache.v'], 'test_inst_fetch')
    end

    def test(inputs, output)
        puts `iverilog #{inputs.join(' ')} -o #{output}`
        vvp_pid = Process.spawn("vvp #{output}")
        trap("INT") {
            Process.kill(9, vvp_pid) rescue Errno::ESRCH 
            exit 0
        }
        Process.wait(vvp_pid)       
    end
end

