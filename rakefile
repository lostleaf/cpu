namespace :test do

    desc "clear all teshbench executables"
    task :clear do
        rm Dir["test_*"]
    end

    desc 'test alu'
    task :alu => [:clear] do
        test(['testbench/alu_tb.v', 'alu.v'], 'test_alu')
    end    

    desc "test pointer"
    task :pointer => [:clear] do
        test(['testbench/pointer_tb.v', 'pointer.v'], 'test_pointer')
    end

    desc "test data cache"
    task :data_cache => [:clear] do
        test(['testbench/data_cache_tb.v', 'data_cache.v', 'data_memory.v'], 'test_data_cache')
    end

    desc "test data memory"
    task :data_memory => [:clear] do
        test(['testbench/data_memory_tb.v', 'data_memory.v'], 'test_data_memory')
    end

    desc "test instruction memory"
    task :inst_memory => [:clear] do
        test(['testbench/inst_memory_tb.v', 'inst_memory.v'], 'test_inst_memory')
    end

    desc "test instruction cache"
    task :inst_cache => [:clear] do
        test(['testbench/inst_cache_tb.v', 'inst_memory.v', 'inst_cache.v'], 'test_inst_cache')
    end

    desc "test CPU"
    task :CPU => [:clear] do
        test(['CPU.v'], 'test_CPU')
    end

    desc "test CPU2"
    task :CPU2 => [:clear] do
        test(['CPU2.v'], 'test_CPU2')
    end

    desc "test test"
    task :test => [:clear] do
        test(['test.v'], 'test_test')
    end

    def test(inputs, output)
        puts `iverilog #{inputs.join(' ')} -o #{output}`
        vvp_pid = Process.spawn("vvp #{output}")
        trap("INT") {
            Process.kill(9, vvp_pid) rescue Errno::ESRCH 
            exit 0
        }
        Process.wait(vvp_pid)       
    end
end

