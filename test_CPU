#! /usr/bin/vvp
:ivl_version "0.9.6 " "(v0_9_6)";
:vpi_time_precision - 10;
:vpi_module "system";
:vpi_module "v2005_math";
:vpi_module "va_math";
S_0x8d3d850 .scope module, "CPU" "CPU" 2 10;
 .timescale -9 -10;
P_0x8cf87fc .param/l "ADDER_NUM" 3 41, C4<0011>;
P_0x8cf8810 .param/l "ADDER_START" 3 47, C4<0000>;
P_0x8cf8824 .param/l "ALU_ADD" 3 10, C4<0000>;
P_0x8cf8838 .param/l "ALU_MUL" 3 12, C4<0010>;
P_0x8cf884c .param/l "ALU_SUB" 3 11, C4<0001>;
P_0x8cf8860 .param/l "BGE_IMM_START" 3 22, +C4<010110>;
P_0x8cf8874 .param/l "BGE_PCOFFSET_START" 3 23, +C4<01001>;
P_0x8cf8888 .param/l "BLOCK_SIZE" 3 6, +C4<010000>;
P_0x8cf889c .param/l "BRANCH_NUM" 3 43, C4<0001>;
P_0x8cf88b0 .param/l "BRANCH_START" 3 49, C4<00101>;
P_0x8cf88c4 .param/l "CACHE_SIZE" 3 7, +C4<010000000000>;
P_0x8cf88d8 .param/l "FU_INDEX" 3 53, +C4<0100>;
P_0x8cf88ec .param/l "FU_NUM" 3 46, C4<00001011>;
P_0x8cf8900 .param/l "IMM_START" 3 20, +C4<010001>;
P_0x8cf8914 .param/l "INST_ADD" 3 24, C4<0000>;
P_0x8cf8928 .param/l "INST_ADDI" 3 29, C4<0101>;
P_0x8cf893c .param/l "INST_BGE" 3 37, C4<1101>;
P_0x8cf8950 .param/l "INST_J" 3 35, C4<1011>;
P_0x8cf8964 .param/l "INST_JR" 3 36, C4<1100>;
P_0x8cf8978 .param/l "INST_LI" 3 34, C4<1010>;
P_0x8cf898c .param/l "INST_LW" 3 32, C4<1000>;
P_0x8cf89a0 .param/l "INST_LWRR" 3 27, C4<0011>;
P_0x8cf89b4 .param/l "INST_MUL" 3 26, C4<0010>;
P_0x8cf89c8 .param/l "INST_MULI" 3 31, C4<0111>;
P_0x8cf89dc .param/l "INST_START" 3 15, +C4<011111>;
P_0x8cf89f0 .param/l "INST_SUB" 3 25, C4<0001>;
P_0x8cf8a04 .param/l "INST_SUBI" 3 30, C4<0110>;
P_0x8cf8a18 .param/l "INST_SW" 3 33, C4<1001>;
P_0x8cf8a2c .param/l "INST_SWRR" 3 28, C4<0100>;
P_0x8cf8a40 .param/l "J_PCOFFSET_START" 3 21, +C4<011011>;
P_0x8cf8a54 .param/l "LOADER_NUM" 3 45, C4<0011>;
P_0x8cf8a68 .param/l "LOADER_START" 3 51, C4<0001000>;
P_0x8cf8a7c .param/l "MEM_SIZE" 3 2, +C4<010000000000>;
P_0x8cf8a90 .param/l "MEM_STALL" 3 56, +C4<01100100>;
P_0x8cf8aa4 .param/l "MULTER_NUM" 3 42, C4<0010>;
P_0x8cf8ab8 .param/l "MULTER_START" 3 48, C4<0011>;
P_0x8cf8acc .param/l "MUL_STALL" 3 55, +C4<011>;
P_0x8cf8ae0 .param/l "NO_FU" 3 52, C4<1111>;
P_0x8cf8af4 .param/l "NULL" 3 62, +C4<01111>;
P_0x8cf8b08 .param/l "OPCODE_WIDTH" 3 16, +C4<0100>;
P_0x8cf8b1c .param/l "RB_INDEX" 3 60, +C4<0100>;
P_0x8cf8b30 .param/l "RB_SIZE" 3 59, +C4<01111>;
P_0x8cf8b44 .param/l "RD_START" 3 18, +C4<011011>;
P_0x8cf8b58 .param/l "READY" 3 61, +C4<01111>;
P_0x8cf8b6c .param/l "REG_FILE_SIZE" 3 4, +C4<0100000>;
P_0x8cf8b80 .param/l "REG_INDEX" 3 3, +C4<0101>;
P_0x8cf8b94 .param/l "RS_START" 3 17, +C4<010110>;
P_0x8cf8ba8 .param/l "RT_START" 3 19, +C4<010001>;
P_0x8cf8bbc .param/l "STORER_NUM" 3 44, C4<0010>;
P_0x8cf8bd0 .param/l "STORER_START" 3 50, C4<000110>;
P_0x8cf8be4 .param/l "TAG_SIZE" 3 8, +C4<010010>;
P_0x8cf8bf8 .param/l "WORD_SIZE" 3 1, +C4<0100000>;
v0x8d88f18_0 .net "CDB_data_addr", 479 0, v0x8d85768_0; 1 drivers
v0x8d88fa0_0 .net "CDB_data_data", 479 0, v0x8d857e8_0; 1 drivers
v0x8d88ff0_0 .net "CDB_data_valid", 14 0, v0x8d85838_0; 1 drivers
v0x8d89040_0 .net "CDB_inst_RBindex", 3 0, v0x8d82ed8_0; 1 drivers
v0x8d89090_0 .net "CDB_inst_fu", 3 0, v0x8d82f40_0; 1 drivers
v0x8d890e0_0 .net "CDB_inst_inst", 31 0, v0x8d82f90_0; 1 drivers
RS_0x8d47414/0/0 .resolv tri, L_0x8d8a6b8, L_0x8d8aa48, L_0x8d8ae38, L_0x8d8b4c0;
RS_0x8d47414/0/4 .resolv tri, L_0x8d8ba18, L_0x8d8be08, L_0x8d8c1f8, L_0x8d8c5e8;
RS_0x8d47414/0/8 .resolv tri, L_0x8d8c9d8, L_0x8d8cf38, L_0x8d8d440, C4<zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz>;
RS_0x8d47414 .resolv tri, RS_0x8d47414/0/0, RS_0x8d47414/0/4, RS_0x8d47414/0/8, C4<zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz>;
v0x8d89130_0 .net8 "FU_RB_index_bus", 43 0, RS_0x8d47414; 11 drivers
RS_0x8d474ec .resolv tri, L_0x8d8cc38, L_0x8d8d188, C4<zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz>, C4<zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz>;
v0x8d89180_0 .net8 "FU_addr_bus", 63 0, RS_0x8d474ec; 2 drivers
RS_0x8d47564/0/0 .resolv tri, L_0x8d8a538, L_0x8d8a888, L_0x8d8ac78, L_0x8d8b160;
RS_0x8d47564/0/4 .resolv tri, L_0x8d8b878, L_0x8d8bc48, L_0x8d8c038, L_0x8d8c428;
RS_0x8d47564/0/8 .resolv tri, L_0x8d8c818, L_0x8d8ce28, L_0x8d8d348, C4<zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz>;
RS_0x8d47564 .resolv tri, RS_0x8d47564/0/0, RS_0x8d47564/0/4, RS_0x8d47564/0/8, C4<zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz>;
v0x8d891d0_0 .net8 "FU_data_bus", 351 0, RS_0x8d47564; 11 drivers
RS_0x8d476cc/0/0 .resolv tri, L_0x8d8a5f8, L_0x8d8a968, L_0x8d8ad58, L_0x8d768e0;
RS_0x8d476cc/0/4 .resolv tri, L_0x8d8b938, L_0x8d8bd28, L_0x8d8c118, L_0x8d8c508;
RS_0x8d476cc/0/8 .resolv tri, L_0x8d8c8f8, L_0x8d8cd48, L_0x8d8d268, C4<zzzzzzzzzzz>;
RS_0x8d476cc .resolv tri, RS_0x8d476cc/0/0, RS_0x8d476cc/0/4, RS_0x8d476cc/0/8, C4<zzzzzzzzzzz>;
v0x8d89220_0 .net8 "FU_valid_bus", 10 0, RS_0x8d476cc; 11 drivers
RS_0x8d4751c/0/0 .resolv tri, L_0x8d76ee8, L_0x8d8a7c8, L_0x8d8ab98, L_0x8d8af88;
RS_0x8d4751c/0/4 .resolv tri, L_0x8d76f40, L_0x8d8bb68, L_0x8d8bf58, L_0x8d8c348;
RS_0x8d4751c/0/8 .resolv tri, L_0x8d8c738, L_0x8d8cb58, L_0x8d8d0a8, C4<zzzzzzzzzzz>;
RS_0x8d4751c .resolv tri, RS_0x8d4751c/0/0, RS_0x8d4751c/0/4, RS_0x8d4751c/0/8, C4<zzzzzzzzzzz>;
v0x8d89270_0 .net8 "busy", 10 0, RS_0x8d4751c; 11 drivers
v0x8d892c0_0 .var "clk", 0 0;
RS_0x8d47624 .resolv tri, v0x8d62a70_0, v0x8d65588_0, C4<zzzzz>, C4<zzzzz>;
v0x8d76760_0 .net8 "numi", 4 0, RS_0x8d47624; 2 drivers
RS_0x8d4763c/0/0 .resolv tri, v0x8d62ba8_0, v0x8d656c0_0, v0x8d67fa8_0, v0x8d6a4e8_0;
RS_0x8d4763c/0/4 .resolv tri, v0x8d6ced8_0, v0x8d6f4a8_0, v0x8d71af0_0, v0x8d74138_0;
RS_0x8d4763c/0/8 .resolv tri, v0x8d76b68_0, v0x8d794a0_0, v0x8d7bae8_0, v0x8d838b8_0;
RS_0x8d4763c .resolv tri, RS_0x8d4763c/0/0, RS_0x8d4763c/0/4, RS_0x8d4763c/0/8, C4<zzzzz>;
v0x8d894d0_0 .net8 "numj", 4 0, RS_0x8d4763c; 12 drivers
RS_0x8d47654/0/0 .resolv tri, v0x8d62b30_0, v0x8d65648_0, v0x8d68030_0, v0x8d6a5f0_0;
RS_0x8d47654/0/4 .resolv tri, v0x8d6d118_0, v0x8d6f5b0_0, v0x8d71bf8_0, v0x8d74240_0;
RS_0x8d47654/0/8 .resolv tri, v0x8d6d048_0, v0x8d795a8_0, v0x8d7bbf0_0, v0x8d83840_0;
RS_0x8d47654 .resolv tri, RS_0x8d47654/0/0, RS_0x8d47654/0/4, RS_0x8d47654/0/8, C4<zzzzz>;
v0x8d89520_0 .net8 "numk", 4 0, RS_0x8d47654; 12 drivers
v0x8d89570_0 .net "qi", 3 0, L_0x8d8a0c8; 1 drivers
v0x8d89608_0 .net "qj", 3 0, L_0x8d76db0; 1 drivers
v0x8d89658_0 .net "qk", 3 0, L_0x8d76e78; 1 drivers
v0x8d896f8_0 .var "reset", 0 0;
v0x8d897b0_0 .net "reset_bus", 10 0, v0x8d83ab0_0; 1 drivers
v0x8d896a8_0 .net "vi", 31 0, L_0x8d89e88; 1 drivers
v0x8d898c0_0 .net "vj", 31 0, L_0x8d89f48; 1 drivers
v0x8d89800_0 .net "vk", 31 0, L_0x8d8a008; 1 drivers
v0x8d89970_0 .net "wd_dcache", 31 0, v0x8d83c78_0; 1 drivers
v0x8d89910_0 .net "wd_reg", 31 0, v0x8d83e10_0; 1 drivers
v0x8d89a28_0 .net "wd_status1", 3 0, v0x8d83190_0; 1 drivers
v0x8d899c0_0 .net "wd_status2", 3 0, v0x8d83218_0; 1 drivers
v0x8d89ae8_0 .net "we_dcache", 0 0, v0x8d83d68_0; 1 drivers
v0x8d89a78_0 .net "we_reg", 0 0, v0x8d83f10_0; 1 drivers
v0x8d89bb0_0 .net "we_status1", 0 0, v0x8d83e60_0; 1 drivers
v0x8d89b38_0 .net "we_status2", 0 0, v0x8d83ec0_0; 1 drivers
v0x8d89c80_0 .net "ws_dcache", 31 0, v0x8d84020_0; 1 drivers
v0x8d89c00_0 .net "ws_reg", 4 0, v0x8d84070_0; 1 drivers
v0x8d89d58_0 .net "ws_status1", 4 0, v0x8d833b0_0; 1 drivers
v0x8d89cd0_0 .net "ws_status2", 4 0, v0x8d83410_0; 1 drivers
S_0x8d88d08 .scope task, "setWrite" "setWrite" 2 180, 2 180, S_0x8d3d850;
 .timescale -9 -10;
v0x8d88d88_0 .var "data", 0 0;
v0x8d88dd8_0 .var "fu", 3 0;
v0x8d88e28_0 .var "longData", 10 0;
v0x8d88e78_0 .var "mask", 10 0;
v0x8d88ec8_0 .var "write", 10 0;
TD_CPU.setWrite ;
    %movi 8, 1, 11;
    %ix/getv 0, v0x8d88dd8_0;
    %shiftl/i0  8, 11;
    %inv 8, 11;
    %set/v v0x8d88e78_0, 8, 11;
    %load/v 8, v0x8d88d88_0, 1;
    %mov 9, 0, 10;
    %load/v 19, v0x8d88dd8_0, 4;
    %ix/get 0, 19, 4;
    %shiftl/i0  8, 11;
    %set/v v0x8d88e28_0, 8, 11;
    %load/v 8, v0x8d88ec8_0, 11;
    %load/v 19, v0x8d88e78_0, 11;
    %and 8, 19, 11;
    %load/v 19, v0x8d88e28_0, 11;
    %or 8, 19, 11;
    %set/v v0x8d88ec8_0, 8, 11;
    %end;
S_0x8d88b98 .scope task, "setWriteBy" "setWriteBy" 2 167, 2 167, S_0x8d3d850;
 .timescale -9 -10;
v0x8d88c18_0 .var "fu", 3 0;
v0x8d88c68_0 .var "write", 10 0;
v0x8d88cb8_0 .var "writeFU", 3 0;
TD_CPU.setWriteBy ;
    %load/v 8, v0x8d88cb8_0, 4;
    %mov 12, 0, 2;
    %cmpi/u 8, 15, 6;
    %inv 4, 1;
    %jmp/0xz  T_1.0, 4;
    %load/v 8, v0x8d88c68_0, 11;
    %set/v v0x8d88ec8_0, 8, 11;
    %load/v 8, v0x8d88cb8_0, 4;
    %set/v v0x8d88dd8_0, 8, 4;
    %set/v v0x8d88d88_0, 0, 1;
    %fork TD_CPU.setWrite, S_0x8d88d08;
    %join;
    %load/v 8, v0x8d88ec8_0, 11;
    %set/v v0x8d88c68_0, 8, 11;
T_1.0 ;
    %load/v 8, v0x8d88c68_0, 11;
    %set/v v0x8d88ec8_0, 8, 11;
    %load/v 8, v0x8d88c18_0, 4;
    %set/v v0x8d88dd8_0, 8, 4;
    %set/v v0x8d88d88_0, 1, 1;
    %fork TD_CPU.setWrite, S_0x8d88d08;
    %join;
    %load/v 8, v0x8d88ec8_0, 11;
    %set/v v0x8d88c68_0, 8, 11;
    %load/v 8, v0x8d88c18_0, 4;
    %set/v v0x8d88cb8_0, 8, 4;
    %end;
S_0x8d85a90 .scope module, "status" "reg_status" 2 63, 4 3, S_0x8d3d850;
 .timescale -9 -10;
P_0x8d85b14 .param/l "ADDER_NUM" 3 41, C4<0011>;
P_0x8d85b28 .param/l "ADDER_START" 3 47, C4<0000>;
P_0x8d85b3c .param/l "ALU_ADD" 3 10, C4<0000>;
P_0x8d85b50 .param/l "ALU_MUL" 3 12, C4<0010>;
P_0x8d85b64 .param/l "ALU_SUB" 3 11, C4<0001>;
P_0x8d85b78 .param/l "BGE_IMM_START" 3 22, +C4<010110>;
P_0x8d85b8c .param/l "BGE_PCOFFSET_START" 3 23, +C4<01001>;
P_0x8d85ba0 .param/l "BLOCK_SIZE" 3 6, +C4<010000>;
P_0x8d85bb4 .param/l "BRANCH_NUM" 3 43, C4<0001>;
P_0x8d85bc8 .param/l "BRANCH_START" 3 49, C4<00101>;
P_0x8d85bdc .param/l "CACHE_SIZE" 3 7, +C4<010000000000>;
P_0x8d85bf0 .param/l "FU_INDEX" 3 53, +C4<0100>;
P_0x8d85c04 .param/l "FU_NUM" 3 46, C4<00001011>;
P_0x8d85c18 .param/l "IMM_START" 3 20, +C4<010001>;
P_0x8d85c2c .param/l "INST_ADD" 3 24, C4<0000>;
P_0x8d85c40 .param/l "INST_ADDI" 3 29, C4<0101>;
P_0x8d85c54 .param/l "INST_BGE" 3 37, C4<1101>;
P_0x8d85c68 .param/l "INST_J" 3 35, C4<1011>;
P_0x8d85c7c .param/l "INST_JR" 3 36, C4<1100>;
P_0x8d85c90 .param/l "INST_LI" 3 34, C4<1010>;
P_0x8d85ca4 .param/l "INST_LW" 3 32, C4<1000>;
P_0x8d85cb8 .param/l "INST_LWRR" 3 27, C4<0011>;
P_0x8d85ccc .param/l "INST_MUL" 3 26, C4<0010>;
P_0x8d85ce0 .param/l "INST_MULI" 3 31, C4<0111>;
P_0x8d85cf4 .param/l "INST_START" 3 15, +C4<011111>;
P_0x8d85d08 .param/l "INST_SUB" 3 25, C4<0001>;
P_0x8d85d1c .param/l "INST_SUBI" 3 30, C4<0110>;
P_0x8d85d30 .param/l "INST_SW" 3 33, C4<1001>;
P_0x8d85d44 .param/l "INST_SWRR" 3 28, C4<0100>;
P_0x8d85d58 .param/l "J_PCOFFSET_START" 3 21, +C4<011011>;
P_0x8d85d6c .param/l "LOADER_NUM" 3 45, C4<0011>;
P_0x8d85d80 .param/l "LOADER_START" 3 51, C4<0001000>;
P_0x8d85d94 .param/l "MEM_SIZE" 3 2, +C4<010000000000>;
P_0x8d85da8 .param/l "MEM_STALL" 3 56, +C4<01100100>;
P_0x8d85dbc .param/l "MULTER_NUM" 3 42, C4<0010>;
P_0x8d85dd0 .param/l "MULTER_START" 3 48, C4<0011>;
P_0x8d85de4 .param/l "MUL_STALL" 3 55, +C4<011>;
P_0x8d85df8 .param/l "NO_FU" 3 52, C4<1111>;
P_0x8d85e0c .param/l "NULL" 3 62, +C4<01111>;
P_0x8d85e20 .param/l "OPCODE_WIDTH" 3 16, +C4<0100>;
P_0x8d85e34 .param/l "RB_INDEX" 3 60, +C4<0100>;
P_0x8d85e48 .param/l "RB_SIZE" 3 59, +C4<01111>;
P_0x8d85e5c .param/l "RD_START" 3 18, +C4<011011>;
P_0x8d85e70 .param/l "READY" 3 61, +C4<01111>;
P_0x8d85e84 .param/l "REG_FILE_SIZE" 3 4, +C4<0100000>;
P_0x8d85e98 .param/l "REG_INDEX" 3 3, +C4<0101>;
P_0x8d85eac .param/l "RS_START" 3 17, +C4<010110>;
P_0x8d85ec0 .param/l "RT_START" 3 19, +C4<010001>;
P_0x8d85ed4 .param/l "STORER_NUM" 3 44, C4<0010>;
P_0x8d85ee8 .param/l "STORER_START" 3 50, C4<000110>;
P_0x8d85efc .param/l "TAG_SIZE" 3 8, +C4<010010>;
P_0x8d85f10 .param/l "WORD_SIZE" 3 1, +C4<0100000>;
L_0x8d8a0c8 .functor BUFZ 4, L_0x8d8a078, C4<0000>, C4<0000>, C4<0000>;
L_0x8d76db0 .functor BUFZ 4, L_0x8d8a168, C4<0000>, C4<0000>, C4<0000>;
L_0x8d76e78 .functor BUFZ 4, L_0x8d76e20, C4<0000>, C4<0000>, C4<0000>;
v0x8d88260_0 .net *"_s0", 3 0, L_0x8d8a078; 1 drivers
v0x8d882c0_0 .net *"_s4", 3 0, L_0x8d8a168; 1 drivers
v0x8d88320_0 .net *"_s8", 3 0, L_0x8d76e20; 1 drivers
v0x8d88380_0 .net "clk", 0 0, v0x8d892c0_0; 1 drivers
v0x8d883d0_0 .alias "get_num1", 4 0, v0x8d76760_0;
v0x8d88420_0 .alias "get_num2", 4 0, v0x8d894d0_0;
v0x8d88470_0 .alias "get_num3", 4 0, v0x8d89520_0;
v0x8d884c0_0 .net "reset", 0 0, v0x8d896f8_0; 1 drivers
v0x8d88510_0 .alias "status1", 3 0, v0x8d89570_0;
v0x8d88560_0 .alias "status2", 3 0, v0x8d89608_0;
v0x8d885b0_0 .alias "status3", 3 0, v0x8d89658_0;
v0x8d88600 .array "statuses", 0 31, 3 0;
v0x8d88688_0 .alias "value1", 31 0, v0x8d896a8_0;
v0x8d886d8_0 .alias "value2", 31 0, v0x8d898c0_0;
v0x8d88728_0 .alias "value3", 31 0, v0x8d89800_0;
v0x8d88778_0 .alias "write_reg_data", 31 0, v0x8d89910_0;
v0x8d88810_0 .alias "write_reg_enable", 0 0, v0x8d89a78_0;
v0x8d88898_0 .alias "write_reg_src", 4 0, v0x8d89c00_0;
v0x8d88938_0 .alias "write_rs_enable1", 0 0, v0x8d89bb0_0;
v0x8d88988_0 .alias "write_rs_enable2", 0 0, v0x8d89b38_0;
v0x8d888e8_0 .alias "write_rs_src1", 4 0, v0x8d89d58_0;
v0x8d88a30_0 .alias "write_rs_src2", 4 0, v0x8d89cd0_0;
v0x8d889d8_0 .alias "write_rs_status1", 3 0, v0x8d89a28_0;
v0x8d88ae0_0 .alias "write_rs_status2", 3 0, v0x8d899c0_0;
L_0x8d8a078 .array/port v0x8d88600, RS_0x8d47624;
L_0x8d8a168 .array/port v0x8d88600, RS_0x8d4763c;
L_0x8d76e20 .array/port v0x8d88600, RS_0x8d47654;
S_0x8d86ba0 .scope module, "registers" "reg_file" 4 25, 5 1, S_0x8d85a90;
 .timescale -9 -10;
P_0x8d86c24 .param/l "ADDER_NUM" 3 41, C4<0011>;
P_0x8d86c38 .param/l "ADDER_START" 3 47, C4<0000>;
P_0x8d86c4c .param/l "ALU_ADD" 3 10, C4<0000>;
P_0x8d86c60 .param/l "ALU_MUL" 3 12, C4<0010>;
P_0x8d86c74 .param/l "ALU_SUB" 3 11, C4<0001>;
P_0x8d86c88 .param/l "BGE_IMM_START" 3 22, +C4<010110>;
P_0x8d86c9c .param/l "BGE_PCOFFSET_START" 3 23, +C4<01001>;
P_0x8d86cb0 .param/l "BLOCK_SIZE" 3 6, +C4<010000>;
P_0x8d86cc4 .param/l "BRANCH_NUM" 3 43, C4<0001>;
P_0x8d86cd8 .param/l "BRANCH_START" 3 49, C4<00101>;
P_0x8d86cec .param/l "CACHE_SIZE" 3 7, +C4<010000000000>;
P_0x8d86d00 .param/l "FU_INDEX" 3 53, +C4<0100>;
P_0x8d86d14 .param/l "FU_NUM" 3 46, C4<00001011>;
P_0x8d86d28 .param/l "IMM_START" 3 20, +C4<010001>;
P_0x8d86d3c .param/l "INST_ADD" 3 24, C4<0000>;
P_0x8d86d50 .param/l "INST_ADDI" 3 29, C4<0101>;
P_0x8d86d64 .param/l "INST_BGE" 3 37, C4<1101>;
P_0x8d86d78 .param/l "INST_J" 3 35, C4<1011>;
P_0x8d86d8c .param/l "INST_JR" 3 36, C4<1100>;
P_0x8d86da0 .param/l "INST_LI" 3 34, C4<1010>;
P_0x8d86db4 .param/l "INST_LW" 3 32, C4<1000>;
P_0x8d86dc8 .param/l "INST_LWRR" 3 27, C4<0011>;
P_0x8d86ddc .param/l "INST_MUL" 3 26, C4<0010>;
P_0x8d86df0 .param/l "INST_MULI" 3 31, C4<0111>;
P_0x8d86e04 .param/l "INST_START" 3 15, +C4<011111>;
P_0x8d86e18 .param/l "INST_SUB" 3 25, C4<0001>;
P_0x8d86e2c .param/l "INST_SUBI" 3 30, C4<0110>;
P_0x8d86e40 .param/l "INST_SW" 3 33, C4<1001>;
P_0x8d86e54 .param/l "INST_SWRR" 3 28, C4<0100>;
P_0x8d86e68 .param/l "J_PCOFFSET_START" 3 21, +C4<011011>;
P_0x8d86e7c .param/l "LOADER_NUM" 3 45, C4<0011>;
P_0x8d86e90 .param/l "LOADER_START" 3 51, C4<0001000>;
P_0x8d86ea4 .param/l "MEM_SIZE" 3 2, +C4<010000000000>;
P_0x8d86eb8 .param/l "MEM_STALL" 3 56, +C4<01100100>;
P_0x8d86ecc .param/l "MULTER_NUM" 3 42, C4<0010>;
P_0x8d86ee0 .param/l "MULTER_START" 3 48, C4<0011>;
P_0x8d86ef4 .param/l "MUL_STALL" 3 55, +C4<011>;
P_0x8d86f08 .param/l "NO_FU" 3 52, C4<1111>;
P_0x8d86f1c .param/l "NULL" 3 62, +C4<01111>;
P_0x8d86f30 .param/l "OPCODE_WIDTH" 3 16, +C4<0100>;
P_0x8d86f44 .param/l "RB_INDEX" 3 60, +C4<0100>;
P_0x8d86f58 .param/l "RB_SIZE" 3 59, +C4<01111>;
P_0x8d86f6c .param/l "RD_START" 3 18, +C4<011011>;
P_0x8d86f80 .param/l "READY" 3 61, +C4<01111>;
P_0x8d86f94 .param/l "REG_FILE_SIZE" 3 4, +C4<0100000>;
P_0x8d86fa8 .param/l "REG_INDEX" 3 3, +C4<0101>;
P_0x8d86fbc .param/l "RS_START" 3 17, +C4<010110>;
P_0x8d86fd0 .param/l "RT_START" 3 19, +C4<010001>;
P_0x8d86fe4 .param/l "STORER_NUM" 3 44, C4<0010>;
P_0x8d86ff8 .param/l "STORER_START" 3 50, C4<000110>;
P_0x8d8700c .param/l "TAG_SIZE" 3 8, +C4<010010>;
P_0x8d87020 .param/l "WORD_SIZE" 3 1, +C4<0100000>;
L_0x8d89e88 .functor BUFZ 32, L_0x8d89e38, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>;
L_0x8d89f48 .functor BUFZ 32, L_0x8d89ef8, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>;
L_0x8d8a008 .functor BUFZ 32, L_0x8d89fb8, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>;
v0x8d87b98_0 .net *"_s0", 31 0, L_0x8d89e38; 1 drivers
v0x8d87c08_0 .net *"_s4", 31 0, L_0x8d89ef8; 1 drivers
v0x8d87c68_0 .net *"_s8", 31 0, L_0x8d89fb8; 1 drivers
v0x8d87cc8_0 .alias "clk", 0 0, v0x8d88380_0;
v0x8d87d18_0 .alias "get_num1", 4 0, v0x8d76760_0;
v0x8d87d68_0 .alias "get_num2", 4 0, v0x8d894d0_0;
v0x8d87db8_0 .alias "get_num3", 4 0, v0x8d89520_0;
v0x8d87e08_0 .var "i", 5 0;
v0x8d87e80_0 .alias "out1", 31 0, v0x8d896a8_0;
v0x8d87f08_0 .alias "out2", 31 0, v0x8d898c0_0;
v0x8d87f88_0 .alias "out3", 31 0, v0x8d89800_0;
v0x8d87fd8 .array "register", 0 31, 31 0;
v0x8d88060_0 .alias "reset_enable", 0 0, v0x8d884c0_0;
v0x8d880e8_0 .alias "set_enable", 0 0, v0x8d89a78_0;
v0x8d88178_0 .alias "set_num", 4 0, v0x8d89c00_0;
v0x8d881c8_0 .alias "set_val", 31 0, v0x8d89910_0;
L_0x8d89e38 .array/port v0x8d87fd8, RS_0x8d47624;
L_0x8d89ef8 .array/port v0x8d87fd8, RS_0x8d4763c;
L_0x8d89fb8 .array/port v0x8d87fd8, RS_0x8d47654;
S_0x8d86ab0 .scope begin, "rs" "rs" 4 33, 4 33, S_0x8d85a90;
 .timescale -9 -10;
v0x8d86b30_0 .var "i", 31 0;
S_0x8d83f60 .scope module, "data_ctrl" "CDB_data_controller" 2 90, 6 1, S_0x8d3d850;
 .timescale -9 -10;
P_0x8d8418c .param/l "ADDER_NUM" 3 41, C4<0011>;
P_0x8d841a0 .param/l "ADDER_START" 3 47, C4<0000>;
P_0x8d841b4 .param/l "ALU_ADD" 3 10, C4<0000>;
P_0x8d841c8 .param/l "ALU_MUL" 3 12, C4<0010>;
P_0x8d841dc .param/l "ALU_SUB" 3 11, C4<0001>;
P_0x8d841f0 .param/l "BGE_IMM_START" 3 22, +C4<010110>;
P_0x8d84204 .param/l "BGE_PCOFFSET_START" 3 23, +C4<01001>;
P_0x8d84218 .param/l "BLOCK_SIZE" 3 6, +C4<010000>;
P_0x8d8422c .param/l "BRANCH_NUM" 3 43, C4<0001>;
P_0x8d84240 .param/l "BRANCH_START" 3 49, C4<00101>;
P_0x8d84254 .param/l "CACHE_SIZE" 3 7, +C4<010000000000>;
P_0x8d84268 .param/l "FU_INDEX" 3 53, +C4<0100>;
P_0x8d8427c .param/l "FU_NUM" 3 46, C4<00001011>;
P_0x8d84290 .param/l "IMM_START" 3 20, +C4<010001>;
P_0x8d842a4 .param/l "INST_ADD" 3 24, C4<0000>;
P_0x8d842b8 .param/l "INST_ADDI" 3 29, C4<0101>;
P_0x8d842cc .param/l "INST_BGE" 3 37, C4<1101>;
P_0x8d842e0 .param/l "INST_J" 3 35, C4<1011>;
P_0x8d842f4 .param/l "INST_JR" 3 36, C4<1100>;
P_0x8d84308 .param/l "INST_LI" 3 34, C4<1010>;
P_0x8d8431c .param/l "INST_LW" 3 32, C4<1000>;
P_0x8d84330 .param/l "INST_LWRR" 3 27, C4<0011>;
P_0x8d84344 .param/l "INST_MUL" 3 26, C4<0010>;
P_0x8d84358 .param/l "INST_MULI" 3 31, C4<0111>;
P_0x8d8436c .param/l "INST_START" 3 15, +C4<011111>;
P_0x8d84380 .param/l "INST_SUB" 3 25, C4<0001>;
P_0x8d84394 .param/l "INST_SUBI" 3 30, C4<0110>;
P_0x8d843a8 .param/l "INST_SW" 3 33, C4<1001>;
P_0x8d843bc .param/l "INST_SWRR" 3 28, C4<0100>;
P_0x8d843d0 .param/l "J_PCOFFSET_START" 3 21, +C4<011011>;
P_0x8d843e4 .param/l "LOADER_NUM" 3 45, C4<0011>;
P_0x8d843f8 .param/l "LOADER_START" 3 51, C4<0001000>;
P_0x8d8440c .param/l "MEM_SIZE" 3 2, +C4<010000000000>;
P_0x8d84420 .param/l "MEM_STALL" 3 56, +C4<01100100>;
P_0x8d84434 .param/l "MULTER_NUM" 3 42, C4<0010>;
P_0x8d84448 .param/l "MULTER_START" 3 48, C4<0011>;
P_0x8d8445c .param/l "MUL_STALL" 3 55, +C4<011>;
P_0x8d84470 .param/l "NO_FU" 3 52, C4<1111>;
P_0x8d84484 .param/l "NULL" 3 62, +C4<01111>;
P_0x8d84498 .param/l "OPCODE_WIDTH" 3 16, +C4<0100>;
P_0x8d844ac .param/l "RB_INDEX" 3 60, +C4<0100>;
P_0x8d844c0 .param/l "RB_SIZE" 3 59, +C4<01111>;
P_0x8d844d4 .param/l "RD_START" 3 18, +C4<011011>;
P_0x8d844e8 .param/l "READY" 3 61, +C4<01111>;
P_0x8d844fc .param/l "REG_FILE_SIZE" 3 4, +C4<0100000>;
P_0x8d84510 .param/l "REG_INDEX" 3 3, +C4<0101>;
P_0x8d84524 .param/l "RS_START" 3 17, +C4<010110>;
P_0x8d84538 .param/l "RT_START" 3 19, +C4<010001>;
P_0x8d8454c .param/l "STORER_NUM" 3 44, C4<0010>;
P_0x8d84560 .param/l "STORER_START" 3 50, C4<000110>;
P_0x8d84574 .param/l "TAG_SIZE" 3 8, +C4<010010>;
P_0x8d84588 .param/l "WORD_SIZE" 3 1, +C4<0100000>;
v0x8d85768_0 .var "CDB_data_addr", 479 0;
v0x8d857e8_0 .var "CDB_data_data", 479 0;
v0x8d85838_0 .var "CDB_data_valid", 14 0;
v0x8d85888_0 .alias "RB_index_bus", 43 0, v0x8d89130_0;
v0x8d858d8_0 .alias "addr_bus", 63 0, v0x8d89180_0;
v0x8d85928_0 .alias "clk", 0 0, v0x8d88380_0;
v0x8d85978_0 .alias "data_bus", 351 0, v0x8d891d0_0;
v0x8d859c8_0 .alias "reset", 0 0, v0x8d884c0_0;
v0x8d85a40_0 .alias "valid_bus", 10 0, v0x8d89220_0;
E_0x8d7fc80/0 .event negedge, v0x8d62770_0;
E_0x8d7fc80/1 .event posedge, v0x8d83b40_0;
E_0x8d7fc80 .event/or E_0x8d7fc80/0, E_0x8d7fc80/1;
S_0x8d855b8 .scope function, "readData" "readData" 6 70, 6 70, S_0x8d83f60;
 .timescale -9 -10;
v0x8d85638_0 .var "data_bus", 351 0;
v0x8d856a8_0 .var "fuindex", 31 0;
v0x8d85708_0 .var "readData", 31 0;
TD_CPU.data_ctrl.readData ;
    %load/v 8, v0x8d85638_0, 352;
    %load/v 360, v0x8d856a8_0, 32;
    %movi 392, 0, 7;
    %muli 360, 32, 39;
    %ix/get 0, 360, 39;
    %shiftr/i0  8, 352;
    %set/v v0x8d85708_0, 8, 32;
    %end;
S_0x8d85408 .scope function, "readIndex" "readIndex" 6 62, 6 62, S_0x8d83f60;
 .timescale -9 -10;
v0x8d85488_0 .var "RB_index_bus", 43 0;
v0x8d854f8_0 .var "fuindex", 31 0;
v0x8d85558_0 .var "readIndex", 3 0;
TD_CPU.data_ctrl.readIndex ;
    %load/v 8, v0x8d85488_0, 44;
    %load/v 52, v0x8d854f8_0, 32;
    %mov 84, 0, 4;
    %muli 52, 4, 36;
    %ix/get 0, 52, 36;
    %shiftr/i0  8, 44;
    %set/v v0x8d85558_0, 8, 4;
    %end;
S_0x8d85258 .scope function, "readValid" "readValid" 6 78, 6 78, S_0x8d83f60;
 .timescale -9 -10;
v0x8d852d8_0 .var "fuindex", 31 0;
v0x8d85348_0 .var "readValid", 0 0;
v0x8d853a8_0 .var "valid_bus", 10 0;
TD_CPU.data_ctrl.readValid ;
    %load/v 8, v0x8d853a8_0, 11;
    %load/v 19, v0x8d852d8_0, 32;
    %ix/get 0, 19, 32;
    %shiftr/i0  8, 11;
    %set/v v0x8d85348_0, 8, 1;
    %end;
S_0x8d84f78 .scope begin, "setCDB" "setCDB" 6 22, 6 22, S_0x8d83f60;
 .timescale -9 -10;
v0x8d84ff8_0 .var "data", 479 0;
v0x8d85068_0 .var "data_each", 479 0;
v0x8d850c8_0 .var "i", 31 0;
v0x8d85128_0 .var "index", 3 0;
v0x8d85178_0 .var "valid", 14 0;
v0x8d851d8_0 .var "valid_each", 14 0;
S_0x8d7bf80 .scope module, "RB" "reorder_buffer" 2 94, 7 3, S_0x8d3d850;
 .timescale -9 -10;
P_0x8d7c004 .param/l "ADDER_NUM" 3 41, C4<0011>;
P_0x8d7c018 .param/l "ADDER_START" 3 47, C4<0000>;
P_0x8d7c02c .param/l "ALU_ADD" 3 10, C4<0000>;
P_0x8d7c040 .param/l "ALU_MUL" 3 12, C4<0010>;
P_0x8d7c054 .param/l "ALU_SUB" 3 11, C4<0001>;
P_0x8d7c068 .param/l "BGE_IMM_START" 3 22, +C4<010110>;
P_0x8d7c07c .param/l "BGE_PCOFFSET_START" 3 23, +C4<01001>;
P_0x8d7c090 .param/l "BLOCK_SIZE" 3 6, +C4<010000>;
P_0x8d7c0a4 .param/l "BRANCH_NUM" 3 43, C4<0001>;
P_0x8d7c0b8 .param/l "BRANCH_START" 3 49, C4<00101>;
P_0x8d7c0cc .param/l "CACHE_SIZE" 3 7, +C4<010000000000>;
P_0x8d7c0e0 .param/l "FU_INDEX" 3 53, +C4<0100>;
P_0x8d7c0f4 .param/l "FU_NUM" 3 46, C4<00001011>;
P_0x8d7c108 .param/l "IMM_START" 3 20, +C4<010001>;
P_0x8d7c11c .param/l "INST_ADD" 3 24, C4<0000>;
P_0x8d7c130 .param/l "INST_ADDI" 3 29, C4<0101>;
P_0x8d7c144 .param/l "INST_BGE" 3 37, C4<1101>;
P_0x8d7c158 .param/l "INST_J" 3 35, C4<1011>;
P_0x8d7c16c .param/l "INST_JR" 3 36, C4<1100>;
P_0x8d7c180 .param/l "INST_LI" 3 34, C4<1010>;
P_0x8d7c194 .param/l "INST_LW" 3 32, C4<1000>;
P_0x8d7c1a8 .param/l "INST_LWRR" 3 27, C4<0011>;
P_0x8d7c1bc .param/l "INST_MUL" 3 26, C4<0010>;
P_0x8d7c1d0 .param/l "INST_MULI" 3 31, C4<0111>;
P_0x8d7c1e4 .param/l "INST_START" 3 15, +C4<011111>;
P_0x8d7c1f8 .param/l "INST_SUB" 3 25, C4<0001>;
P_0x8d7c20c .param/l "INST_SUBI" 3 30, C4<0110>;
P_0x8d7c220 .param/l "INST_SW" 3 33, C4<1001>;
P_0x8d7c234 .param/l "INST_SWRR" 3 28, C4<0100>;
P_0x8d7c248 .param/l "J_PCOFFSET_START" 3 21, +C4<011011>;
P_0x8d7c25c .param/l "LOADER_NUM" 3 45, C4<0011>;
P_0x8d7c270 .param/l "LOADER_START" 3 51, C4<0001000>;
P_0x8d7c284 .param/l "MEM_SIZE" 3 2, +C4<010000000000>;
P_0x8d7c298 .param/l "MEM_STALL" 3 56, +C4<01100100>;
P_0x8d7c2ac .param/l "MULTER_NUM" 3 42, C4<0010>;
P_0x8d7c2c0 .param/l "MULTER_START" 3 48, C4<0011>;
P_0x8d7c2d4 .param/l "MUL_STALL" 3 55, +C4<011>;
P_0x8d7c2e8 .param/l "NO_FU" 3 52, C4<1111>;
P_0x8d7c2fc .param/l "NULL" 3 62, +C4<01111>;
P_0x8d7c310 .param/l "OPCODE_WIDTH" 3 16, +C4<0100>;
P_0x8d7c324 .param/l "RB_INDEX" 3 60, +C4<0100>;
P_0x8d7c338 .param/l "RB_SIZE" 3 59, +C4<01111>;
P_0x8d7c34c .param/l "RD_START" 3 18, +C4<011011>;
P_0x8d7c360 .param/l "READY" 3 61, +C4<01111>;
P_0x8d7c374 .param/l "REG_FILE_SIZE" 3 4, +C4<0100000>;
P_0x8d7c388 .param/l "REG_INDEX" 3 3, +C4<0101>;
P_0x8d7c39c .param/l "RS_START" 3 17, +C4<010110>;
P_0x8d7c3b0 .param/l "RT_START" 3 19, +C4<010001>;
P_0x8d7c3c4 .param/l "STORER_NUM" 3 44, C4<0010>;
P_0x8d7c3d8 .param/l "STORER_START" 3 50, C4<000110>;
P_0x8d7c3ec .param/l "TAG_SIZE" 3 8, +C4<010010>;
P_0x8d7c400 .param/l "WORD_SIZE" 3 1, +C4<0100000>;
v0x8d82dc8_0 .alias "CDB_data_addr", 479 0, v0x8d88f18_0;
v0x8d82e38_0 .alias "CDB_data_data", 479 0, v0x8d88fa0_0;
v0x8d82e88_0 .alias "CDB_data_valid", 14 0, v0x8d88ff0_0;
v0x8d82ed8_0 .var "CDB_inst_RBindex", 3 0;
v0x8d82f40_0 .var "CDB_inst_fu", 3 0;
v0x8d82f90_0 .var "CDB_inst_inst", 31 0;
v0x8d83000 .array "RB_Rdest", 0 14, 4 0;
v0x8d83050 .array "RB_addr", 0 14, 31 0;
v0x8d830a0 .array "RB_data", 0 14, 31 0;
v0x8d830f0 .array "RB_data_valid", 0 14, 0 0;
v0x8d83140 .array "RB_fu", 0 14, 3 0;
v0x8d83190_0 .var "RB_index_status_issue", 3 0;
v0x8d83218_0 .var "RB_index_status_wb", 3 0;
v0x8d83278 .array "RB_inst", 0 14, 31 0;
v0x8d832c8 .array "RB_to_mem", 0 14, 0 0;
v0x8d83318 .array "RB_valid", 0 14, 0 0;
v0x8d833b0_0 .var "Rdest_status_issue", 4 0;
v0x8d83410_0 .var "Rdest_status_wb", 4 0;
v0x8d834b0_0 .var "back", 3 0;
v0x8d83500_0 .alias "busy", 10 0, v0x8d89270_0;
v0x8d83460_0 .var "cache_enable", 0 0;
v0x8d835a8_0 .alias "clk", 0 0, v0x8d88380_0;
v0x8d83550_0 .var "cnt", 31 0;
v0x8d83658_0 .var "cnt_enable", 0 0;
v0x8d835f8_0 .var "free", 0 0;
v0x8d83710_0 .var "head", 3 0;
v0x8d836a8_0 .net "hit", 0 0, v0x8d81ba8_0; 1 drivers
v0x8d837f0_0 .net "inst", 31 0, v0x8d81f50_0; 1 drivers
v0x8d83780_0 .net "mem_hit", 0 0, C4<z>; 0 drivers
v0x8d838b8_0 .var "numj", 4 0;
v0x8d83840_0 .var "numk", 4 0;
v0x8d83988_0 .var "op", 3 0;
v0x8d83908_0 .var "pc", 31 0;
v0x8d83a60_0 .alias "qj", 3 0, v0x8d89608_0;
v0x8d839d8_0 .alias "qk", 3 0, v0x8d89658_0;
v0x8d83b40_0 .alias "reset", 0 0, v0x8d884c0_0;
v0x8d83ab0_0 .var "reset_out", 10 0;
v0x8d83c28_0 .var "tail", 3 0;
v0x8d83b90_0 .alias "vj", 31 0, v0x8d898c0_0;
v0x8d83d18_0 .alias "vk", 31 0, v0x8d89800_0;
v0x8d83c78_0 .var "wd_mem", 31 0;
v0x8d83e10_0 .var "wd_reg", 31 0;
v0x8d83d68_0 .var "we_mem", 0 0;
v0x8d83f10_0 .var "we_reg", 0 0;
v0x8d83e60_0 .var "we_status_issue", 0 0;
v0x8d83ec0_0 .var "we_status_wb", 0 0;
v0x8d84020_0 .var "ws_mem", 31 0;
v0x8d84070_0 .var "ws_reg", 4 0;
E_0x8d7c418 .event negedge, v0x8d62770_0;
E_0x8d7cea0 .event posedge, v0x8d83b40_0, v0x8d62770_0;
S_0x8d82b50 .scope task, "getData" "getData" 7 347, 7 347, S_0x8d7bf80;
 .timescale -9 -10;
v0x8d82bd0_0 .var "CDB_data_data", 479 0;
v0x8d82c40_0 .var "CDB_data_valid", 14 0;
v0x8d82ca0_0 .var "V", 31 0;
v0x8d82d00_0 .var "q", 3 0;
v0x8d82d68_0 .var "v", 31 0;
TD_CPU.RB.getData ;
    %load/v 8, v0x8d82d00_0, 4;
    %mov 12, 0, 2;
    %cmpi/u 8, 15, 6;
    %jmp/0xz  T_5.2, 6;
    %load/v 8, v0x8d82d68_0, 32;
    %set/v v0x8d82ca0_0, 8, 32;
    %jmp T_5.3;
T_5.2 ;
    %load/v 8, v0x8d82c40_0, 15;
    %set/v v0x8d820c0_0, 8, 15;
    %load/v 8, v0x8d82d00_0, 4;
    %set/v v0x8d82110_0, 8, 4;
    %fork TD_CPU.RB.readValidBus, S_0x8d82040;
    %join;
    %load/v  8, v0x8d82160_0, 1;
    %jmp/0xz  T_5.4, 8;
    %load/v 8, v0x8d82bd0_0, 480;
    %set/v v0x8d82230_0, 8, 480;
    %load/v 8, v0x8d82d00_0, 4;
    %set/v v0x8d82290_0, 8, 4;
    %fork TD_CPU.RB.readDataBus, S_0x8d821b0;
    %join;
    %load/v  8, v0x8d822f0_0, 32;
    %set/v v0x8d82ca0_0, 8, 32;
    %jmp T_5.5;
T_5.4 ;
    %vpi_call 7 360 "$display", $realtime, "fatal: oprand for BGE is not ready";
    %vpi_call 7 361 "$finish";
T_5.5 ;
T_5.3 ;
    %end;
S_0x8d82950 .scope task, "getFuStartAndNum" "getFuStartAndNum" 7 261, 7 261, S_0x8d7bf80;
 .timescale -9 -10;
v0x8d829d0_0 .var "fu_end", 3 0;
v0x8d82a40_0 .var "fu_num", 3 0;
v0x8d82aa0_0 .var "fu_start", 3 0;
v0x8d82b00_0 .var "op", 3 0;
TD_CPU.RB.getFuStartAndNum ;
    %load/v 8, v0x8d82b00_0, 4;
    %cmpi/u 8, 0, 4;
    %jmp/1 T_6.6, 6;
    %cmpi/u 8, 1, 4;
    %jmp/1 T_6.7, 6;
    %cmpi/u 8, 2, 4;
    %jmp/1 T_6.8, 6;
    %cmpi/u 8, 3, 4;
    %jmp/1 T_6.9, 6;
    %cmpi/u 8, 4, 4;
    %jmp/1 T_6.10, 6;
    %cmpi/u 8, 5, 4;
    %jmp/1 T_6.11, 6;
    %cmpi/u 8, 6, 4;
    %jmp/1 T_6.12, 6;
    %cmpi/u 8, 7, 4;
    %jmp/1 T_6.13, 6;
    %cmpi/u 8, 8, 4;
    %jmp/1 T_6.14, 6;
    %cmpi/u 8, 9, 4;
    %jmp/1 T_6.15, 6;
    %cmpi/u 8, 10, 4;
    %jmp/1 T_6.16, 6;
    %cmpi/u 8, 13, 4;
    %jmp/1 T_6.17, 6;
    %vpi_call 7 317 "$display", $realtime, "fatal: RB is issuing a jump";
    %vpi_call 7 318 "$finish";
    %jmp T_6.19;
T_6.6 ;
    %set/v v0x8d82aa0_0, 0, 4;
    %movi 8, 3, 4;
    %set/v v0x8d82a40_0, 8, 4;
    %jmp T_6.19;
T_6.7 ;
    %set/v v0x8d82aa0_0, 0, 4;
    %movi 8, 3, 4;
    %set/v v0x8d82a40_0, 8, 4;
    %jmp T_6.19;
T_6.8 ;
    %movi 8, 3, 4;
    %set/v v0x8d82aa0_0, 8, 4;
    %movi 8, 2, 4;
    %set/v v0x8d82a40_0, 8, 4;
    %jmp T_6.19;
T_6.9 ;
    %movi 8, 8, 7;
    %set/v v0x8d82aa0_0, 8, 4;
    %movi 8, 3, 4;
    %set/v v0x8d82a40_0, 8, 4;
    %jmp T_6.19;
T_6.10 ;
    %movi 8, 6, 6;
    %set/v v0x8d82aa0_0, 8, 4;
    %movi 8, 2, 4;
    %set/v v0x8d82a40_0, 8, 4;
    %jmp T_6.19;
T_6.11 ;
    %set/v v0x8d82aa0_0, 0, 4;
    %movi 8, 3, 4;
    %set/v v0x8d82a40_0, 8, 4;
    %jmp T_6.19;
T_6.12 ;
    %set/v v0x8d82aa0_0, 0, 4;
    %movi 8, 3, 4;
    %set/v v0x8d82a40_0, 8, 4;
    %jmp T_6.19;
T_6.13 ;
    %movi 8, 3, 4;
    %set/v v0x8d82aa0_0, 8, 4;
    %movi 8, 2, 4;
    %set/v v0x8d82a40_0, 8, 4;
    %jmp T_6.19;
T_6.14 ;
    %movi 8, 8, 7;
    %set/v v0x8d82aa0_0, 8, 4;
    %movi 8, 3, 4;
    %set/v v0x8d82a40_0, 8, 4;
    %jmp T_6.19;
T_6.15 ;
    %movi 8, 6, 6;
    %set/v v0x8d82aa0_0, 8, 4;
    %movi 8, 2, 4;
    %set/v v0x8d82a40_0, 8, 4;
    %jmp T_6.19;
T_6.16 ;
    %movi 8, 8, 7;
    %set/v v0x8d82aa0_0, 8, 4;
    %movi 8, 3, 4;
    %set/v v0x8d82a40_0, 8, 4;
    %jmp T_6.19;
T_6.17 ;
    %movi 8, 5, 5;
    %set/v v0x8d82aa0_0, 8, 4;
    %movi 8, 1, 4;
    %set/v v0x8d82a40_0, 8, 4;
    %jmp T_6.19;
T_6.19 ;
    %load/v 8, v0x8d82aa0_0, 4;
    %mov 12, 0, 2;
    %mov 14, 0, 26;
    %load/v 40, v0x8d82a40_0, 4;
    %mov 44, 0, 2;
    %mov 46, 0, 26;
    %add 8, 40, 32;
    %subi 8, 1, 32;
    %set/v v0x8d829d0_0, 8, 4;
    %end;
S_0x8d82800 .scope function, "dec" "dec" 7 340, 7 340, S_0x8d7bf80;
 .timescale -9 -10;
v0x8d82880_0 .var "dec", 3 0;
v0x8d828f0_0 .var "ptr", 3 0;
TD_CPU.RB.dec ;
    %load/v 8, v0x8d828f0_0, 4;
    %mov 12, 0, 28;
    %subi 8, 1, 32;
    %movi 40, 15, 32;
    %mod 8, 40, 32;
    %set/v v0x8d82880_0, 8, 4;
    %end;
S_0x8d82650 .scope function, "getRdest" "getRdest" 7 252, 7 252, S_0x8d7bf80;
 .timescale -9 -10;
v0x8d826d0_0 .var "getRdest", 4 0;
v0x8d82740_0 .var "inst", 31 0;
v0x8d827a0_0 .var "op", 3 0;
TD_CPU.RB.getRdest ;
    %ix/load 1, 28, 0;
    %mov 4, 0, 1;
    %jmp/1 T_8.20, 4;
    %load/x1p 8, v0x8d82740_0, 4;
    %jmp T_8.21;
T_8.20 ;
    %mov 8, 2, 4;
T_8.21 ;
; Save base=8 wid=4 in lookaside.
    %set/v v0x8d827a0_0, 8, 4;
    %ix/load 1, 23, 0;
    %mov 4, 0, 1;
    %jmp/1 T_8.22, 4;
    %load/x1p 8, v0x8d82740_0, 5;
    %jmp T_8.23;
T_8.22 ;
    %mov 8, 2, 5;
T_8.23 ;
; Save base=8 wid=5 in lookaside.
    %set/v v0x8d826d0_0, 8, 5;
    %end;
S_0x8d82500 .scope function, "inc" "inc" 7 333, 7 333, S_0x8d7bf80;
 .timescale -9 -10;
v0x8d82580_0 .var "inc", 3 0;
v0x8d825f0_0 .var "ptr", 3 0;
TD_CPU.RB.inc ;
    %load/v 8, v0x8d825f0_0, 4;
    %mov 12, 0, 28;
    %addi 8, 1, 32;
    %movi 40, 15, 32;
    %mod 8, 40, 32;
    %set/v v0x8d82580_0, 8, 4;
    %end;
S_0x8d82350 .scope function, "notFull" "notFull" 7 325, 7 325, S_0x8d7bf80;
 .timescale -9 -10;
v0x8d823d0_0 .var "back", 3 0;
v0x8d82440_0 .var "head", 3 0;
v0x8d824a0_0 .var "notFull", 0 0;
TD_CPU.RB.notFull ;
    %load/v 13, v0x8d823d0_0, 4;
    %set/v v0x8d825f0_0, 13, 4;
    %fork TD_CPU.RB.inc, S_0x8d82500;
    %join;
    %load/v  13, v0x8d82580_0, 4;
    %mov 8, 13, 4;
    %mov 12, 0, 1;
    %load/v 13, v0x8d82440_0, 4;
    %mov 17, 0, 1;
    %cmp/u 8, 13, 5;
    %mov 8, 4, 1;
    %inv 8, 1;
    %set/v v0x8d824a0_0, 8, 1;
    %end;
S_0x8d821b0 .scope function, "readDataBus" "readDataBus" 7 366, 7 366, S_0x8d7bf80;
 .timescale -9 -10;
v0x8d82230_0 .var "CDB_data_data", 479 0;
v0x8d82290_0 .var "index", 3 0;
v0x8d822f0_0 .var "readDataBus", 31 0;
TD_CPU.RB.readDataBus ;
    %load/v 8, v0x8d82230_0, 480;
    %load/v 488, v0x8d82290_0, 4;
    %movi 492, 0, 7;
    %muli 488, 32, 11;
    %ix/get 0, 488, 11;
    %shiftr/i0  8, 480;
    %set/v v0x8d822f0_0, 8, 32;
    %end;
S_0x8d82040 .scope function, "readValidBus" "readValidBus" 7 375, 7 375, S_0x8d7bf80;
 .timescale -9 -10;
v0x8d820c0_0 .var "CDB_data_valid", 14 0;
v0x8d82110_0 .var "index", 3 0;
v0x8d82160_0 .var "readValidBus", 0 0;
TD_CPU.RB.readValidBus ;
    %load/v 8, v0x8d820c0_0, 15;
    %load/v 23, v0x8d82110_0, 4;
    %ix/get 0, 23, 4;
    %shiftr/i0  8, 15;
    %set/v v0x8d82160_0, 8, 1;
    %end;
S_0x8d7d780 .scope module, "icache" "inst_cache" 7 63, 8 2, S_0x8d7bf80;
 .timescale -9 -10;
P_0x8d7d804 .param/l "ADDER_NUM" 3 41, C4<0011>;
P_0x8d7d818 .param/l "ADDER_START" 3 47, C4<0000>;
P_0x8d7d82c .param/l "ALU_ADD" 3 10, C4<0000>;
P_0x8d7d840 .param/l "ALU_MUL" 3 12, C4<0010>;
P_0x8d7d854 .param/l "ALU_SUB" 3 11, C4<0001>;
P_0x8d7d868 .param/l "BGE_IMM_START" 3 22, +C4<010110>;
P_0x8d7d87c .param/l "BGE_PCOFFSET_START" 3 23, +C4<01001>;
P_0x8d7d890 .param/l "BLOCK_SIZE" 3 6, +C4<010000>;
P_0x8d7d8a4 .param/l "BRANCH_NUM" 3 43, C4<0001>;
P_0x8d7d8b8 .param/l "BRANCH_START" 3 49, C4<00101>;
P_0x8d7d8cc .param/l "CACHE_SIZE" 3 7, +C4<010000000000>;
P_0x8d7d8e0 .param/l "FU_INDEX" 3 53, +C4<0100>;
P_0x8d7d8f4 .param/l "FU_NUM" 3 46, C4<00001011>;
P_0x8d7d908 .param/l "IMM_START" 3 20, +C4<010001>;
P_0x8d7d91c .param/l "INST_ADD" 3 24, C4<0000>;
P_0x8d7d930 .param/l "INST_ADDI" 3 29, C4<0101>;
P_0x8d7d944 .param/l "INST_BGE" 3 37, C4<1101>;
P_0x8d7d958 .param/l "INST_J" 3 35, C4<1011>;
P_0x8d7d96c .param/l "INST_JR" 3 36, C4<1100>;
P_0x8d7d980 .param/l "INST_LI" 3 34, C4<1010>;
P_0x8d7d994 .param/l "INST_LW" 3 32, C4<1000>;
P_0x8d7d9a8 .param/l "INST_LWRR" 3 27, C4<0011>;
P_0x8d7d9bc .param/l "INST_MUL" 3 26, C4<0010>;
P_0x8d7d9d0 .param/l "INST_MULI" 3 31, C4<0111>;
P_0x8d7d9e4 .param/l "INST_START" 3 15, +C4<011111>;
P_0x8d7d9f8 .param/l "INST_SUB" 3 25, C4<0001>;
P_0x8d7da0c .param/l "INST_SUBI" 3 30, C4<0110>;
P_0x8d7da20 .param/l "INST_SW" 3 33, C4<1001>;
P_0x8d7da34 .param/l "INST_SWRR" 3 28, C4<0100>;
P_0x8d7da48 .param/l "J_PCOFFSET_START" 3 21, +C4<011011>;
P_0x8d7da5c .param/l "LOADER_NUM" 3 45, C4<0011>;
P_0x8d7da70 .param/l "LOADER_START" 3 51, C4<0001000>;
P_0x8d7da84 .param/l "MEM_SIZE" 3 2, +C4<010000000000>;
P_0x8d7da98 .param/l "MEM_STALL" 3 56, +C4<01100100>;
P_0x8d7daac .param/l "MULTER_NUM" 3 42, C4<0010>;
P_0x8d7dac0 .param/l "MULTER_START" 3 48, C4<0011>;
P_0x8d7dad4 .param/l "MUL_STALL" 3 55, +C4<011>;
P_0x8d7dae8 .param/l "NO_FU" 3 52, C4<1111>;
P_0x8d7dafc .param/l "NULL" 3 62, +C4<01111>;
P_0x8d7db10 .param/l "OPCODE_WIDTH" 3 16, +C4<0100>;
P_0x8d7db24 .param/l "RB_INDEX" 3 60, +C4<0100>;
P_0x8d7db38 .param/l "RB_SIZE" 3 59, +C4<01111>;
P_0x8d7db4c .param/l "RD_START" 3 18, +C4<011011>;
P_0x8d7db60 .param/l "READY" 3 61, +C4<01111>;
P_0x8d7db74 .param/l "REG_FILE_SIZE" 3 4, +C4<0100000>;
P_0x8d7db88 .param/l "REG_INDEX" 3 3, +C4<0101>;
P_0x8d7db9c .param/l "RS_START" 3 17, +C4<010110>;
P_0x8d7dbb0 .param/l "RT_START" 3 19, +C4<010001>;
P_0x8d7dbc4 .param/l "STORER_NUM" 3 44, C4<0010>;
P_0x8d7dbd8 .param/l "STORER_START" 3 50, C4<000110>;
P_0x8d7dbec .param/l "TAG_SIZE" 3 8, +C4<010010>;
P_0x8d7dc00 .param/l "WORD_SIZE" 3 1, +C4<0100000>;
v0x8d81aa8 .array "cache", 0 1023, 511 0;
v0x8d81af8_0 .net "cache_enable", 0 0, v0x8d83460_0; 1 drivers
v0x8d81b58_0 .alias "clk", 0 0, v0x8d88380_0;
v0x8d81ba8_0 .var "hit", 0 0;
v0x8d81dc0_0 .net "index", 9 0, L_0x8d90428; 1 drivers
v0x8d81e10_0 .net "inst", 31 0, L_0x8d831e0; 1 drivers
v0x8d81e60_0 .net "inst_block", 511 0, L_0x8d8fc48; 1 drivers
v0x8d81eb0_0 .net "inst_tag", 17 0, L_0x8d90478; 1 drivers
v0x8d81f00_0 .net "offset", 3 0, L_0x8d903d8; 1 drivers
v0x8d81f50_0 .var "out", 31 0;
v0x8d81fa0_0 .net "ptr", 31 0, v0x8d83908_0; 1 drivers
v0x8d81ff0 .array "tag", 0 1023, 17 0;
L_0x8d903d8 .part v0x8d83908_0, 0, 4;
L_0x8d90428 .part v0x8d83908_0, 4, 10;
L_0x8d90478 .part v0x8d83908_0, 14, 18;
S_0x8d7e7b0 .scope module, "imemory" "inst_memory" 8 15, 9 1, S_0x8d7d780;
 .timescale -9 -10;
P_0x8d7e834 .param/l "ADDER_NUM" 3 41, C4<0011>;
P_0x8d7e848 .param/l "ADDER_START" 3 47, C4<0000>;
P_0x8d7e85c .param/l "ALU_ADD" 3 10, C4<0000>;
P_0x8d7e870 .param/l "ALU_MUL" 3 12, C4<0010>;
P_0x8d7e884 .param/l "ALU_SUB" 3 11, C4<0001>;
P_0x8d7e898 .param/l "BGE_IMM_START" 3 22, +C4<010110>;
P_0x8d7e8ac .param/l "BGE_PCOFFSET_START" 3 23, +C4<01001>;
P_0x8d7e8c0 .param/l "BLOCK_SIZE" 3 6, +C4<010000>;
P_0x8d7e8d4 .param/l "BRANCH_NUM" 3 43, C4<0001>;
P_0x8d7e8e8 .param/l "BRANCH_START" 3 49, C4<00101>;
P_0x8d7e8fc .param/l "CACHE_SIZE" 3 7, +C4<010000000000>;
P_0x8d7e910 .param/l "FU_INDEX" 3 53, +C4<0100>;
P_0x8d7e924 .param/l "FU_NUM" 3 46, C4<00001011>;
P_0x8d7e938 .param/l "IMM_START" 3 20, +C4<010001>;
P_0x8d7e94c .param/l "INST_ADD" 3 24, C4<0000>;
P_0x8d7e960 .param/l "INST_ADDI" 3 29, C4<0101>;
P_0x8d7e974 .param/l "INST_BGE" 3 37, C4<1101>;
P_0x8d7e988 .param/l "INST_J" 3 35, C4<1011>;
P_0x8d7e99c .param/l "INST_JR" 3 36, C4<1100>;
P_0x8d7e9b0 .param/l "INST_LI" 3 34, C4<1010>;
P_0x8d7e9c4 .param/l "INST_LW" 3 32, C4<1000>;
P_0x8d7e9d8 .param/l "INST_LWRR" 3 27, C4<0011>;
P_0x8d7e9ec .param/l "INST_MUL" 3 26, C4<0010>;
P_0x8d7ea00 .param/l "INST_MULI" 3 31, C4<0111>;
P_0x8d7ea14 .param/l "INST_START" 3 15, +C4<011111>;
P_0x8d7ea28 .param/l "INST_SUB" 3 25, C4<0001>;
P_0x8d7ea3c .param/l "INST_SUBI" 3 30, C4<0110>;
P_0x8d7ea50 .param/l "INST_SW" 3 33, C4<1001>;
P_0x8d7ea64 .param/l "INST_SWRR" 3 28, C4<0100>;
P_0x8d7ea78 .param/l "J_PCOFFSET_START" 3 21, +C4<011011>;
P_0x8d7ea8c .param/l "LOADER_NUM" 3 45, C4<0011>;
P_0x8d7eaa0 .param/l "LOADER_START" 3 51, C4<0001000>;
P_0x8d7eab4 .param/l "MEM_SIZE" 3 2, +C4<010000000000>;
P_0x8d7eac8 .param/l "MEM_STALL" 3 56, +C4<01100100>;
P_0x8d7eadc .param/l "MULTER_NUM" 3 42, C4<0010>;
P_0x8d7eaf0 .param/l "MULTER_START" 3 48, C4<0011>;
P_0x8d7eb04 .param/l "MUL_STALL" 3 55, +C4<011>;
P_0x8d7eb18 .param/l "NO_FU" 3 52, C4<1111>;
P_0x8d7eb2c .param/l "NULL" 3 62, +C4<01111>;
P_0x8d7eb40 .param/l "OPCODE_WIDTH" 3 16, +C4<0100>;
P_0x8d7eb54 .param/l "RB_INDEX" 3 60, +C4<0100>;
P_0x8d7eb68 .param/l "RB_SIZE" 3 59, +C4<01111>;
P_0x8d7eb7c .param/l "RD_START" 3 18, +C4<011011>;
P_0x8d7eb90 .param/l "READY" 3 61, +C4<01111>;
P_0x8d7eba4 .param/l "REG_FILE_SIZE" 3 4, +C4<0100000>;
P_0x8d7ebb8 .param/l "REG_INDEX" 3 3, +C4<0101>;
P_0x8d7ebcc .param/l "RS_START" 3 17, +C4<010110>;
P_0x8d7ebe0 .param/l "RT_START" 3 19, +C4<010001>;
P_0x8d7ebf4 .param/l "STORER_NUM" 3 44, C4<0010>;
P_0x8d7ec08 .param/l "STORER_START" 3 50, C4<000110>;
P_0x8d7ec1c .param/l "TAG_SIZE" 3 8, +C4<010010>;
P_0x8d7ec30 .param/l "WORD_SIZE" 3 1, +C4<0100000>;
L_0x8d831e0 .functor BUFZ 32, L_0x8d90278, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>;
v0x8d7f898_0 .net *"_s1", 27 0, L_0x8d8d5b0; 1 drivers
v0x8d7f908_0 .net *"_s102", 26 0, C4<000000000000000000000000000>; 1 drivers
v0x8d7f968_0 .net *"_s103", 31 0, L_0x8d8eb78; 1 drivers
v0x8d7f9c8_0 .net *"_s104", 31 0, L_0x8d8ee48; 1 drivers
v0x8d7fa18_0 .net *"_s106", 31 0, L_0x8d8ed38; 1 drivers
v0x8d7fa78_0 .net *"_s108", 4 0, C4<01010>; 1 drivers
v0x8d7fad8_0 .net *"_s112", 26 0, C4<000000000000000000000000000>; 1 drivers
v0x8d7fb38_0 .net *"_s113", 31 0, L_0x8d8ef90; 1 drivers
v0x8d7fbc0_0 .net *"_s114", 31 0, L_0x8d8f0a8; 1 drivers
v0x8d7fc20_0 .net *"_s116", 31 0, L_0x8d8f168; 1 drivers
v0x8d7fcb0_0 .net *"_s118", 4 0, C4<01011>; 1 drivers
v0x8d7fd10_0 .net *"_s12", 30 0, C4<0000000000000000000000000000000>; 1 drivers
v0x8d7fd70_0 .net *"_s122", 26 0, C4<000000000000000000000000000>; 1 drivers
v0x8d7fdd0_0 .net *"_s123", 31 0, L_0x8d8e640; 1 drivers
v0x8d7fe70_0 .net *"_s124", 31 0, L_0x8d8f328; 1 drivers
v0x8d7fed0_0 .net *"_s126", 31 0, L_0x8d8f1b8; 1 drivers
v0x8d7ff78_0 .net *"_s128", 4 0, C4<01100>; 1 drivers
v0x8d7ffd8_0 .net *"_s13", 31 0, L_0x8d8d790; 1 drivers
v0x8d80078_0 .net *"_s132", 26 0, C4<000000000000000000000000000>; 1 drivers
v0x8d800c8_0 .net *"_s133", 31 0, L_0x8d8f040; 1 drivers
v0x8d80028_0 .net *"_s134", 31 0, L_0x8d8f5d8; 1 drivers
v0x8d80170_0 .net *"_s136", 31 0, L_0x8d8f698; 1 drivers
v0x8d80220_0 .net *"_s138", 4 0, C4<01101>; 1 drivers
v0x8d80270_0 .net *"_s14", 31 0, L_0x8d8d8c0; 1 drivers
v0x8d801c0_0 .net *"_s142", 26 0, C4<000000000000000000000000000>; 1 drivers
v0x8d80328_0 .net *"_s143", 31 0, L_0x8d8f468; 1 drivers
v0x8d802c0_0 .net *"_s144", 31 0, L_0x8d8f808; 1 drivers
v0x8d803e8_0 .net *"_s146", 31 0, L_0x8d8f6e8; 1 drivers
v0x8d80378_0 .net *"_s148", 4 0, C4<01110>; 1 drivers
v0x8d804b0_0 .net *"_s152", 26 0, C4<000000000000000000000000000>; 1 drivers
v0x8d80438_0 .net *"_s153", 31 0, L_0x8d8f530; 1 drivers
v0x8d80580_0 .net *"_s154", 31 0, L_0x8d8f9a0; 1 drivers
v0x8d80500_0 .net *"_s156", 31 0, L_0x8d8e760; 1 drivers
v0x8d80658_0 .net *"_s158", 4 0, C4<01111>; 1 drivers
v0x8d805d0_0 .net *"_s16", 31 0, L_0x8d8d980; 1 drivers
v0x8d80738_0 .net *"_s162", 26 0, C4<000000000000000000000000000>; 1 drivers
v0x8d806a8_0 .net *"_s163", 31 0, L_0x8d8f920; 1 drivers
v0x8d80820_0 .net *"_s164", 31 0, L_0x8d8fd68; 1 drivers
v0x8d80788_0 .net *"_s168", 31 0, L_0x8d90278; 1 drivers
v0x8d80910_0 .net *"_s18", 1 0, C4<01>; 1 drivers
v0x8d80870_0 .net *"_s2", 3 0, C4<0000>; 1 drivers
v0x8d80a08_0 .net *"_s22", 29 0, C4<000000000000000000000000000000>; 1 drivers
v0x8d80960_0 .net *"_s23", 31 0, L_0x8d8d9d0; 1 drivers
v0x8d80b08_0 .net *"_s24", 31 0, L_0x8d8da90; 1 drivers
v0x8d80a58_0 .net *"_s26", 31 0, L_0x8d8db78; 1 drivers
v0x8d80aa8_0 .net *"_s28", 2 0, C4<010>; 1 drivers
v0x8d80c18_0 .net *"_s32", 28 0, C4<00000000000000000000000000000>; 1 drivers
v0x8d80c68_0 .net *"_s33", 31 0, L_0x8d8dbf0; 1 drivers
v0x8d80b58_0 .net *"_s34", 31 0, L_0x8d8dd08; 1 drivers
v0x8d80bb8_0 .net *"_s36", 31 0, L_0x8d8ddf8; 1 drivers
v0x8d80d88_0 .net *"_s38", 2 0, C4<011>; 1 drivers
v0x8d80dd8_0 .net *"_s42", 28 0, C4<00000000000000000000000000000>; 1 drivers
v0x8d80cb8_0 .net *"_s43", 31 0, L_0x8d8ded0; 1 drivers
v0x8d80d18_0 .net *"_s44", 31 0, L_0x8d8dfe0; 1 drivers
v0x8d80f08_0 .net *"_s46", 31 0, L_0x8d8e0e0; 1 drivers
v0x8d80f58_0 .net *"_s48", 3 0, C4<0100>; 1 drivers
v0x8d80e28_0 .net *"_s52", 27 0, C4<0000000000000000000000000000>; 1 drivers
v0x8d80e88_0 .net *"_s53", 31 0, L_0x8d8e160; 1 drivers
v0x8d81098_0 .net *"_s54", 31 0, L_0x8d8e250; 1 drivers
v0x8d810e8_0 .net *"_s56", 31 0, L_0x8d8e2d8; 1 drivers
v0x8d80fa8_0 .net *"_s58", 3 0, C4<0101>; 1 drivers
v0x8d81008_0 .net *"_s6", 31 0, L_0x8d8d720; 1 drivers
v0x8d81238_0 .net *"_s62", 27 0, C4<0000000000000000000000000000>; 1 drivers
v0x8d81288_0 .net *"_s63", 31 0, L_0x8d8e3b0; 1 drivers
v0x8d81138_0 .net *"_s64", 31 0, L_0x8d8e498; 1 drivers
v0x8d81198_0 .net *"_s66", 31 0, L_0x8d8e328; 1 drivers
v0x8d813e8_0 .net *"_s68", 3 0, C4<0110>; 1 drivers
v0x8d81438_0 .net *"_s72", 27 0, C4<0000000000000000000000000000>; 1 drivers
v0x8d812d8_0 .net *"_s73", 31 0, L_0x8d8e5f0; 1 drivers
v0x8d81328_0 .net *"_s74", 31 0, L_0x8d8e6a0; 1 drivers
v0x8d81388_0 .net *"_s76", 31 0, L_0x8d8e7f0; 1 drivers
v0x8d815a8_0 .net *"_s78", 3 0, C4<0111>; 1 drivers
v0x8d81488_0 .net *"_s8", 0 0, C4<0>; 1 drivers
v0x8d814e8_0 .net *"_s82", 27 0, C4<0000000000000000000000000000>; 1 drivers
v0x8d81548_0 .net *"_s83", 31 0, L_0x8d8e8a8; 1 drivers
v0x8d81728_0 .net *"_s84", 31 0, L_0x8d8e9b0; 1 drivers
v0x8d815f8_0 .net *"_s86", 31 0, L_0x8d8e840; 1 drivers
v0x8d81658_0 .net *"_s88", 4 0, C4<01000>; 1 drivers
v0x8d816b8_0 .net *"_s92", 26 0, C4<000000000000000000000000000>; 1 drivers
v0x8d818b8_0 .net *"_s93", 31 0, L_0x8d8ead0; 1 drivers
v0x8d81778_0 .net *"_s94", 31 0, L_0x8d8ec28; 1 drivers
v0x8d817d8_0 .net *"_s96", 31 0, L_0x8d8ece8; 1 drivers
v0x8d81838_0 .net *"_s98", 4 0, C4<01001>; 1 drivers
v0x8d81a58 .array "memory", 0 1023, 31 0;
v0x8d81908_0 .alias "out_block", 511 0, v0x8d81e60_0;
v0x8d81968_0 .alias "out_inst", 31 0, v0x8d81e10_0;
v0x8d819c8_0 .alias "ptr", 31 0, v0x8d81fa0_0;
v0x8d81c08_0 .net "ptr_block", 31 0, L_0x8d8d640; 1 drivers
L_0x8d8d5b0 .part v0x8d83908_0, 4, 28;
L_0x8d8d640 .concat [ 4 28 0 0], C4<0000>, L_0x8d8d5b0;
L_0x8d8d720 .array/port v0x8d81a58, L_0x8d8d8c0;
L_0x8d8d790 .concat [ 1 31 0 0], C4<0>, C4<0000000000000000000000000000000>;
L_0x8d8d8c0 .arith/sum 32, L_0x8d8d640, L_0x8d8d790;
L_0x8d8d980 .array/port v0x8d81a58, L_0x8d8da90;
L_0x8d8d9d0 .concat [ 2 30 0 0], C4<01>, C4<000000000000000000000000000000>;
L_0x8d8da90 .arith/sum 32, L_0x8d8d640, L_0x8d8d9d0;
L_0x8d8db78 .array/port v0x8d81a58, L_0x8d8dd08;
L_0x8d8dbf0 .concat [ 3 29 0 0], C4<010>, C4<00000000000000000000000000000>;
L_0x8d8dd08 .arith/sum 32, L_0x8d8d640, L_0x8d8dbf0;
L_0x8d8ddf8 .array/port v0x8d81a58, L_0x8d8dfe0;
L_0x8d8ded0 .concat [ 3 29 0 0], C4<011>, C4<00000000000000000000000000000>;
L_0x8d8dfe0 .arith/sum 32, L_0x8d8d640, L_0x8d8ded0;
L_0x8d8e0e0 .array/port v0x8d81a58, L_0x8d8e250;
L_0x8d8e160 .concat [ 4 28 0 0], C4<0100>, C4<0000000000000000000000000000>;
L_0x8d8e250 .arith/sum 32, L_0x8d8d640, L_0x8d8e160;
L_0x8d8e2d8 .array/port v0x8d81a58, L_0x8d8e498;
L_0x8d8e3b0 .concat [ 4 28 0 0], C4<0101>, C4<0000000000000000000000000000>;
L_0x8d8e498 .arith/sum 32, L_0x8d8d640, L_0x8d8e3b0;
L_0x8d8e328 .array/port v0x8d81a58, L_0x8d8e6a0;
L_0x8d8e5f0 .concat [ 4 28 0 0], C4<0110>, C4<0000000000000000000000000000>;
L_0x8d8e6a0 .arith/sum 32, L_0x8d8d640, L_0x8d8e5f0;
L_0x8d8e7f0 .array/port v0x8d81a58, L_0x8d8e9b0;
L_0x8d8e8a8 .concat [ 4 28 0 0], C4<0111>, C4<0000000000000000000000000000>;
L_0x8d8e9b0 .arith/sum 32, L_0x8d8d640, L_0x8d8e8a8;
L_0x8d8e840 .array/port v0x8d81a58, L_0x8d8ec28;
L_0x8d8ead0 .concat [ 5 27 0 0], C4<01000>, C4<000000000000000000000000000>;
L_0x8d8ec28 .arith/sum 32, L_0x8d8d640, L_0x8d8ead0;
L_0x8d8ece8 .array/port v0x8d81a58, L_0x8d8ee48;
L_0x8d8eb78 .concat [ 5 27 0 0], C4<01001>, C4<000000000000000000000000000>;
L_0x8d8ee48 .arith/sum 32, L_0x8d8d640, L_0x8d8eb78;
L_0x8d8ed38 .array/port v0x8d81a58, L_0x8d8f0a8;
L_0x8d8ef90 .concat [ 5 27 0 0], C4<01010>, C4<000000000000000000000000000>;
L_0x8d8f0a8 .arith/sum 32, L_0x8d8d640, L_0x8d8ef90;
L_0x8d8f168 .array/port v0x8d81a58, L_0x8d8f328;
L_0x8d8e640 .concat [ 5 27 0 0], C4<01011>, C4<000000000000000000000000000>;
L_0x8d8f328 .arith/sum 32, L_0x8d8d640, L_0x8d8e640;
L_0x8d8f1b8 .array/port v0x8d81a58, L_0x8d8f5d8;
L_0x8d8f040 .concat [ 5 27 0 0], C4<01100>, C4<000000000000000000000000000>;
L_0x8d8f5d8 .arith/sum 32, L_0x8d8d640, L_0x8d8f040;
L_0x8d8f698 .array/port v0x8d81a58, L_0x8d8f808;
L_0x8d8f468 .concat [ 5 27 0 0], C4<01101>, C4<000000000000000000000000000>;
L_0x8d8f808 .arith/sum 32, L_0x8d8d640, L_0x8d8f468;
L_0x8d8f6e8 .array/port v0x8d81a58, L_0x8d8f9a0;
L_0x8d8f530 .concat [ 5 27 0 0], C4<01110>, C4<000000000000000000000000000>;
L_0x8d8f9a0 .arith/sum 32, L_0x8d8d640, L_0x8d8f530;
L_0x8d8e760 .array/port v0x8d81a58, L_0x8d8fd68;
L_0x8d8f920 .concat [ 5 27 0 0], C4<01111>, C4<000000000000000000000000000>;
L_0x8d8fd68 .arith/sum 32, L_0x8d8d640, L_0x8d8f920;
LS_0x8d8fc48_0_0 .concat [ 32 32 32 32], L_0x8d8e760, L_0x8d8f6e8, L_0x8d8f698, L_0x8d8f1b8;
LS_0x8d8fc48_0_4 .concat [ 32 32 32 32], L_0x8d8f168, L_0x8d8ed38, L_0x8d8ece8, L_0x8d8e840;
LS_0x8d8fc48_0_8 .concat [ 32 32 32 32], L_0x8d8e7f0, L_0x8d8e328, L_0x8d8e2d8, L_0x8d8e0e0;
LS_0x8d8fc48_0_12 .concat [ 32 32 32 32], L_0x8d8ddf8, L_0x8d8db78, L_0x8d8d980, L_0x8d8d720;
L_0x8d8fc48 .concat [ 128 128 128 128], LS_0x8d8fc48_0_0, LS_0x8d8fc48_0_4, LS_0x8d8fc48_0_8, LS_0x8d8fc48_0_12;
L_0x8d90278 .array/port v0x8d81a58, v0x8d83908_0;
S_0x8d7f7a8 .scope begin, "init" "init" 9 22, 9 22, S_0x8d7e7b0;
 .timescale -9 -10;
v0x8d7f828_0 .var "i", 31 0;
S_0x8d7d690 .scope begin, "rst" "rst" 7 67, 7 67, S_0x8d7bf80;
 .timescale -9 -10;
v0x8d7d710_0 .var "i", 31 0;
S_0x8d7d590 .scope begin, "IF" "IF" 7 84, 7 84, S_0x8d7bf80;
 .timescale -9 -10;
S_0x8d7d610 .scope begin, "addInst" "addInst" 7 94, 7 94, S_0x8d7d590;
 .timescale -9 -10;
S_0x8d7d350 .scope begin, "issue" "issue" 7 106, 7 106, S_0x8d7bf80;
 .timescale -9 -10;
v0x8d7d520_0 .var "inst_now", 31 0;
S_0x8d7d3d0 .scope begin, "issueIfCan" "issueIfCan" 7 108, 7 108, S_0x8d7d350;
 .timescale -9 -10;
v0x8d7d450_0 .var "fuend", 3 0;
v0x8d7d4c0_0 .var "i", 3 0;
S_0x8d7d0d0 .scope begin, "updateCDB" "updateCDB" 7 163, 7 163, S_0x8d7bf80;
 .timescale -9 -10;
v0x8d7d1d0_0 .var "hasBranch", 0 0;
v0x8d7d240_0 .var "i", 31 0;
v0x8d7d2a0_0 .var "mark", 3 0;
v0x8d7d300_0 .var "op", 3 0;
S_0x8d7d150 .scope begin, "updatePCAndResetIfNeed" "updatePCAndResetIfNeed" 7 184, 7 184, S_0x8d7d0d0;
 .timescale -9 -10;
S_0x8d7cf50 .scope begin, "writeBack" "writeBack" 7 199, 7 199, S_0x8d7bf80;
 .timescale -9 -10;
S_0x8d7d050 .scope begin, "writeToReg" "writeToReg" 7 207, 7 207, S_0x8d7cf50;
 .timescale -9 -10;
S_0x8d7cfd0 .scope begin, "writeToMem" "writeToMem" 7 218, 7 218, S_0x8d7cf50;
 .timescale -9 -10;
S_0x8d7ced0 .scope begin, "updateRegStatus" "updateRegStatus" 7 245, 7 245, S_0x8d7bf80;
 .timescale -9 -10;
S_0x8d7bf00 .scope begin, "test" "test" 2 111, 2 111, S_0x8d3d850;
 .timescale -9 -10;
S_0x8d798b8 .scope module, "alu_rs[0]" "ALU_RS" 2 70, 10 1, S_0x8d3d850;
 .timescale -9 -10;
P_0x8d7993c .param/l "ADDER_NUM" 3 41, C4<0011>;
P_0x8d79950 .param/l "ADDER_START" 3 47, C4<0000>;
P_0x8d79964 .param/l "ALU_ADD" 3 10, C4<0000>;
P_0x8d79978 .param/l "ALU_MUL" 3 12, C4<0010>;
P_0x8d7998c .param/l "ALU_SUB" 3 11, C4<0001>;
P_0x8d799a0 .param/l "BGE_IMM_START" 3 22, +C4<010110>;
P_0x8d799b4 .param/l "BGE_PCOFFSET_START" 3 23, +C4<01001>;
P_0x8d799c8 .param/l "BLOCK_SIZE" 3 6, +C4<010000>;
P_0x8d799dc .param/l "BRANCH_NUM" 3 43, C4<0001>;
P_0x8d799f0 .param/l "BRANCH_START" 3 49, C4<00101>;
P_0x8d79a04 .param/l "CACHE_SIZE" 3 7, +C4<010000000000>;
P_0x8d79a18 .param/l "FU_INDEX" 3 53, +C4<0100>;
P_0x8d79a2c .param/l "FU_NUM" 3 46, C4<00001011>;
P_0x8d79a40 .param/l "IMM_START" 3 20, +C4<010001>;
P_0x8d79a54 .param/l "INST_ADD" 3 24, C4<0000>;
P_0x8d79a68 .param/l "INST_ADDI" 3 29, C4<0101>;
P_0x8d79a7c .param/l "INST_BGE" 3 37, C4<1101>;
P_0x8d79a90 .param/l "INST_J" 3 35, C4<1011>;
P_0x8d79aa4 .param/l "INST_JR" 3 36, C4<1100>;
P_0x8d79ab8 .param/l "INST_LI" 3 34, C4<1010>;
P_0x8d79acc .param/l "INST_LW" 3 32, C4<1000>;
P_0x8d79ae0 .param/l "INST_LWRR" 3 27, C4<0011>;
P_0x8d79af4 .param/l "INST_MUL" 3 26, C4<0010>;
P_0x8d79b08 .param/l "INST_MULI" 3 31, C4<0111>;
P_0x8d79b1c .param/l "INST_START" 3 15, +C4<011111>;
P_0x8d79b30 .param/l "INST_SUB" 3 25, C4<0001>;
P_0x8d79b44 .param/l "INST_SUBI" 3 30, C4<0110>;
P_0x8d79b58 .param/l "INST_SW" 3 33, C4<1001>;
P_0x8d79b6c .param/l "INST_SWRR" 3 28, C4<0100>;
P_0x8d79b80 .param/l "J_PCOFFSET_START" 3 21, +C4<011011>;
P_0x8d79b94 .param/l "LOADER_NUM" 3 45, C4<0011>;
P_0x8d79ba8 .param/l "LOADER_START" 3 51, C4<0001000>;
P_0x8d79bbc .param/l "MEM_SIZE" 3 2, +C4<010000000000>;
P_0x8d79bd0 .param/l "MEM_STALL" 3 56, +C4<01100100>;
P_0x8d79be4 .param/l "MULTER_NUM" 3 42, C4<0010>;
P_0x8d79bf8 .param/l "MULTER_START" 3 48, C4<0011>;
P_0x8d79c0c .param/l "MUL_STALL" 3 55, +C4<011>;
P_0x8d79c20 .param/l "NO_FU" 3 52, C4<1111>;
P_0x8d79c34 .param/l "NULL" 3 62, +C4<01111>;
P_0x8d79c48 .param/l "OPCODE_WIDTH" 3 16, +C4<0100>;
P_0x8d79c5c .param/l "RB_INDEX" 3 60, +C4<0100>;
P_0x8d79c70 .param/l "RB_SIZE" 3 59, +C4<01111>;
P_0x8d79c84 .param/l "RD_START" 3 18, +C4<011011>;
P_0x8d79c98 .param/l "READY" 3 61, +C4<01111>;
P_0x8d79cac .param/l "REG_FILE_SIZE" 3 4, +C4<0100000>;
P_0x8d79cc0 .param/l "REG_INDEX" 3 3, +C4<0101>;
P_0x8d79cd4 .param/l "RS_START" 3 17, +C4<010110>;
P_0x8d79ce8 .param/l "RT_START" 3 19, +C4<010001>;
P_0x8d79cfc .param/l "STORER_NUM" 3 44, C4<0010>;
P_0x8d79d10 .param/l "STORER_START" 3 50, C4<000110>;
P_0x8d79d24 .param/l "TAG_SIZE" 3 8, +C4<010010>;
P_0x8d79d38 .param/l "WORD_SIZE" 3 1, +C4<0100000>;
P_0x8d79d4c .param/l "fuindex" 10 6, +C4<0>;
v0x8d7b2b8_0 .alias "CDB_data_data", 479 0, v0x8d88fa0_0;
v0x8d7b318_0 .alias "CDB_data_valid", 14 0, v0x8d88ff0_0;
v0x8d7b368_0 .var "Qj", 3 0;
v0x8d7b3c8_0 .var "Qk", 3 0;
v0x8d7b418_0 .alias "RB_index", 3 0, v0x8d89040_0;
v0x8d7b468_0 .alias "RB_index_bus", 43 0, v0x8d89130_0;
v0x8d7b4d8_0 .var "Vj", 31 0;
v0x8d7b538_0 .var "Vk", 31 0;
v0x8d7b5c0_0 .net *"_s11", 0 0, v0x8d7bd68_0; 1 drivers
v0x8d7b620_0 .net *"_s15", 3 0, v0x8d7b948_0; 1 drivers
v0x8d7b6b0_0 .net *"_s3", 0 0, v0x8d7b770_0; 1 drivers
v0x8d7b710_0 .net *"_s7", 31 0, v0x8d7bc40_0; 1 drivers
v0x8d7b770_0 .var "busy", 0 0;
v0x8d7b7d0_0 .alias "busy_out", 10 0, v0x8d89270_0;
v0x8d7b860_0 .alias "clk", 0 0, v0x8d88380_0;
v0x8d7b8b0_0 .alias "data_bus", 351 0, v0x8d891d0_0;
v0x8d7b948_0 .var "dest", 3 0;
v0x8d7b9a8_0 .alias "fu", 3 0, v0x8d89090_0;
v0x8d7ba48_0 .alias "inst", 31 0, v0x8d890e0_0;
v0x8d7ba98_0 .var "op", 3 0;
v0x8d7b9f8_0 .alias "qj", 3 0, v0x8d89608_0;
v0x8d7bb40_0 .alias "qk", 3 0, v0x8d89658_0;
v0x8d7bae8_0 .var "reg_numj", 4 0;
v0x8d7bbf0_0 .var "reg_numk", 4 0;
v0x8d7bb90_0 .net "reset", 0 0, L_0x8d8a778; 1 drivers
v0x8d7bca8_0 .alias "reset_bus", 10 0, v0x8d897b0_0;
v0x8d7bc40_0 .var "result", 31 0;
v0x8d7bd68_0 .var "valid", 0 0;
v0x8d7bcf8_0 .alias "valid_bus", 10 0, v0x8d89220_0;
v0x8d7be30_0 .alias "vj", 31 0, v0x8d898c0_0;
v0x8d7bdb8_0 .alias "vk", 31 0, v0x8d89800_0;
E_0x8d79d68 .event posedge, v0x8d7bb90_0, v0x8d62770_0;
L_0x8d76ee8 .part/pv v0x8d7b770_0, 0, 1, 11;
L_0x8d8a538 .part/pv v0x8d7bc40_0, 0, 32, 352;
L_0x8d8a5f8 .part/pv v0x8d7bd68_0, 0, 1, 11;
L_0x8d8a6b8 .part/pv v0x8d7b948_0, 0, 4, 44;
L_0x8d8a778 .part v0x8d83ab0_0, 0, 1;
S_0x8d7afd8 .scope task, "checkAndGetData" "checkAndGetData" 10 158, 10 158, S_0x8d798b8;
 .timescale -9 -10;
v0x8d7b058_0 .var "Q", 3 0;
v0x8d7b0c8_0 .var "V", 31 0;
v0x8d7b128_0 .var "dataBus", 479 0;
v0x8d7b188_0 .var "ok", 0 0;
v0x8d7b1d8_0 .var "valid", 0 0;
v0x8d7b238_0 .var "validBus", 14 0;
TD_CPU.alu_rs\x5B0\x5D.checkAndGetData ;
    %load/v 8, v0x8d7b058_0, 4;
    %mov 12, 0, 2;
    %cmpi/u 8, 15, 6;
    %jmp/0xz  T_13.24, 6;
    %jmp T_13.25;
T_13.24 ;
    %load/v 8, v0x8d7b238_0, 15;
    %set/v v0x8d7aa18_0, 8, 15;
    %load/v 8, v0x8d7b058_0, 4;
    %set/v v0x8d7aa88_0, 8, 4;
    %fork TD_CPU.alu_rs\x5B0\x5D.readValidBus, S_0x8d7a998;
    %join;
    %load/v  8, v0x8d7aae8_0, 1;
    %set/v v0x8d7b1d8_0, 8, 1;
    %load/v 8, v0x8d7b1d8_0, 1;
    %jmp/0xz  T_13.26, 8;
    %load/v 8, v0x8d7b128_0, 480;
    %set/v v0x8d7abc8_0, 8, 480;
    %load/v 8, v0x8d7b058_0, 4;
    %set/v v0x8d7ac38_0, 8, 4;
    %fork TD_CPU.alu_rs\x5B0\x5D.readDataBus, S_0x8d7ab48;
    %join;
    %load/v  8, v0x8d7ac98_0, 32;
    %set/v v0x8d7b0c8_0, 8, 32;
    %movi 8, 15, 5;
    %set/v v0x8d7b058_0, 8, 4;
    %jmp T_13.27;
T_13.26 ;
    %set/v v0x8d7b188_0, 0, 1;
T_13.27 ;
T_13.25 ;
    %end;
S_0x8d7acf8 .scope task, "getData" "getData" 10 121, 10 121, S_0x8d798b8;
 .timescale -9 -10;
v0x8d7ad78_0 .var "CDB_data_data", 479 0;
v0x8d7ade8_0 .var "CDB_data_valid", 14 0;
v0x8d7ae48_0 .var "Q", 3 0;
v0x8d7aea8_0 .var "V", 31 0;
v0x8d7aef8_0 .var "q", 3 0;
v0x8d7af58_0 .var "v", 31 0;
TD_CPU.alu_rs\x5B0\x5D.getData ;
    %load/v 8, v0x8d7aef8_0, 4;
    %mov 12, 0, 2;
    %cmpi/u 8, 15, 6;
    %jmp/0xz  T_14.28, 6;
    %load/v 8, v0x8d7af58_0, 32;
    %set/v v0x8d7aea8_0, 8, 32;
    %movi 8, 15, 5;
    %set/v v0x8d7ae48_0, 8, 4;
    %jmp T_14.29;
T_14.28 ;
    %load/v 8, v0x8d7ade8_0, 15;
    %set/v v0x8d7aa18_0, 8, 15;
    %load/v 8, v0x8d7aef8_0, 4;
    %set/v v0x8d7aa88_0, 8, 4;
    %fork TD_CPU.alu_rs\x5B0\x5D.readValidBus, S_0x8d7a998;
    %join;
    %load/v  8, v0x8d7aae8_0, 1;
    %jmp/0xz  T_14.30, 8;
    %load/v 8, v0x8d7ad78_0, 480;
    %set/v v0x8d7abc8_0, 8, 480;
    %load/v 8, v0x8d7aef8_0, 4;
    %set/v v0x8d7ac38_0, 8, 4;
    %fork TD_CPU.alu_rs\x5B0\x5D.readDataBus, S_0x8d7ab48;
    %join;
    %load/v  8, v0x8d7ac98_0, 32;
    %set/v v0x8d7aea8_0, 8, 32;
    %movi 8, 15, 5;
    %set/v v0x8d7ae48_0, 8, 4;
    %jmp T_14.31;
T_14.30 ;
    %load/v 8, v0x8d7aef8_0, 4;
    %set/v v0x8d7ae48_0, 8, 4;
T_14.31 ;
T_14.29 ;
    %end;
S_0x8d7ab48 .scope function, "readDataBus" "readDataBus" 10 141, 10 141, S_0x8d798b8;
 .timescale -9 -10;
v0x8d7abc8_0 .var "CDB_data_data", 479 0;
v0x8d7ac38_0 .var "index", 3 0;
v0x8d7ac98_0 .var "readDataBus", 31 0;
TD_CPU.alu_rs\x5B0\x5D.readDataBus ;
    %load/v 8, v0x8d7abc8_0, 480;
    %load/v 488, v0x8d7ac38_0, 4;
    %movi 492, 0, 7;
    %muli 488, 32, 11;
    %ix/get 0, 488, 11;
    %shiftr/i0  8, 480;
    %set/v v0x8d7ac98_0, 8, 32;
    %end;
S_0x8d7a998 .scope function, "readValidBus" "readValidBus" 10 150, 10 150, S_0x8d798b8;
 .timescale -9 -10;
v0x8d7aa18_0 .var "CDB_data_valid", 14 0;
v0x8d7aa88_0 .var "index", 3 0;
v0x8d7aae8_0 .var "readValidBus", 0 0;
TD_CPU.alu_rs\x5B0\x5D.readValidBus ;
    %load/v 8, v0x8d7aa18_0, 15;
    %load/v 23, v0x8d7aa88_0, 4;
    %ix/get 0, 23, 4;
    %shiftr/i0  8, 15;
    %set/v v0x8d7aae8_0, 8, 1;
    %end;
S_0x8d7a918 .scope begin, "checkIssue" "checkIssue" 10 53, 10 53, S_0x8d798b8;
 .timescale -9 -10;
S_0x8d7a828 .scope begin, "execute" "execute" 10 80, 10 80, S_0x8d798b8;
 .timescale -9 -10;
v0x8d7a8a8_0 .var "ok", 0 0;
S_0x8d773a8 .scope module, "alu_rs[1]" "ALU_RS" 2 70, 10 1, S_0x8d3d850;
 .timescale -9 -10;
P_0x8d7742c .param/l "ADDER_NUM" 3 41, C4<0011>;
P_0x8d77440 .param/l "ADDER_START" 3 47, C4<0000>;
P_0x8d77454 .param/l "ALU_ADD" 3 10, C4<0000>;
P_0x8d77468 .param/l "ALU_MUL" 3 12, C4<0010>;
P_0x8d7747c .param/l "ALU_SUB" 3 11, C4<0001>;
P_0x8d77490 .param/l "BGE_IMM_START" 3 22, +C4<010110>;
P_0x8d774a4 .param/l "BGE_PCOFFSET_START" 3 23, +C4<01001>;
P_0x8d774b8 .param/l "BLOCK_SIZE" 3 6, +C4<010000>;
P_0x8d774cc .param/l "BRANCH_NUM" 3 43, C4<0001>;
P_0x8d774e0 .param/l "BRANCH_START" 3 49, C4<00101>;
P_0x8d774f4 .param/l "CACHE_SIZE" 3 7, +C4<010000000000>;
P_0x8d77508 .param/l "FU_INDEX" 3 53, +C4<0100>;
P_0x8d7751c .param/l "FU_NUM" 3 46, C4<00001011>;
P_0x8d77530 .param/l "IMM_START" 3 20, +C4<010001>;
P_0x8d77544 .param/l "INST_ADD" 3 24, C4<0000>;
P_0x8d77558 .param/l "INST_ADDI" 3 29, C4<0101>;
P_0x8d7756c .param/l "INST_BGE" 3 37, C4<1101>;
P_0x8d77580 .param/l "INST_J" 3 35, C4<1011>;
P_0x8d77594 .param/l "INST_JR" 3 36, C4<1100>;
P_0x8d775a8 .param/l "INST_LI" 3 34, C4<1010>;
P_0x8d775bc .param/l "INST_LW" 3 32, C4<1000>;
P_0x8d775d0 .param/l "INST_LWRR" 3 27, C4<0011>;
P_0x8d775e4 .param/l "INST_MUL" 3 26, C4<0010>;
P_0x8d775f8 .param/l "INST_MULI" 3 31, C4<0111>;
P_0x8d7760c .param/l "INST_START" 3 15, +C4<011111>;
P_0x8d77620 .param/l "INST_SUB" 3 25, C4<0001>;
P_0x8d77634 .param/l "INST_SUBI" 3 30, C4<0110>;
P_0x8d77648 .param/l "INST_SW" 3 33, C4<1001>;
P_0x8d7765c .param/l "INST_SWRR" 3 28, C4<0100>;
P_0x8d77670 .param/l "J_PCOFFSET_START" 3 21, +C4<011011>;
P_0x8d77684 .param/l "LOADER_NUM" 3 45, C4<0011>;
P_0x8d77698 .param/l "LOADER_START" 3 51, C4<0001000>;
P_0x8d776ac .param/l "MEM_SIZE" 3 2, +C4<010000000000>;
P_0x8d776c0 .param/l "MEM_STALL" 3 56, +C4<01100100>;
P_0x8d776d4 .param/l "MULTER_NUM" 3 42, C4<0010>;
P_0x8d776e8 .param/l "MULTER_START" 3 48, C4<0011>;
P_0x8d776fc .param/l "MUL_STALL" 3 55, +C4<011>;
P_0x8d77710 .param/l "NO_FU" 3 52, C4<1111>;
P_0x8d77724 .param/l "NULL" 3 62, +C4<01111>;
P_0x8d77738 .param/l "OPCODE_WIDTH" 3 16, +C4<0100>;
P_0x8d7774c .param/l "RB_INDEX" 3 60, +C4<0100>;
P_0x8d77760 .param/l "RB_SIZE" 3 59, +C4<01111>;
P_0x8d77774 .param/l "RD_START" 3 18, +C4<011011>;
P_0x8d77788 .param/l "READY" 3 61, +C4<01111>;
P_0x8d7779c .param/l "REG_FILE_SIZE" 3 4, +C4<0100000>;
P_0x8d777b0 .param/l "REG_INDEX" 3 3, +C4<0101>;
P_0x8d777c4 .param/l "RS_START" 3 17, +C4<010110>;
P_0x8d777d8 .param/l "RT_START" 3 19, +C4<010001>;
P_0x8d777ec .param/l "STORER_NUM" 3 44, C4<0010>;
P_0x8d77800 .param/l "STORER_START" 3 50, C4<000110>;
P_0x8d77814 .param/l "TAG_SIZE" 3 8, +C4<010010>;
P_0x8d77828 .param/l "WORD_SIZE" 3 1, +C4<0100000>;
P_0x8d7783c .param/l "fuindex" 10 6, +C4<01>;
v0x8d78c70_0 .alias "CDB_data_data", 479 0, v0x8d88fa0_0;
v0x8d78cd0_0 .alias "CDB_data_valid", 14 0, v0x8d88ff0_0;
v0x8d78d20_0 .var "Qj", 3 0;
v0x8d78d80_0 .var "Qk", 3 0;
v0x8d78dd0_0 .alias "RB_index", 3 0, v0x8d89040_0;
v0x8d78e20_0 .alias "RB_index_bus", 43 0, v0x8d89130_0;
v0x8d78e90_0 .var "Vj", 31 0;
v0x8d78ef0_0 .var "Vk", 31 0;
v0x8d78f78_0 .net *"_s11", 0 0, v0x8d79720_0; 1 drivers
v0x8d78fd8_0 .net *"_s15", 3 0, v0x8d79300_0; 1 drivers
v0x8d79068_0 .net *"_s3", 0 0, v0x8d79128_0; 1 drivers
v0x8d790c8_0 .net *"_s7", 31 0, v0x8d795f8_0; 1 drivers
v0x8d79128_0 .var "busy", 0 0;
v0x8d79188_0 .alias "busy_out", 10 0, v0x8d89270_0;
v0x8d79218_0 .alias "clk", 0 0, v0x8d88380_0;
v0x8d79268_0 .alias "data_bus", 351 0, v0x8d891d0_0;
v0x8d79300_0 .var "dest", 3 0;
v0x8d79360_0 .alias "fu", 3 0, v0x8d89090_0;
v0x8d79400_0 .alias "inst", 31 0, v0x8d890e0_0;
v0x8d79450_0 .var "op", 3 0;
v0x8d793b0_0 .alias "qj", 3 0, v0x8d89608_0;
v0x8d794f8_0 .alias "qk", 3 0, v0x8d89658_0;
v0x8d794a0_0 .var "reg_numj", 4 0;
v0x8d795a8_0 .var "reg_numk", 4 0;
v0x8d79548_0 .net "reset", 0 0, L_0x8d8ab28; 1 drivers
v0x8d79660_0 .alias "reset_bus", 10 0, v0x8d897b0_0;
v0x8d795f8_0 .var "result", 31 0;
v0x8d79720_0 .var "valid", 0 0;
v0x8d796b0_0 .alias "valid_bus", 10 0, v0x8d89220_0;
v0x8d797e8_0 .alias "vj", 31 0, v0x8d898c0_0;
v0x8d79770_0 .alias "vk", 31 0, v0x8d89800_0;
E_0x8d6d0e8 .event posedge, v0x8d79548_0, v0x8d62770_0;
L_0x8d8a7c8 .part/pv v0x8d79128_0, 1, 1, 11;
L_0x8d8a888 .part/pv v0x8d795f8_0, 32, 32, 352;
L_0x8d8a968 .part/pv v0x8d79720_0, 1, 1, 11;
L_0x8d8aa48 .part/pv v0x8d79300_0, 4, 4, 44;
L_0x8d8ab28 .part v0x8d83ab0_0, 1, 1;
S_0x8d78990 .scope task, "checkAndGetData" "checkAndGetData" 10 158, 10 158, S_0x8d773a8;
 .timescale -9 -10;
v0x8d78a10_0 .var "Q", 3 0;
v0x8d78a80_0 .var "V", 31 0;
v0x8d78ae0_0 .var "dataBus", 479 0;
v0x8d78b40_0 .var "ok", 0 0;
v0x8d78b90_0 .var "valid", 0 0;
v0x8d78bf0_0 .var "validBus", 14 0;
TD_CPU.alu_rs\x5B1\x5D.checkAndGetData ;
    %load/v 8, v0x8d78a10_0, 4;
    %mov 12, 0, 2;
    %cmpi/u 8, 15, 6;
    %jmp/0xz  T_17.32, 6;
    %jmp T_17.33;
T_17.32 ;
    %load/v 8, v0x8d78bf0_0, 15;
    %set/v v0x8d783d0_0, 8, 15;
    %load/v 8, v0x8d78a10_0, 4;
    %set/v v0x8d78440_0, 8, 4;
    %fork TD_CPU.alu_rs\x5B1\x5D.readValidBus, S_0x8d78350;
    %join;
    %load/v  8, v0x8d784a0_0, 1;
    %set/v v0x8d78b90_0, 8, 1;
    %load/v 8, v0x8d78b90_0, 1;
    %jmp/0xz  T_17.34, 8;
    %load/v 8, v0x8d78ae0_0, 480;
    %set/v v0x8d78580_0, 8, 480;
    %load/v 8, v0x8d78a10_0, 4;
    %set/v v0x8d785f0_0, 8, 4;
    %fork TD_CPU.alu_rs\x5B1\x5D.readDataBus, S_0x8d78500;
    %join;
    %load/v  8, v0x8d78650_0, 32;
    %set/v v0x8d78a80_0, 8, 32;
    %movi 8, 15, 5;
    %set/v v0x8d78a10_0, 8, 4;
    %jmp T_17.35;
T_17.34 ;
    %set/v v0x8d78b40_0, 0, 1;
T_17.35 ;
T_17.33 ;
    %end;
S_0x8d786b0 .scope task, "getData" "getData" 10 121, 10 121, S_0x8d773a8;
 .timescale -9 -10;
v0x8d78730_0 .var "CDB_data_data", 479 0;
v0x8d787a0_0 .var "CDB_data_valid", 14 0;
v0x8d78800_0 .var "Q", 3 0;
v0x8d78860_0 .var "V", 31 0;
v0x8d788b0_0 .var "q", 3 0;
v0x8d78910_0 .var "v", 31 0;
TD_CPU.alu_rs\x5B1\x5D.getData ;
    %load/v 8, v0x8d788b0_0, 4;
    %mov 12, 0, 2;
    %cmpi/u 8, 15, 6;
    %jmp/0xz  T_18.36, 6;
    %load/v 8, v0x8d78910_0, 32;
    %set/v v0x8d78860_0, 8, 32;
    %movi 8, 15, 5;
    %set/v v0x8d78800_0, 8, 4;
    %jmp T_18.37;
T_18.36 ;
    %load/v 8, v0x8d787a0_0, 15;
    %set/v v0x8d783d0_0, 8, 15;
    %load/v 8, v0x8d788b0_0, 4;
    %set/v v0x8d78440_0, 8, 4;
    %fork TD_CPU.alu_rs\x5B1\x5D.readValidBus, S_0x8d78350;
    %join;
    %load/v  8, v0x8d784a0_0, 1;
    %jmp/0xz  T_18.38, 8;
    %load/v 8, v0x8d78730_0, 480;
    %set/v v0x8d78580_0, 8, 480;
    %load/v 8, v0x8d788b0_0, 4;
    %set/v v0x8d785f0_0, 8, 4;
    %fork TD_CPU.alu_rs\x5B1\x5D.readDataBus, S_0x8d78500;
    %join;
    %load/v  8, v0x8d78650_0, 32;
    %set/v v0x8d78860_0, 8, 32;
    %movi 8, 15, 5;
    %set/v v0x8d78800_0, 8, 4;
    %jmp T_18.39;
T_18.38 ;
    %load/v 8, v0x8d788b0_0, 4;
    %set/v v0x8d78800_0, 8, 4;
T_18.39 ;
T_18.37 ;
    %end;
S_0x8d78500 .scope function, "readDataBus" "readDataBus" 10 141, 10 141, S_0x8d773a8;
 .timescale -9 -10;
v0x8d78580_0 .var "CDB_data_data", 479 0;
v0x8d785f0_0 .var "index", 3 0;
v0x8d78650_0 .var "readDataBus", 31 0;
TD_CPU.alu_rs\x5B1\x5D.readDataBus ;
    %load/v 8, v0x8d78580_0, 480;
    %load/v 488, v0x8d785f0_0, 4;
    %movi 492, 0, 7;
    %muli 488, 32, 11;
    %ix/get 0, 488, 11;
    %shiftr/i0  8, 480;
    %set/v v0x8d78650_0, 8, 32;
    %end;
S_0x8d78350 .scope function, "readValidBus" "readValidBus" 10 150, 10 150, S_0x8d773a8;
 .timescale -9 -10;
v0x8d783d0_0 .var "CDB_data_valid", 14 0;
v0x8d78440_0 .var "index", 3 0;
v0x8d784a0_0 .var "readValidBus", 0 0;
TD_CPU.alu_rs\x5B1\x5D.readValidBus ;
    %load/v 8, v0x8d783d0_0, 15;
    %load/v 23, v0x8d78440_0, 4;
    %ix/get 0, 23, 4;
    %shiftr/i0  8, 15;
    %set/v v0x8d784a0_0, 8, 1;
    %end;
S_0x8d782d0 .scope begin, "checkIssue" "checkIssue" 10 53, 10 53, S_0x8d773a8;
 .timescale -9 -10;
S_0x8d781e0 .scope begin, "execute" "execute" 10 80, 10 80, S_0x8d773a8;
 .timescale -9 -10;
v0x8d78260_0 .var "ok", 0 0;
S_0x8d74550 .scope module, "alu_rs[2]" "ALU_RS" 2 70, 10 1, S_0x8d3d850;
 .timescale -9 -10;
P_0x8d745d4 .param/l "ADDER_NUM" 3 41, C4<0011>;
P_0x8d745e8 .param/l "ADDER_START" 3 47, C4<0000>;
P_0x8d745fc .param/l "ALU_ADD" 3 10, C4<0000>;
P_0x8d74610 .param/l "ALU_MUL" 3 12, C4<0010>;
P_0x8d74624 .param/l "ALU_SUB" 3 11, C4<0001>;
P_0x8d74638 .param/l "BGE_IMM_START" 3 22, +C4<010110>;
P_0x8d7464c .param/l "BGE_PCOFFSET_START" 3 23, +C4<01001>;
P_0x8d74660 .param/l "BLOCK_SIZE" 3 6, +C4<010000>;
P_0x8d74674 .param/l "BRANCH_NUM" 3 43, C4<0001>;
P_0x8d74688 .param/l "BRANCH_START" 3 49, C4<00101>;
P_0x8d7469c .param/l "CACHE_SIZE" 3 7, +C4<010000000000>;
P_0x8d746b0 .param/l "FU_INDEX" 3 53, +C4<0100>;
P_0x8d746c4 .param/l "FU_NUM" 3 46, C4<00001011>;
P_0x8d746d8 .param/l "IMM_START" 3 20, +C4<010001>;
P_0x8d746ec .param/l "INST_ADD" 3 24, C4<0000>;
P_0x8d74700 .param/l "INST_ADDI" 3 29, C4<0101>;
P_0x8d74714 .param/l "INST_BGE" 3 37, C4<1101>;
P_0x8d74728 .param/l "INST_J" 3 35, C4<1011>;
P_0x8d7473c .param/l "INST_JR" 3 36, C4<1100>;
P_0x8d74750 .param/l "INST_LI" 3 34, C4<1010>;
P_0x8d74764 .param/l "INST_LW" 3 32, C4<1000>;
P_0x8d74778 .param/l "INST_LWRR" 3 27, C4<0011>;
P_0x8d7478c .param/l "INST_MUL" 3 26, C4<0010>;
P_0x8d747a0 .param/l "INST_MULI" 3 31, C4<0111>;
P_0x8d747b4 .param/l "INST_START" 3 15, +C4<011111>;
P_0x8d747c8 .param/l "INST_SUB" 3 25, C4<0001>;
P_0x8d747dc .param/l "INST_SUBI" 3 30, C4<0110>;
P_0x8d747f0 .param/l "INST_SW" 3 33, C4<1001>;
P_0x8d74804 .param/l "INST_SWRR" 3 28, C4<0100>;
P_0x8d74818 .param/l "J_PCOFFSET_START" 3 21, +C4<011011>;
P_0x8d7482c .param/l "LOADER_NUM" 3 45, C4<0011>;
P_0x8d74840 .param/l "LOADER_START" 3 51, C4<0001000>;
P_0x8d74854 .param/l "MEM_SIZE" 3 2, +C4<010000000000>;
P_0x8d74868 .param/l "MEM_STALL" 3 56, +C4<01100100>;
P_0x8d7487c .param/l "MULTER_NUM" 3 42, C4<0010>;
P_0x8d74890 .param/l "MULTER_START" 3 48, C4<0011>;
P_0x8d748a4 .param/l "MUL_STALL" 3 55, +C4<011>;
P_0x8d748b8 .param/l "NO_FU" 3 52, C4<1111>;
P_0x8d748cc .param/l "NULL" 3 62, +C4<01111>;
P_0x8d748e0 .param/l "OPCODE_WIDTH" 3 16, +C4<0100>;
P_0x8d748f4 .param/l "RB_INDEX" 3 60, +C4<0100>;
P_0x8d74908 .param/l "RB_SIZE" 3 59, +C4<01111>;
P_0x8d7491c .param/l "RD_START" 3 18, +C4<011011>;
P_0x8d74930 .param/l "READY" 3 61, +C4<01111>;
P_0x8d74944 .param/l "REG_FILE_SIZE" 3 4, +C4<0100000>;
P_0x8d74958 .param/l "REG_INDEX" 3 3, +C4<0101>;
P_0x8d7496c .param/l "RS_START" 3 17, +C4<010110>;
P_0x8d74980 .param/l "RT_START" 3 19, +C4<010001>;
P_0x8d74994 .param/l "STORER_NUM" 3 44, C4<0010>;
P_0x8d749a8 .param/l "STORER_START" 3 50, C4<000110>;
P_0x8d749bc .param/l "TAG_SIZE" 3 8, +C4<010010>;
P_0x8d749d0 .param/l "WORD_SIZE" 3 1, +C4<0100000>;
P_0x8d749e4 .param/l "fuindex" 10 6, +C4<010>;
v0x8d75f50_0 .alias "CDB_data_data", 479 0, v0x8d88fa0_0;
v0x8d6c360_0 .alias "CDB_data_valid", 14 0, v0x8d88ff0_0;
v0x8d6c418_0 .var "Qj", 3 0;
v0x8d76140_0 .var "Qk", 3 0;
v0x8d76190_0 .alias "RB_index", 3 0, v0x8d89040_0;
v0x8d6c580_0 .alias "RB_index_bus", 43 0, v0x8d89130_0;
v0x8d6c658_0 .var "Vj", 31 0;
v0x8d76390_0 .var "Vk", 31 0;
v0x8d76408_0 .net *"_s11", 0 0, v0x8d77008_0; 1 drivers
v0x8d76458_0 .net *"_s15", 3 0, v0x8d6cc00_0; 1 drivers
v0x8d764e8_0 .net *"_s3", 0 0, v0x8d765a8_0; 1 drivers
v0x8d76548_0 .net *"_s7", 31 0, v0x8d6d168_0; 1 drivers
v0x8d765a8_0 .var "busy", 0 0;
v0x8d76608_0 .alias "busy_out", 10 0, v0x8d89270_0;
v0x8d6ca48_0 .alias "clk", 0 0, v0x8d88380_0;
v0x8d6cb00_0 .alias "data_bus", 351 0, v0x8d891d0_0;
v0x8d6cc00_0 .var "dest", 3 0;
v0x8d76938_0 .alias "fu", 3 0, v0x8d89090_0;
v0x8d6cd68_0 .alias "inst", 31 0, v0x8d890e0_0;
v0x8d6ce20_0 .var "op", 3 0;
v0x8d76988_0 .alias "qj", 3 0, v0x8d89608_0;
v0x8d6cf30_0 .alias "qk", 3 0, v0x8d89658_0;
v0x8d76b68_0 .var "reg_numj", 4 0;
v0x8d6d048_0 .var "reg_numk", 4 0;
v0x8d76c88_0 .net "reset", 0 0, L_0x8d8af18; 1 drivers
v0x8d6d1d0_0 .alias "reset_bus", 10 0, v0x8d897b0_0;
v0x8d6d168_0 .var "result", 31 0;
v0x8d77008_0 .var "valid", 0 0;
v0x8d6d098_0 .alias "valid_bus", 10 0, v0x8d89220_0;
v0x8d6d410_0 .alias "vj", 31 0, v0x8d898c0_0;
v0x8d6d398_0 .alias "vk", 31 0, v0x8d89800_0;
E_0x8d74a00 .event posedge, v0x8d76c88_0, v0x8d62770_0;
L_0x8d8ab98 .part/pv v0x8d765a8_0, 2, 1, 11;
L_0x8d8ac78 .part/pv v0x8d6d168_0, 64, 32, 352;
L_0x8d8ad58 .part/pv v0x8d77008_0, 2, 1, 11;
L_0x8d8ae38 .part/pv v0x8d6cc00_0, 8, 4, 44;
L_0x8d8af18 .part v0x8d83ab0_0, 2, 1;
S_0x8d75c70 .scope task, "checkAndGetData" "checkAndGetData" 10 158, 10 158, S_0x8d74550;
 .timescale -9 -10;
v0x8d75cf0_0 .var "Q", 3 0;
v0x8d75d60_0 .var "V", 31 0;
v0x8d75dc0_0 .var "dataBus", 479 0;
v0x8d75e20_0 .var "ok", 0 0;
v0x8d75e70_0 .var "valid", 0 0;
v0x8d75ed0_0 .var "validBus", 14 0;
TD_CPU.alu_rs\x5B2\x5D.checkAndGetData ;
    %load/v 8, v0x8d75cf0_0, 4;
    %mov 12, 0, 2;
    %cmpi/u 8, 15, 6;
    %jmp/0xz  T_21.40, 6;
    %jmp T_21.41;
T_21.40 ;
    %load/v 8, v0x8d75ed0_0, 15;
    %set/v v0x8d756b0_0, 8, 15;
    %load/v 8, v0x8d75cf0_0, 4;
    %set/v v0x8d75720_0, 8, 4;
    %fork TD_CPU.alu_rs\x5B2\x5D.readValidBus, S_0x8d75630;
    %join;
    %load/v  8, v0x8d75780_0, 1;
    %set/v v0x8d75e70_0, 8, 1;
    %load/v 8, v0x8d75e70_0, 1;
    %jmp/0xz  T_21.42, 8;
    %load/v 8, v0x8d75dc0_0, 480;
    %set/v v0x8d75860_0, 8, 480;
    %load/v 8, v0x8d75cf0_0, 4;
    %set/v v0x8d758d0_0, 8, 4;
    %fork TD_CPU.alu_rs\x5B2\x5D.readDataBus, S_0x8d757e0;
    %join;
    %load/v  8, v0x8d75930_0, 32;
    %set/v v0x8d75d60_0, 8, 32;
    %movi 8, 15, 5;
    %set/v v0x8d75cf0_0, 8, 4;
    %jmp T_21.43;
T_21.42 ;
    %set/v v0x8d75e20_0, 0, 1;
T_21.43 ;
T_21.41 ;
    %end;
S_0x8d75990 .scope task, "getData" "getData" 10 121, 10 121, S_0x8d74550;
 .timescale -9 -10;
v0x8d75a10_0 .var "CDB_data_data", 479 0;
v0x8d75a80_0 .var "CDB_data_valid", 14 0;
v0x8d75ae0_0 .var "Q", 3 0;
v0x8d75b40_0 .var "V", 31 0;
v0x8d75b90_0 .var "q", 3 0;
v0x8d75bf0_0 .var "v", 31 0;
TD_CPU.alu_rs\x5B2\x5D.getData ;
    %load/v 8, v0x8d75b90_0, 4;
    %mov 12, 0, 2;
    %cmpi/u 8, 15, 6;
    %jmp/0xz  T_22.44, 6;
    %load/v 8, v0x8d75bf0_0, 32;
    %set/v v0x8d75b40_0, 8, 32;
    %movi 8, 15, 5;
    %set/v v0x8d75ae0_0, 8, 4;
    %jmp T_22.45;
T_22.44 ;
    %load/v 8, v0x8d75a80_0, 15;
    %set/v v0x8d756b0_0, 8, 15;
    %load/v 8, v0x8d75b90_0, 4;
    %set/v v0x8d75720_0, 8, 4;
    %fork TD_CPU.alu_rs\x5B2\x5D.readValidBus, S_0x8d75630;
    %join;
    %load/v  8, v0x8d75780_0, 1;
    %jmp/0xz  T_22.46, 8;
    %load/v 8, v0x8d75a10_0, 480;
    %set/v v0x8d75860_0, 8, 480;
    %load/v 8, v0x8d75b90_0, 4;
    %set/v v0x8d758d0_0, 8, 4;
    %fork TD_CPU.alu_rs\x5B2\x5D.readDataBus, S_0x8d757e0;
    %join;
    %load/v  8, v0x8d75930_0, 32;
    %set/v v0x8d75b40_0, 8, 32;
    %movi 8, 15, 5;
    %set/v v0x8d75ae0_0, 8, 4;
    %jmp T_22.47;
T_22.46 ;
    %load/v 8, v0x8d75b90_0, 4;
    %set/v v0x8d75ae0_0, 8, 4;
T_22.47 ;
T_22.45 ;
    %end;
S_0x8d757e0 .scope function, "readDataBus" "readDataBus" 10 141, 10 141, S_0x8d74550;
 .timescale -9 -10;
v0x8d75860_0 .var "CDB_data_data", 479 0;
v0x8d758d0_0 .var "index", 3 0;
v0x8d75930_0 .var "readDataBus", 31 0;
TD_CPU.alu_rs\x5B2\x5D.readDataBus ;
    %load/v 8, v0x8d75860_0, 480;
    %load/v 488, v0x8d758d0_0, 4;
    %movi 492, 0, 7;
    %muli 488, 32, 11;
    %ix/get 0, 488, 11;
    %shiftr/i0  8, 480;
    %set/v v0x8d75930_0, 8, 32;
    %end;
S_0x8d75630 .scope function, "readValidBus" "readValidBus" 10 150, 10 150, S_0x8d74550;
 .timescale -9 -10;
v0x8d756b0_0 .var "CDB_data_valid", 14 0;
v0x8d75720_0 .var "index", 3 0;
v0x8d75780_0 .var "readValidBus", 0 0;
TD_CPU.alu_rs\x5B2\x5D.readValidBus ;
    %load/v 8, v0x8d756b0_0, 15;
    %load/v 23, v0x8d75720_0, 4;
    %ix/get 0, 23, 4;
    %shiftr/i0  8, 15;
    %set/v v0x8d75780_0, 8, 1;
    %end;
S_0x8d755b0 .scope begin, "checkIssue" "checkIssue" 10 53, 10 53, S_0x8d74550;
 .timescale -9 -10;
S_0x8d754c0 .scope begin, "execute" "execute" 10 80, 10 80, S_0x8d74550;
 .timescale -9 -10;
v0x8d75540_0 .var "ok", 0 0;
S_0x8d71f08 .scope module, "alu_rs[3]" "ALU_RS" 2 70, 10 1, S_0x8d3d850;
 .timescale -9 -10;
P_0x8d71f8c .param/l "ADDER_NUM" 3 41, C4<0011>;
P_0x8d71fa0 .param/l "ADDER_START" 3 47, C4<0000>;
P_0x8d71fb4 .param/l "ALU_ADD" 3 10, C4<0000>;
P_0x8d71fc8 .param/l "ALU_MUL" 3 12, C4<0010>;
P_0x8d71fdc .param/l "ALU_SUB" 3 11, C4<0001>;
P_0x8d71ff0 .param/l "BGE_IMM_START" 3 22, +C4<010110>;
P_0x8d72004 .param/l "BGE_PCOFFSET_START" 3 23, +C4<01001>;
P_0x8d72018 .param/l "BLOCK_SIZE" 3 6, +C4<010000>;
P_0x8d7202c .param/l "BRANCH_NUM" 3 43, C4<0001>;
P_0x8d72040 .param/l "BRANCH_START" 3 49, C4<00101>;
P_0x8d72054 .param/l "CACHE_SIZE" 3 7, +C4<010000000000>;
P_0x8d72068 .param/l "FU_INDEX" 3 53, +C4<0100>;
P_0x8d7207c .param/l "FU_NUM" 3 46, C4<00001011>;
P_0x8d72090 .param/l "IMM_START" 3 20, +C4<010001>;
P_0x8d720a4 .param/l "INST_ADD" 3 24, C4<0000>;
P_0x8d720b8 .param/l "INST_ADDI" 3 29, C4<0101>;
P_0x8d720cc .param/l "INST_BGE" 3 37, C4<1101>;
P_0x8d720e0 .param/l "INST_J" 3 35, C4<1011>;
P_0x8d720f4 .param/l "INST_JR" 3 36, C4<1100>;
P_0x8d72108 .param/l "INST_LI" 3 34, C4<1010>;
P_0x8d7211c .param/l "INST_LW" 3 32, C4<1000>;
P_0x8d72130 .param/l "INST_LWRR" 3 27, C4<0011>;
P_0x8d72144 .param/l "INST_MUL" 3 26, C4<0010>;
P_0x8d72158 .param/l "INST_MULI" 3 31, C4<0111>;
P_0x8d7216c .param/l "INST_START" 3 15, +C4<011111>;
P_0x8d72180 .param/l "INST_SUB" 3 25, C4<0001>;
P_0x8d72194 .param/l "INST_SUBI" 3 30, C4<0110>;
P_0x8d721a8 .param/l "INST_SW" 3 33, C4<1001>;
P_0x8d721bc .param/l "INST_SWRR" 3 28, C4<0100>;
P_0x8d721d0 .param/l "J_PCOFFSET_START" 3 21, +C4<011011>;
P_0x8d721e4 .param/l "LOADER_NUM" 3 45, C4<0011>;
P_0x8d721f8 .param/l "LOADER_START" 3 51, C4<0001000>;
P_0x8d7220c .param/l "MEM_SIZE" 3 2, +C4<010000000000>;
P_0x8d72220 .param/l "MEM_STALL" 3 56, +C4<01100100>;
P_0x8d72234 .param/l "MULTER_NUM" 3 42, C4<0010>;
P_0x8d72248 .param/l "MULTER_START" 3 48, C4<0011>;
P_0x8d7225c .param/l "MUL_STALL" 3 55, +C4<011>;
P_0x8d72270 .param/l "NO_FU" 3 52, C4<1111>;
P_0x8d72284 .param/l "NULL" 3 62, +C4<01111>;
P_0x8d72298 .param/l "OPCODE_WIDTH" 3 16, +C4<0100>;
P_0x8d722ac .param/l "RB_INDEX" 3 60, +C4<0100>;
P_0x8d722c0 .param/l "RB_SIZE" 3 59, +C4<01111>;
P_0x8d722d4 .param/l "RD_START" 3 18, +C4<011011>;
P_0x8d722e8 .param/l "READY" 3 61, +C4<01111>;
P_0x8d722fc .param/l "REG_FILE_SIZE" 3 4, +C4<0100000>;
P_0x8d72310 .param/l "REG_INDEX" 3 3, +C4<0101>;
P_0x8d72324 .param/l "RS_START" 3 17, +C4<010110>;
P_0x8d72338 .param/l "RT_START" 3 19, +C4<010001>;
P_0x8d7234c .param/l "STORER_NUM" 3 44, C4<0010>;
P_0x8d72360 .param/l "STORER_START" 3 50, C4<000110>;
P_0x8d72374 .param/l "TAG_SIZE" 3 8, +C4<010010>;
P_0x8d72388 .param/l "WORD_SIZE" 3 1, +C4<0100000>;
P_0x8d7239c .param/l "fuindex" 10 6, +C4<011>;
v0x8d73908_0 .alias "CDB_data_data", 479 0, v0x8d88fa0_0;
v0x8d73968_0 .alias "CDB_data_valid", 14 0, v0x8d88ff0_0;
v0x8d739b8_0 .var "Qj", 3 0;
v0x8d73a18_0 .var "Qk", 3 0;
v0x8d73a68_0 .alias "RB_index", 3 0, v0x8d89040_0;
v0x8d73ab8_0 .alias "RB_index_bus", 43 0, v0x8d89130_0;
v0x8d73b28_0 .var "Vj", 31 0;
v0x8d73b88_0 .var "Vk", 31 0;
v0x8d73c10_0 .net *"_s11", 0 0, v0x8d743b8_0; 1 drivers
v0x8d73c70_0 .net *"_s15", 3 0, v0x8d73f98_0; 1 drivers
v0x8d73d00_0 .net *"_s3", 0 0, v0x8d73dc0_0; 1 drivers
v0x8d73d60_0 .net *"_s7", 31 0, v0x8d74290_0; 1 drivers
v0x8d73dc0_0 .var "busy", 0 0;
v0x8d73e20_0 .alias "busy_out", 10 0, v0x8d89270_0;
v0x8d73eb0_0 .alias "clk", 0 0, v0x8d88380_0;
v0x8d73f00_0 .alias "data_bus", 351 0, v0x8d891d0_0;
v0x8d73f98_0 .var "dest", 3 0;
v0x8d73ff8_0 .alias "fu", 3 0, v0x8d89090_0;
v0x8d74098_0 .alias "inst", 31 0, v0x8d890e0_0;
v0x8d740e8_0 .var "op", 3 0;
v0x8d74048_0 .alias "qj", 3 0, v0x8d89608_0;
v0x8d74190_0 .alias "qk", 3 0, v0x8d89658_0;
v0x8d74138_0 .var "reg_numj", 4 0;
v0x8d74240_0 .var "reg_numk", 4 0;
v0x8d741e0_0 .net "reset", 0 0, L_0x8d76338; 1 drivers
v0x8d742f8_0 .alias "reset_bus", 10 0, v0x8d897b0_0;
v0x8d74290_0 .var "result", 31 0;
v0x8d743b8_0 .var "valid", 0 0;
v0x8d74348_0 .alias "valid_bus", 10 0, v0x8d89220_0;
v0x8d74480_0 .alias "vj", 31 0, v0x8d898c0_0;
v0x8d74408_0 .alias "vk", 31 0, v0x8d89800_0;
E_0x8d723b8 .event posedge, v0x8d741e0_0, v0x8d62770_0;
L_0x8d8af88 .part/pv v0x8d73dc0_0, 3, 1, 11;
L_0x8d8b160 .part/pv v0x8d74290_0, 96, 32, 352;
L_0x8d768e0 .part/pv v0x8d743b8_0, 3, 1, 11;
L_0x8d8b4c0 .part/pv v0x8d73f98_0, 12, 4, 44;
L_0x8d76338 .part v0x8d83ab0_0, 3, 1;
S_0x8d73628 .scope task, "checkAndGetData" "checkAndGetData" 10 158, 10 158, S_0x8d71f08;
 .timescale -9 -10;
v0x8d736a8_0 .var "Q", 3 0;
v0x8d73718_0 .var "V", 31 0;
v0x8d73778_0 .var "dataBus", 479 0;
v0x8d737d8_0 .var "ok", 0 0;
v0x8d73828_0 .var "valid", 0 0;
v0x8d73888_0 .var "validBus", 14 0;
TD_CPU.alu_rs\x5B3\x5D.checkAndGetData ;
    %load/v 8, v0x8d736a8_0, 4;
    %mov 12, 0, 2;
    %cmpi/u 8, 15, 6;
    %jmp/0xz  T_25.48, 6;
    %jmp T_25.49;
T_25.48 ;
    %load/v 8, v0x8d73888_0, 15;
    %set/v v0x8d73068_0, 8, 15;
    %load/v 8, v0x8d736a8_0, 4;
    %set/v v0x8d730d8_0, 8, 4;
    %fork TD_CPU.alu_rs\x5B3\x5D.readValidBus, S_0x8d72fe8;
    %join;
    %load/v  8, v0x8d73138_0, 1;
    %set/v v0x8d73828_0, 8, 1;
    %load/v 8, v0x8d73828_0, 1;
    %jmp/0xz  T_25.50, 8;
    %load/v 8, v0x8d73778_0, 480;
    %set/v v0x8d73218_0, 8, 480;
    %load/v 8, v0x8d736a8_0, 4;
    %set/v v0x8d73288_0, 8, 4;
    %fork TD_CPU.alu_rs\x5B3\x5D.readDataBus, S_0x8d73198;
    %join;
    %load/v  8, v0x8d732e8_0, 32;
    %set/v v0x8d73718_0, 8, 32;
    %movi 8, 15, 5;
    %set/v v0x8d736a8_0, 8, 4;
    %jmp T_25.51;
T_25.50 ;
    %set/v v0x8d737d8_0, 0, 1;
T_25.51 ;
T_25.49 ;
    %end;
S_0x8d73348 .scope task, "getData" "getData" 10 121, 10 121, S_0x8d71f08;
 .timescale -9 -10;
v0x8d733c8_0 .var "CDB_data_data", 479 0;
v0x8d73438_0 .var "CDB_data_valid", 14 0;
v0x8d73498_0 .var "Q", 3 0;
v0x8d734f8_0 .var "V", 31 0;
v0x8d73548_0 .var "q", 3 0;
v0x8d735a8_0 .var "v", 31 0;
TD_CPU.alu_rs\x5B3\x5D.getData ;
    %load/v 8, v0x8d73548_0, 4;
    %mov 12, 0, 2;
    %cmpi/u 8, 15, 6;
    %jmp/0xz  T_26.52, 6;
    %load/v 8, v0x8d735a8_0, 32;
    %set/v v0x8d734f8_0, 8, 32;
    %movi 8, 15, 5;
    %set/v v0x8d73498_0, 8, 4;
    %jmp T_26.53;
T_26.52 ;
    %load/v 8, v0x8d73438_0, 15;
    %set/v v0x8d73068_0, 8, 15;
    %load/v 8, v0x8d73548_0, 4;
    %set/v v0x8d730d8_0, 8, 4;
    %fork TD_CPU.alu_rs\x5B3\x5D.readValidBus, S_0x8d72fe8;
    %join;
    %load/v  8, v0x8d73138_0, 1;
    %jmp/0xz  T_26.54, 8;
    %load/v 8, v0x8d733c8_0, 480;
    %set/v v0x8d73218_0, 8, 480;
    %load/v 8, v0x8d73548_0, 4;
    %set/v v0x8d73288_0, 8, 4;
    %fork TD_CPU.alu_rs\x5B3\x5D.readDataBus, S_0x8d73198;
    %join;
    %load/v  8, v0x8d732e8_0, 32;
    %set/v v0x8d734f8_0, 8, 32;
    %movi 8, 15, 5;
    %set/v v0x8d73498_0, 8, 4;
    %jmp T_26.55;
T_26.54 ;
    %load/v 8, v0x8d73548_0, 4;
    %set/v v0x8d73498_0, 8, 4;
T_26.55 ;
T_26.53 ;
    %end;
S_0x8d73198 .scope function, "readDataBus" "readDataBus" 10 141, 10 141, S_0x8d71f08;
 .timescale -9 -10;
v0x8d73218_0 .var "CDB_data_data", 479 0;
v0x8d73288_0 .var "index", 3 0;
v0x8d732e8_0 .var "readDataBus", 31 0;
TD_CPU.alu_rs\x5B3\x5D.readDataBus ;
    %load/v 8, v0x8d73218_0, 480;
    %load/v 488, v0x8d73288_0, 4;
    %movi 492, 0, 7;
    %muli 488, 32, 11;
    %ix/get 0, 488, 11;
    %shiftr/i0  8, 480;
    %set/v v0x8d732e8_0, 8, 32;
    %end;
S_0x8d72fe8 .scope function, "readValidBus" "readValidBus" 10 150, 10 150, S_0x8d71f08;
 .timescale -9 -10;
v0x8d73068_0 .var "CDB_data_valid", 14 0;
v0x8d730d8_0 .var "index", 3 0;
v0x8d73138_0 .var "readValidBus", 0 0;
TD_CPU.alu_rs\x5B3\x5D.readValidBus ;
    %load/v 8, v0x8d73068_0, 15;
    %load/v 23, v0x8d730d8_0, 4;
    %ix/get 0, 23, 4;
    %shiftr/i0  8, 15;
    %set/v v0x8d73138_0, 8, 1;
    %end;
S_0x8d72f68 .scope begin, "checkIssue" "checkIssue" 10 53, 10 53, S_0x8d71f08;
 .timescale -9 -10;
S_0x8d72e78 .scope begin, "execute" "execute" 10 80, 10 80, S_0x8d71f08;
 .timescale -9 -10;
v0x8d72ef8_0 .var "ok", 0 0;
S_0x8d6f8c0 .scope module, "alu_rs[4]" "ALU_RS" 2 70, 10 1, S_0x8d3d850;
 .timescale -9 -10;
P_0x8d6f944 .param/l "ADDER_NUM" 3 41, C4<0011>;
P_0x8d6f958 .param/l "ADDER_START" 3 47, C4<0000>;
P_0x8d6f96c .param/l "ALU_ADD" 3 10, C4<0000>;
P_0x8d6f980 .param/l "ALU_MUL" 3 12, C4<0010>;
P_0x8d6f994 .param/l "ALU_SUB" 3 11, C4<0001>;
P_0x8d6f9a8 .param/l "BGE_IMM_START" 3 22, +C4<010110>;
P_0x8d6f9bc .param/l "BGE_PCOFFSET_START" 3 23, +C4<01001>;
P_0x8d6f9d0 .param/l "BLOCK_SIZE" 3 6, +C4<010000>;
P_0x8d6f9e4 .param/l "BRANCH_NUM" 3 43, C4<0001>;
P_0x8d6f9f8 .param/l "BRANCH_START" 3 49, C4<00101>;
P_0x8d6fa0c .param/l "CACHE_SIZE" 3 7, +C4<010000000000>;
P_0x8d6fa20 .param/l "FU_INDEX" 3 53, +C4<0100>;
P_0x8d6fa34 .param/l "FU_NUM" 3 46, C4<00001011>;
P_0x8d6fa48 .param/l "IMM_START" 3 20, +C4<010001>;
P_0x8d6fa5c .param/l "INST_ADD" 3 24, C4<0000>;
P_0x8d6fa70 .param/l "INST_ADDI" 3 29, C4<0101>;
P_0x8d6fa84 .param/l "INST_BGE" 3 37, C4<1101>;
P_0x8d6fa98 .param/l "INST_J" 3 35, C4<1011>;
P_0x8d6faac .param/l "INST_JR" 3 36, C4<1100>;
P_0x8d6fac0 .param/l "INST_LI" 3 34, C4<1010>;
P_0x8d6fad4 .param/l "INST_LW" 3 32, C4<1000>;
P_0x8d6fae8 .param/l "INST_LWRR" 3 27, C4<0011>;
P_0x8d6fafc .param/l "INST_MUL" 3 26, C4<0010>;
P_0x8d6fb10 .param/l "INST_MULI" 3 31, C4<0111>;
P_0x8d6fb24 .param/l "INST_START" 3 15, +C4<011111>;
P_0x8d6fb38 .param/l "INST_SUB" 3 25, C4<0001>;
P_0x8d6fb4c .param/l "INST_SUBI" 3 30, C4<0110>;
P_0x8d6fb60 .param/l "INST_SW" 3 33, C4<1001>;
P_0x8d6fb74 .param/l "INST_SWRR" 3 28, C4<0100>;
P_0x8d6fb88 .param/l "J_PCOFFSET_START" 3 21, +C4<011011>;
P_0x8d6fb9c .param/l "LOADER_NUM" 3 45, C4<0011>;
P_0x8d6fbb0 .param/l "LOADER_START" 3 51, C4<0001000>;
P_0x8d6fbc4 .param/l "MEM_SIZE" 3 2, +C4<010000000000>;
P_0x8d6fbd8 .param/l "MEM_STALL" 3 56, +C4<01100100>;
P_0x8d6fbec .param/l "MULTER_NUM" 3 42, C4<0010>;
P_0x8d6fc00 .param/l "MULTER_START" 3 48, C4<0011>;
P_0x8d6fc14 .param/l "MUL_STALL" 3 55, +C4<011>;
P_0x8d6fc28 .param/l "NO_FU" 3 52, C4<1111>;
P_0x8d6fc3c .param/l "NULL" 3 62, +C4<01111>;
P_0x8d6fc50 .param/l "OPCODE_WIDTH" 3 16, +C4<0100>;
P_0x8d6fc64 .param/l "RB_INDEX" 3 60, +C4<0100>;
P_0x8d6fc78 .param/l "RB_SIZE" 3 59, +C4<01111>;
P_0x8d6fc8c .param/l "RD_START" 3 18, +C4<011011>;
P_0x8d6fca0 .param/l "READY" 3 61, +C4<01111>;
P_0x8d6fcb4 .param/l "REG_FILE_SIZE" 3 4, +C4<0100000>;
P_0x8d6fcc8 .param/l "REG_INDEX" 3 3, +C4<0101>;
P_0x8d6fcdc .param/l "RS_START" 3 17, +C4<010110>;
P_0x8d6fcf0 .param/l "RT_START" 3 19, +C4<010001>;
P_0x8d6fd04 .param/l "STORER_NUM" 3 44, C4<0010>;
P_0x8d6fd18 .param/l "STORER_START" 3 50, C4<000110>;
P_0x8d6fd2c .param/l "TAG_SIZE" 3 8, +C4<010010>;
P_0x8d6fd40 .param/l "WORD_SIZE" 3 1, +C4<0100000>;
P_0x8d6fd54 .param/l "fuindex" 10 6, +C4<0100>;
v0x8d712c0_0 .alias "CDB_data_data", 479 0, v0x8d88fa0_0;
v0x8d71320_0 .alias "CDB_data_valid", 14 0, v0x8d88ff0_0;
v0x8d71370_0 .var "Qj", 3 0;
v0x8d713d0_0 .var "Qk", 3 0;
v0x8d71420_0 .alias "RB_index", 3 0, v0x8d89040_0;
v0x8d71470_0 .alias "RB_index_bus", 43 0, v0x8d89130_0;
v0x8d714e0_0 .var "Vj", 31 0;
v0x8d71540_0 .var "Vk", 31 0;
v0x8d715c8_0 .net *"_s11", 0 0, v0x8d71d70_0; 1 drivers
v0x8d71628_0 .net *"_s15", 3 0, v0x8d71950_0; 1 drivers
v0x8d716b8_0 .net *"_s3", 0 0, v0x8d71778_0; 1 drivers
v0x8d71718_0 .net *"_s7", 31 0, v0x8d71c48_0; 1 drivers
v0x8d71778_0 .var "busy", 0 0;
v0x8d717d8_0 .alias "busy_out", 10 0, v0x8d89270_0;
v0x8d71868_0 .alias "clk", 0 0, v0x8d88380_0;
v0x8d718b8_0 .alias "data_bus", 351 0, v0x8d891d0_0;
v0x8d71950_0 .var "dest", 3 0;
v0x8d719b0_0 .alias "fu", 3 0, v0x8d89090_0;
v0x8d71a50_0 .alias "inst", 31 0, v0x8d890e0_0;
v0x8d71aa0_0 .var "op", 3 0;
v0x8d71a00_0 .alias "qj", 3 0, v0x8d89608_0;
v0x8d71b48_0 .alias "qk", 3 0, v0x8d89658_0;
v0x8d71af0_0 .var "reg_numj", 4 0;
v0x8d71bf8_0 .var "reg_numk", 4 0;
v0x8d71b98_0 .net "reset", 0 0, L_0x8d8baf8; 1 drivers
v0x8d71cb0_0 .alias "reset_bus", 10 0, v0x8d897b0_0;
v0x8d71c48_0 .var "result", 31 0;
v0x8d71d70_0 .var "valid", 0 0;
v0x8d71d00_0 .alias "valid_bus", 10 0, v0x8d89220_0;
v0x8d71e38_0 .alias "vj", 31 0, v0x8d898c0_0;
v0x8d71dc0_0 .alias "vk", 31 0, v0x8d89800_0;
E_0x8d6fd70 .event posedge, v0x8d71b98_0, v0x8d62770_0;
L_0x8d76f40 .part/pv v0x8d71778_0, 4, 1, 11;
L_0x8d8b878 .part/pv v0x8d71c48_0, 128, 32, 352;
L_0x8d8b938 .part/pv v0x8d71d70_0, 4, 1, 11;
L_0x8d8ba18 .part/pv v0x8d71950_0, 16, 4, 44;
L_0x8d8baf8 .part v0x8d83ab0_0, 4, 1;
S_0x8d70fe0 .scope task, "checkAndGetData" "checkAndGetData" 10 158, 10 158, S_0x8d6f8c0;
 .timescale -9 -10;
v0x8d71060_0 .var "Q", 3 0;
v0x8d710d0_0 .var "V", 31 0;
v0x8d71130_0 .var "dataBus", 479 0;
v0x8d71190_0 .var "ok", 0 0;
v0x8d711e0_0 .var "valid", 0 0;
v0x8d71240_0 .var "validBus", 14 0;
TD_CPU.alu_rs\x5B4\x5D.checkAndGetData ;
    %load/v 8, v0x8d71060_0, 4;
    %mov 12, 0, 2;
    %cmpi/u 8, 15, 6;
    %jmp/0xz  T_29.56, 6;
    %jmp T_29.57;
T_29.56 ;
    %load/v 8, v0x8d71240_0, 15;
    %set/v v0x8d70a20_0, 8, 15;
    %load/v 8, v0x8d71060_0, 4;
    %set/v v0x8d70a90_0, 8, 4;
    %fork TD_CPU.alu_rs\x5B4\x5D.readValidBus, S_0x8d709a0;
    %join;
    %load/v  8, v0x8d70af0_0, 1;
    %set/v v0x8d711e0_0, 8, 1;
    %load/v 8, v0x8d711e0_0, 1;
    %jmp/0xz  T_29.58, 8;
    %load/v 8, v0x8d71130_0, 480;
    %set/v v0x8d70bd0_0, 8, 480;
    %load/v 8, v0x8d71060_0, 4;
    %set/v v0x8d70c40_0, 8, 4;
    %fork TD_CPU.alu_rs\x5B4\x5D.readDataBus, S_0x8d70b50;
    %join;
    %load/v  8, v0x8d70ca0_0, 32;
    %set/v v0x8d710d0_0, 8, 32;
    %movi 8, 15, 5;
    %set/v v0x8d71060_0, 8, 4;
    %jmp T_29.59;
T_29.58 ;
    %set/v v0x8d71190_0, 0, 1;
T_29.59 ;
T_29.57 ;
    %end;
S_0x8d70d00 .scope task, "getData" "getData" 10 121, 10 121, S_0x8d6f8c0;
 .timescale -9 -10;
v0x8d70d80_0 .var "CDB_data_data", 479 0;
v0x8d70df0_0 .var "CDB_data_valid", 14 0;
v0x8d70e50_0 .var "Q", 3 0;
v0x8d70eb0_0 .var "V", 31 0;
v0x8d70f00_0 .var "q", 3 0;
v0x8d70f60_0 .var "v", 31 0;
TD_CPU.alu_rs\x5B4\x5D.getData ;
    %load/v 8, v0x8d70f00_0, 4;
    %mov 12, 0, 2;
    %cmpi/u 8, 15, 6;
    %jmp/0xz  T_30.60, 6;
    %load/v 8, v0x8d70f60_0, 32;
    %set/v v0x8d70eb0_0, 8, 32;
    %movi 8, 15, 5;
    %set/v v0x8d70e50_0, 8, 4;
    %jmp T_30.61;
T_30.60 ;
    %load/v 8, v0x8d70df0_0, 15;
    %set/v v0x8d70a20_0, 8, 15;
    %load/v 8, v0x8d70f00_0, 4;
    %set/v v0x8d70a90_0, 8, 4;
    %fork TD_CPU.alu_rs\x5B4\x5D.readValidBus, S_0x8d709a0;
    %join;
    %load/v  8, v0x8d70af0_0, 1;
    %jmp/0xz  T_30.62, 8;
    %load/v 8, v0x8d70d80_0, 480;
    %set/v v0x8d70bd0_0, 8, 480;
    %load/v 8, v0x8d70f00_0, 4;
    %set/v v0x8d70c40_0, 8, 4;
    %fork TD_CPU.alu_rs\x5B4\x5D.readDataBus, S_0x8d70b50;
    %join;
    %load/v  8, v0x8d70ca0_0, 32;
    %set/v v0x8d70eb0_0, 8, 32;
    %movi 8, 15, 5;
    %set/v v0x8d70e50_0, 8, 4;
    %jmp T_30.63;
T_30.62 ;
    %load/v 8, v0x8d70f00_0, 4;
    %set/v v0x8d70e50_0, 8, 4;
T_30.63 ;
T_30.61 ;
    %end;
S_0x8d70b50 .scope function, "readDataBus" "readDataBus" 10 141, 10 141, S_0x8d6f8c0;
 .timescale -9 -10;
v0x8d70bd0_0 .var "CDB_data_data", 479 0;
v0x8d70c40_0 .var "index", 3 0;
v0x8d70ca0_0 .var "readDataBus", 31 0;
TD_CPU.alu_rs\x5B4\x5D.readDataBus ;
    %load/v 8, v0x8d70bd0_0, 480;
    %load/v 488, v0x8d70c40_0, 4;
    %movi 492, 0, 7;
    %muli 488, 32, 11;
    %ix/get 0, 488, 11;
    %shiftr/i0  8, 480;
    %set/v v0x8d70ca0_0, 8, 32;
    %end;
S_0x8d709a0 .scope function, "readValidBus" "readValidBus" 10 150, 10 150, S_0x8d6f8c0;
 .timescale -9 -10;
v0x8d70a20_0 .var "CDB_data_valid", 14 0;
v0x8d70a90_0 .var "index", 3 0;
v0x8d70af0_0 .var "readValidBus", 0 0;
TD_CPU.alu_rs\x5B4\x5D.readValidBus ;
    %load/v 8, v0x8d70a20_0, 15;
    %load/v 23, v0x8d70a90_0, 4;
    %ix/get 0, 23, 4;
    %shiftr/i0  8, 15;
    %set/v v0x8d70af0_0, 8, 1;
    %end;
S_0x8d70920 .scope begin, "checkIssue" "checkIssue" 10 53, 10 53, S_0x8d6f8c0;
 .timescale -9 -10;
S_0x8d70830 .scope begin, "execute" "execute" 10 80, 10 80, S_0x8d6f8c0;
 .timescale -9 -10;
v0x8d708b0_0 .var "ok", 0 0;
S_0x8d6d600 .scope module, "alu_rs[5]" "ALU_RS" 2 70, 10 1, S_0x8d3d850;
 .timescale -9 -10;
P_0x8d6d684 .param/l "ADDER_NUM" 3 41, C4<0011>;
P_0x8d6d698 .param/l "ADDER_START" 3 47, C4<0000>;
P_0x8d6d6ac .param/l "ALU_ADD" 3 10, C4<0000>;
P_0x8d6d6c0 .param/l "ALU_MUL" 3 12, C4<0010>;
P_0x8d6d6d4 .param/l "ALU_SUB" 3 11, C4<0001>;
P_0x8d6d6e8 .param/l "BGE_IMM_START" 3 22, +C4<010110>;
P_0x8d6d6fc .param/l "BGE_PCOFFSET_START" 3 23, +C4<01001>;
P_0x8d6d710 .param/l "BLOCK_SIZE" 3 6, +C4<010000>;
P_0x8d6d724 .param/l "BRANCH_NUM" 3 43, C4<0001>;
P_0x8d6d738 .param/l "BRANCH_START" 3 49, C4<00101>;
P_0x8d6d74c .param/l "CACHE_SIZE" 3 7, +C4<010000000000>;
P_0x8d6d760 .param/l "FU_INDEX" 3 53, +C4<0100>;
P_0x8d6d774 .param/l "FU_NUM" 3 46, C4<00001011>;
P_0x8d6d788 .param/l "IMM_START" 3 20, +C4<010001>;
P_0x8d6d79c .param/l "INST_ADD" 3 24, C4<0000>;
P_0x8d6d7b0 .param/l "INST_ADDI" 3 29, C4<0101>;
P_0x8d6d7c4 .param/l "INST_BGE" 3 37, C4<1101>;
P_0x8d6d7d8 .param/l "INST_J" 3 35, C4<1011>;
P_0x8d6d7ec .param/l "INST_JR" 3 36, C4<1100>;
P_0x8d6d800 .param/l "INST_LI" 3 34, C4<1010>;
P_0x8d6d814 .param/l "INST_LW" 3 32, C4<1000>;
P_0x8d6d828 .param/l "INST_LWRR" 3 27, C4<0011>;
P_0x8d6d83c .param/l "INST_MUL" 3 26, C4<0010>;
P_0x8d6d850 .param/l "INST_MULI" 3 31, C4<0111>;
P_0x8d6d864 .param/l "INST_START" 3 15, +C4<011111>;
P_0x8d6d878 .param/l "INST_SUB" 3 25, C4<0001>;
P_0x8d6d88c .param/l "INST_SUBI" 3 30, C4<0110>;
P_0x8d6d8a0 .param/l "INST_SW" 3 33, C4<1001>;
P_0x8d6d8b4 .param/l "INST_SWRR" 3 28, C4<0100>;
P_0x8d6d8c8 .param/l "J_PCOFFSET_START" 3 21, +C4<011011>;
P_0x8d6d8dc .param/l "LOADER_NUM" 3 45, C4<0011>;
P_0x8d6d8f0 .param/l "LOADER_START" 3 51, C4<0001000>;
P_0x8d6d904 .param/l "MEM_SIZE" 3 2, +C4<010000000000>;
P_0x8d6d918 .param/l "MEM_STALL" 3 56, +C4<01100100>;
P_0x8d6d92c .param/l "MULTER_NUM" 3 42, C4<0010>;
P_0x8d6d940 .param/l "MULTER_START" 3 48, C4<0011>;
P_0x8d6d954 .param/l "MUL_STALL" 3 55, +C4<011>;
P_0x8d6d968 .param/l "NO_FU" 3 52, C4<1111>;
P_0x8d6d97c .param/l "NULL" 3 62, +C4<01111>;
P_0x8d6d990 .param/l "OPCODE_WIDTH" 3 16, +C4<0100>;
P_0x8d6d9a4 .param/l "RB_INDEX" 3 60, +C4<0100>;
P_0x8d6d9b8 .param/l "RB_SIZE" 3 59, +C4<01111>;
P_0x8d6d9cc .param/l "RD_START" 3 18, +C4<011011>;
P_0x8d6d9e0 .param/l "READY" 3 61, +C4<01111>;
P_0x8d6d9f4 .param/l "REG_FILE_SIZE" 3 4, +C4<0100000>;
P_0x8d6da08 .param/l "REG_INDEX" 3 3, +C4<0101>;
P_0x8d6da1c .param/l "RS_START" 3 17, +C4<010110>;
P_0x8d6da30 .param/l "RT_START" 3 19, +C4<010001>;
P_0x8d6da44 .param/l "STORER_NUM" 3 44, C4<0010>;
P_0x8d6da58 .param/l "STORER_START" 3 50, C4<000110>;
P_0x8d6da6c .param/l "TAG_SIZE" 3 8, +C4<010010>;
P_0x8d6da80 .param/l "WORD_SIZE" 3 1, +C4<0100000>;
P_0x8d6da94 .param/l "fuindex" 10 6, +C4<0101>;
v0x8d6ec78_0 .alias "CDB_data_data", 479 0, v0x8d88fa0_0;
v0x8d6ecd8_0 .alias "CDB_data_valid", 14 0, v0x8d88ff0_0;
v0x8d6ed28_0 .var "Qj", 3 0;
v0x8d6ed88_0 .var "Qk", 3 0;
v0x8d6edd8_0 .alias "RB_index", 3 0, v0x8d89040_0;
v0x8d6ee28_0 .alias "RB_index_bus", 43 0, v0x8d89130_0;
v0x8d6ee98_0 .var "Vj", 31 0;
v0x8d6eef8_0 .var "Vk", 31 0;
v0x8d6ef80_0 .net *"_s11", 0 0, v0x8d6f728_0; 1 drivers
v0x8d6efe0_0 .net *"_s15", 3 0, v0x8d6f308_0; 1 drivers
v0x8d6f070_0 .net *"_s3", 0 0, v0x8d6f130_0; 1 drivers
v0x8d6f0d0_0 .net *"_s7", 31 0, v0x8d6f600_0; 1 drivers
v0x8d6f130_0 .var "busy", 0 0;
v0x8d6f190_0 .alias "busy_out", 10 0, v0x8d89270_0;
v0x8d6f220_0 .alias "clk", 0 0, v0x8d88380_0;
v0x8d6f270_0 .alias "data_bus", 351 0, v0x8d891d0_0;
v0x8d6f308_0 .var "dest", 3 0;
v0x8d6f368_0 .alias "fu", 3 0, v0x8d89090_0;
v0x8d6f408_0 .alias "inst", 31 0, v0x8d890e0_0;
v0x8d6f458_0 .var "op", 3 0;
v0x8d6f3b8_0 .alias "qj", 3 0, v0x8d89608_0;
v0x8d6f500_0 .alias "qk", 3 0, v0x8d89658_0;
v0x8d6f4a8_0 .var "reg_numj", 4 0;
v0x8d6f5b0_0 .var "reg_numk", 4 0;
v0x8d6f550_0 .net "reset", 0 0, L_0x8d8bee8; 1 drivers
v0x8d6f668_0 .alias "reset_bus", 10 0, v0x8d897b0_0;
v0x8d6f600_0 .var "result", 31 0;
v0x8d6f728_0 .var "valid", 0 0;
v0x8d6f6b8_0 .alias "valid_bus", 10 0, v0x8d89220_0;
v0x8d6f7f0_0 .alias "vj", 31 0, v0x8d898c0_0;
v0x8d6f778_0 .alias "vk", 31 0, v0x8d89800_0;
E_0x8d6d2d8 .event posedge, v0x8d6f550_0, v0x8d62770_0;
L_0x8d8bb68 .part/pv v0x8d6f130_0, 5, 1, 11;
L_0x8d8bc48 .part/pv v0x8d6f600_0, 160, 32, 352;
L_0x8d8bd28 .part/pv v0x8d6f728_0, 5, 1, 11;
L_0x8d8be08 .part/pv v0x8d6f308_0, 20, 4, 44;
L_0x8d8bee8 .part v0x8d83ab0_0, 5, 1;
S_0x8d6e998 .scope task, "checkAndGetData" "checkAndGetData" 10 158, 10 158, S_0x8d6d600;
 .timescale -9 -10;
v0x8d6ea18_0 .var "Q", 3 0;
v0x8d6ea88_0 .var "V", 31 0;
v0x8d6eae8_0 .var "dataBus", 479 0;
v0x8d6eb48_0 .var "ok", 0 0;
v0x8d6eb98_0 .var "valid", 0 0;
v0x8d6ebf8_0 .var "validBus", 14 0;
TD_CPU.alu_rs\x5B5\x5D.checkAndGetData ;
    %load/v 8, v0x8d6ea18_0, 4;
    %mov 12, 0, 2;
    %cmpi/u 8, 15, 6;
    %jmp/0xz  T_33.64, 6;
    %jmp T_33.65;
T_33.64 ;
    %load/v 8, v0x8d6ebf8_0, 15;
    %set/v v0x8d6e3d8_0, 8, 15;
    %load/v 8, v0x8d6ea18_0, 4;
    %set/v v0x8d6e448_0, 8, 4;
    %fork TD_CPU.alu_rs\x5B5\x5D.readValidBus, S_0x8d6e358;
    %join;
    %load/v  8, v0x8d6e4a8_0, 1;
    %set/v v0x8d6eb98_0, 8, 1;
    %load/v 8, v0x8d6eb98_0, 1;
    %jmp/0xz  T_33.66, 8;
    %load/v 8, v0x8d6eae8_0, 480;
    %set/v v0x8d6e588_0, 8, 480;
    %load/v 8, v0x8d6ea18_0, 4;
    %set/v v0x8d6e5f8_0, 8, 4;
    %fork TD_CPU.alu_rs\x5B5\x5D.readDataBus, S_0x8d6e508;
    %join;
    %load/v  8, v0x8d6e658_0, 32;
    %set/v v0x8d6ea88_0, 8, 32;
    %movi 8, 15, 5;
    %set/v v0x8d6ea18_0, 8, 4;
    %jmp T_33.67;
T_33.66 ;
    %set/v v0x8d6eb48_0, 0, 1;
T_33.67 ;
T_33.65 ;
    %end;
S_0x8d6e6b8 .scope task, "getData" "getData" 10 121, 10 121, S_0x8d6d600;
 .timescale -9 -10;
v0x8d6e738_0 .var "CDB_data_data", 479 0;
v0x8d6e7a8_0 .var "CDB_data_valid", 14 0;
v0x8d6e808_0 .var "Q", 3 0;
v0x8d6e868_0 .var "V", 31 0;
v0x8d6e8b8_0 .var "q", 3 0;
v0x8d6e918_0 .var "v", 31 0;
TD_CPU.alu_rs\x5B5\x5D.getData ;
    %load/v 8, v0x8d6e8b8_0, 4;
    %mov 12, 0, 2;
    %cmpi/u 8, 15, 6;
    %jmp/0xz  T_34.68, 6;
    %load/v 8, v0x8d6e918_0, 32;
    %set/v v0x8d6e868_0, 8, 32;
    %movi 8, 15, 5;
    %set/v v0x8d6e808_0, 8, 4;
    %jmp T_34.69;
T_34.68 ;
    %load/v 8, v0x8d6e7a8_0, 15;
    %set/v v0x8d6e3d8_0, 8, 15;
    %load/v 8, v0x8d6e8b8_0, 4;
    %set/v v0x8d6e448_0, 8, 4;
    %fork TD_CPU.alu_rs\x5B5\x5D.readValidBus, S_0x8d6e358;
    %join;
    %load/v  8, v0x8d6e4a8_0, 1;
    %jmp/0xz  T_34.70, 8;
    %load/v 8, v0x8d6e738_0, 480;
    %set/v v0x8d6e588_0, 8, 480;
    %load/v 8, v0x8d6e8b8_0, 4;
    %set/v v0x8d6e5f8_0, 8, 4;
    %fork TD_CPU.alu_rs\x5B5\x5D.readDataBus, S_0x8d6e508;
    %join;
    %load/v  8, v0x8d6e658_0, 32;
    %set/v v0x8d6e868_0, 8, 32;
    %movi 8, 15, 5;
    %set/v v0x8d6e808_0, 8, 4;
    %jmp T_34.71;
T_34.70 ;
    %load/v 8, v0x8d6e8b8_0, 4;
    %set/v v0x8d6e808_0, 8, 4;
T_34.71 ;
T_34.69 ;
    %end;
S_0x8d6e508 .scope function, "readDataBus" "readDataBus" 10 141, 10 141, S_0x8d6d600;
 .timescale -9 -10;
v0x8d6e588_0 .var "CDB_data_data", 479 0;
v0x8d6e5f8_0 .var "index", 3 0;
v0x8d6e658_0 .var "readDataBus", 31 0;
TD_CPU.alu_rs\x5B5\x5D.readDataBus ;
    %load/v 8, v0x8d6e588_0, 480;
    %load/v 488, v0x8d6e5f8_0, 4;
    %movi 492, 0, 7;
    %muli 488, 32, 11;
    %ix/get 0, 488, 11;
    %shiftr/i0  8, 480;
    %set/v v0x8d6e658_0, 8, 32;
    %end;
S_0x8d6e358 .scope function, "readValidBus" "readValidBus" 10 150, 10 150, S_0x8d6d600;
 .timescale -9 -10;
v0x8d6e3d8_0 .var "CDB_data_valid", 14 0;
v0x8d6e448_0 .var "index", 3 0;
v0x8d6e4a8_0 .var "readValidBus", 0 0;
TD_CPU.alu_rs\x5B5\x5D.readValidBus ;
    %load/v 8, v0x8d6e3d8_0, 15;
    %load/v 23, v0x8d6e448_0, 4;
    %ix/get 0, 23, 4;
    %shiftr/i0  8, 15;
    %set/v v0x8d6e4a8_0, 8, 1;
    %end;
S_0x8d6e2d8 .scope begin, "checkIssue" "checkIssue" 10 53, 10 53, S_0x8d6d600;
 .timescale -9 -10;
S_0x8d6e1e8 .scope begin, "execute" "execute" 10 80, 10 80, S_0x8d6d600;
 .timescale -9 -10;
v0x8d6e268_0 .var "ok", 0 0;
S_0x8d6a900 .scope module, "alu_rs[6]" "ALU_RS" 2 70, 10 1, S_0x8d3d850;
 .timescale -9 -10;
P_0x8d6a984 .param/l "ADDER_NUM" 3 41, C4<0011>;
P_0x8d6a998 .param/l "ADDER_START" 3 47, C4<0000>;
P_0x8d6a9ac .param/l "ALU_ADD" 3 10, C4<0000>;
P_0x8d6a9c0 .param/l "ALU_MUL" 3 12, C4<0010>;
P_0x8d6a9d4 .param/l "ALU_SUB" 3 11, C4<0001>;
P_0x8d6a9e8 .param/l "BGE_IMM_START" 3 22, +C4<010110>;
P_0x8d6a9fc .param/l "BGE_PCOFFSET_START" 3 23, +C4<01001>;
P_0x8d6aa10 .param/l "BLOCK_SIZE" 3 6, +C4<010000>;
P_0x8d6aa24 .param/l "BRANCH_NUM" 3 43, C4<0001>;
P_0x8d6aa38 .param/l "BRANCH_START" 3 49, C4<00101>;
P_0x8d6aa4c .param/l "CACHE_SIZE" 3 7, +C4<010000000000>;
P_0x8d6aa60 .param/l "FU_INDEX" 3 53, +C4<0100>;
P_0x8d6aa74 .param/l "FU_NUM" 3 46, C4<00001011>;
P_0x8d6aa88 .param/l "IMM_START" 3 20, +C4<010001>;
P_0x8d6aa9c .param/l "INST_ADD" 3 24, C4<0000>;
P_0x8d6aab0 .param/l "INST_ADDI" 3 29, C4<0101>;
P_0x8d6aac4 .param/l "INST_BGE" 3 37, C4<1101>;
P_0x8d6aad8 .param/l "INST_J" 3 35, C4<1011>;
P_0x8d6aaec .param/l "INST_JR" 3 36, C4<1100>;
P_0x8d6ab00 .param/l "INST_LI" 3 34, C4<1010>;
P_0x8d6ab14 .param/l "INST_LW" 3 32, C4<1000>;
P_0x8d6ab28 .param/l "INST_LWRR" 3 27, C4<0011>;
P_0x8d6ab3c .param/l "INST_MUL" 3 26, C4<0010>;
P_0x8d6ab50 .param/l "INST_MULI" 3 31, C4<0111>;
P_0x8d6ab64 .param/l "INST_START" 3 15, +C4<011111>;
P_0x8d6ab78 .param/l "INST_SUB" 3 25, C4<0001>;
P_0x8d6ab8c .param/l "INST_SUBI" 3 30, C4<0110>;
P_0x8d6aba0 .param/l "INST_SW" 3 33, C4<1001>;
P_0x8d6abb4 .param/l "INST_SWRR" 3 28, C4<0100>;
P_0x8d6abc8 .param/l "J_PCOFFSET_START" 3 21, +C4<011011>;
P_0x8d6abdc .param/l "LOADER_NUM" 3 45, C4<0011>;
P_0x8d6abf0 .param/l "LOADER_START" 3 51, C4<0001000>;
P_0x8d6ac04 .param/l "MEM_SIZE" 3 2, +C4<010000000000>;
P_0x8d6ac18 .param/l "MEM_STALL" 3 56, +C4<01100100>;
P_0x8d6ac2c .param/l "MULTER_NUM" 3 42, C4<0010>;
P_0x8d6ac40 .param/l "MULTER_START" 3 48, C4<0011>;
P_0x8d6ac54 .param/l "MUL_STALL" 3 55, +C4<011>;
P_0x8d6ac68 .param/l "NO_FU" 3 52, C4<1111>;
P_0x8d6ac7c .param/l "NULL" 3 62, +C4<01111>;
P_0x8d6ac90 .param/l "OPCODE_WIDTH" 3 16, +C4<0100>;
P_0x8d6aca4 .param/l "RB_INDEX" 3 60, +C4<0100>;
P_0x8d6acb8 .param/l "RB_SIZE" 3 59, +C4<01111>;
P_0x8d6accc .param/l "RD_START" 3 18, +C4<011011>;
P_0x8d6ace0 .param/l "READY" 3 61, +C4<01111>;
P_0x8d6acf4 .param/l "REG_FILE_SIZE" 3 4, +C4<0100000>;
P_0x8d6ad08 .param/l "REG_INDEX" 3 3, +C4<0101>;
P_0x8d6ad1c .param/l "RS_START" 3 17, +C4<010110>;
P_0x8d6ad30 .param/l "RT_START" 3 19, +C4<010001>;
P_0x8d6ad44 .param/l "STORER_NUM" 3 44, C4<0010>;
P_0x8d6ad58 .param/l "STORER_START" 3 50, C4<000110>;
P_0x8d6ad6c .param/l "TAG_SIZE" 3 8, +C4<010010>;
P_0x8d6ad80 .param/l "WORD_SIZE" 3 1, +C4<0100000>;
P_0x8d6ad94 .param/l "fuindex" 10 6, +C4<0110>;
v0x8d6c300_0 .alias "CDB_data_data", 479 0, v0x8d88fa0_0;
v0x8d6c3c8_0 .alias "CDB_data_valid", 14 0, v0x8d88ff0_0;
v0x8d6c480_0 .var "Qj", 3 0;
v0x8d6c4e0_0 .var "Qk", 3 0;
v0x8d6c530_0 .alias "RB_index", 3 0, v0x8d89040_0;
v0x8d6c5e8_0 .alias "RB_index_bus", 43 0, v0x8d89130_0;
v0x8d6c6c0_0 .var "Vj", 31 0;
v0x8d6c720_0 .var "Vk", 31 0;
v0x8d6c7a8_0 .net *"_s11", 0 0, v0x8d6d348_0; 1 drivers
v0x8d6c808_0 .net *"_s15", 3 0, v0x8d6cc68_0; 1 drivers
v0x8d6c898_0 .net *"_s3", 0 0, v0x8d6c958_0; 1 drivers
v0x8d6c8f8_0 .net *"_s7", 31 0, v0x8d6d2f8_0; 1 drivers
v0x8d6c958_0 .var "busy", 0 0;
v0x8d6c9b8_0 .alias "busy_out", 10 0, v0x8d89270_0;
v0x8d6cab0_0 .alias "clk", 0 0, v0x8d88380_0;
v0x8d6cb68_0 .alias "data_bus", 351 0, v0x8d891d0_0;
v0x8d6cc68_0 .var "dest", 3 0;
v0x8d6ccc8_0 .alias "fu", 3 0, v0x8d89090_0;
v0x8d6cdd0_0 .alias "inst", 31 0, v0x8d890e0_0;
v0x8d6ce88_0 .var "op", 3 0;
v0x8d6cd18_0 .alias "qj", 3 0, v0x8d89608_0;
v0x8d6cf98_0 .alias "qk", 3 0, v0x8d89658_0;
v0x8d6ced8_0 .var "reg_numj", 4 0;
v0x8d6d118_0 .var "reg_numk", 4 0;
v0x8d6cfe8_0 .net "reset", 0 0, L_0x8d8c2d8; 1 drivers
v0x8d6d238_0 .alias "reset_bus", 10 0, v0x8d897b0_0;
v0x8d6d2f8_0 .var "result", 31 0;
v0x8d6d348_0 .var "valid", 0 0;
v0x8d6d288_0 .alias "valid_bus", 10 0, v0x8d89220_0;
v0x8d6d478_0 .alias "vj", 31 0, v0x8d898c0_0;
v0x8d6d548_0 .alias "vk", 31 0, v0x8d89800_0;
E_0x8d6adb0 .event posedge, v0x8d6cfe8_0, v0x8d62770_0;
L_0x8d8bf58 .part/pv v0x8d6c958_0, 6, 1, 11;
L_0x8d8c038 .part/pv v0x8d6d2f8_0, 192, 32, 352;
L_0x8d8c118 .part/pv v0x8d6d348_0, 6, 1, 11;
L_0x8d8c1f8 .part/pv v0x8d6cc68_0, 24, 4, 44;
L_0x8d8c2d8 .part v0x8d83ab0_0, 6, 1;
S_0x8d6c020 .scope task, "checkAndGetData" "checkAndGetData" 10 158, 10 158, S_0x8d6a900;
 .timescale -9 -10;
v0x8d6c0a0_0 .var "Q", 3 0;
v0x8d6c110_0 .var "V", 31 0;
v0x8d6c170_0 .var "dataBus", 479 0;
v0x8d6c1d0_0 .var "ok", 0 0;
v0x8d6c220_0 .var "valid", 0 0;
v0x8d6c280_0 .var "validBus", 14 0;
TD_CPU.alu_rs\x5B6\x5D.checkAndGetData ;
    %load/v 8, v0x8d6c0a0_0, 4;
    %mov 12, 0, 2;
    %cmpi/u 8, 15, 6;
    %jmp/0xz  T_37.72, 6;
    %jmp T_37.73;
T_37.72 ;
    %load/v 8, v0x8d6c280_0, 15;
    %set/v v0x8d6ba60_0, 8, 15;
    %load/v 8, v0x8d6c0a0_0, 4;
    %set/v v0x8d6bad0_0, 8, 4;
    %fork TD_CPU.alu_rs\x5B6\x5D.readValidBus, S_0x8d6b9e0;
    %join;
    %load/v  8, v0x8d6bb30_0, 1;
    %set/v v0x8d6c220_0, 8, 1;
    %load/v 8, v0x8d6c220_0, 1;
    %jmp/0xz  T_37.74, 8;
    %load/v 8, v0x8d6c170_0, 480;
    %set/v v0x8d6bc10_0, 8, 480;
    %load/v 8, v0x8d6c0a0_0, 4;
    %set/v v0x8d6bc80_0, 8, 4;
    %fork TD_CPU.alu_rs\x5B6\x5D.readDataBus, S_0x8d6bb90;
    %join;
    %load/v  8, v0x8d6bce0_0, 32;
    %set/v v0x8d6c110_0, 8, 32;
    %movi 8, 15, 5;
    %set/v v0x8d6c0a0_0, 8, 4;
    %jmp T_37.75;
T_37.74 ;
    %set/v v0x8d6c1d0_0, 0, 1;
T_37.75 ;
T_37.73 ;
    %end;
S_0x8d6bd40 .scope task, "getData" "getData" 10 121, 10 121, S_0x8d6a900;
 .timescale -9 -10;
v0x8d6bdc0_0 .var "CDB_data_data", 479 0;
v0x8d6be30_0 .var "CDB_data_valid", 14 0;
v0x8d6be90_0 .var "Q", 3 0;
v0x8d6bef0_0 .var "V", 31 0;
v0x8d6bf40_0 .var "q", 3 0;
v0x8d6bfa0_0 .var "v", 31 0;
TD_CPU.alu_rs\x5B6\x5D.getData ;
    %load/v 8, v0x8d6bf40_0, 4;
    %mov 12, 0, 2;
    %cmpi/u 8, 15, 6;
    %jmp/0xz  T_38.76, 6;
    %load/v 8, v0x8d6bfa0_0, 32;
    %set/v v0x8d6bef0_0, 8, 32;
    %movi 8, 15, 5;
    %set/v v0x8d6be90_0, 8, 4;
    %jmp T_38.77;
T_38.76 ;
    %load/v 8, v0x8d6be30_0, 15;
    %set/v v0x8d6ba60_0, 8, 15;
    %load/v 8, v0x8d6bf40_0, 4;
    %set/v v0x8d6bad0_0, 8, 4;
    %fork TD_CPU.alu_rs\x5B6\x5D.readValidBus, S_0x8d6b9e0;
    %join;
    %load/v  8, v0x8d6bb30_0, 1;
    %jmp/0xz  T_38.78, 8;
    %load/v 8, v0x8d6bdc0_0, 480;
    %set/v v0x8d6bc10_0, 8, 480;
    %load/v 8, v0x8d6bf40_0, 4;
    %set/v v0x8d6bc80_0, 8, 4;
    %fork TD_CPU.alu_rs\x5B6\x5D.readDataBus, S_0x8d6bb90;
    %join;
    %load/v  8, v0x8d6bce0_0, 32;
    %set/v v0x8d6bef0_0, 8, 32;
    %movi 8, 15, 5;
    %set/v v0x8d6be90_0, 8, 4;
    %jmp T_38.79;
T_38.78 ;
    %load/v 8, v0x8d6bf40_0, 4;
    %set/v v0x8d6be90_0, 8, 4;
T_38.79 ;
T_38.77 ;
    %end;
S_0x8d6bb90 .scope function, "readDataBus" "readDataBus" 10 141, 10 141, S_0x8d6a900;
 .timescale -9 -10;
v0x8d6bc10_0 .var "CDB_data_data", 479 0;
v0x8d6bc80_0 .var "index", 3 0;
v0x8d6bce0_0 .var "readDataBus", 31 0;
TD_CPU.alu_rs\x5B6\x5D.readDataBus ;
    %load/v 8, v0x8d6bc10_0, 480;
    %load/v 488, v0x8d6bc80_0, 4;
    %movi 492, 0, 7;
    %muli 488, 32, 11;
    %ix/get 0, 488, 11;
    %shiftr/i0  8, 480;
    %set/v v0x8d6bce0_0, 8, 32;
    %end;
S_0x8d6b9e0 .scope function, "readValidBus" "readValidBus" 10 150, 10 150, S_0x8d6a900;
 .timescale -9 -10;
v0x8d6ba60_0 .var "CDB_data_valid", 14 0;
v0x8d6bad0_0 .var "index", 3 0;
v0x8d6bb30_0 .var "readValidBus", 0 0;
TD_CPU.alu_rs\x5B6\x5D.readValidBus ;
    %load/v 8, v0x8d6ba60_0, 15;
    %load/v 23, v0x8d6bad0_0, 4;
    %ix/get 0, 23, 4;
    %shiftr/i0  8, 15;
    %set/v v0x8d6bb30_0, 8, 1;
    %end;
S_0x8d6b960 .scope begin, "checkIssue" "checkIssue" 10 53, 10 53, S_0x8d6a900;
 .timescale -9 -10;
S_0x8d6b870 .scope begin, "execute" "execute" 10 80, 10 80, S_0x8d6a900;
 .timescale -9 -10;
v0x8d6b8f0_0 .var "ok", 0 0;
S_0x8d68468 .scope module, "alu_rs[7]" "ALU_RS" 2 70, 10 1, S_0x8d3d850;
 .timescale -9 -10;
P_0x8d684ec .param/l "ADDER_NUM" 3 41, C4<0011>;
P_0x8d68500 .param/l "ADDER_START" 3 47, C4<0000>;
P_0x8d68514 .param/l "ALU_ADD" 3 10, C4<0000>;
P_0x8d68528 .param/l "ALU_MUL" 3 12, C4<0010>;
P_0x8d6853c .param/l "ALU_SUB" 3 11, C4<0001>;
P_0x8d68550 .param/l "BGE_IMM_START" 3 22, +C4<010110>;
P_0x8d68564 .param/l "BGE_PCOFFSET_START" 3 23, +C4<01001>;
P_0x8d68578 .param/l "BLOCK_SIZE" 3 6, +C4<010000>;
P_0x8d6858c .param/l "BRANCH_NUM" 3 43, C4<0001>;
P_0x8d685a0 .param/l "BRANCH_START" 3 49, C4<00101>;
P_0x8d685b4 .param/l "CACHE_SIZE" 3 7, +C4<010000000000>;
P_0x8d685c8 .param/l "FU_INDEX" 3 53, +C4<0100>;
P_0x8d685dc .param/l "FU_NUM" 3 46, C4<00001011>;
P_0x8d685f0 .param/l "IMM_START" 3 20, +C4<010001>;
P_0x8d68604 .param/l "INST_ADD" 3 24, C4<0000>;
P_0x8d68618 .param/l "INST_ADDI" 3 29, C4<0101>;
P_0x8d6862c .param/l "INST_BGE" 3 37, C4<1101>;
P_0x8d68640 .param/l "INST_J" 3 35, C4<1011>;
P_0x8d68654 .param/l "INST_JR" 3 36, C4<1100>;
P_0x8d68668 .param/l "INST_LI" 3 34, C4<1010>;
P_0x8d6867c .param/l "INST_LW" 3 32, C4<1000>;
P_0x8d68690 .param/l "INST_LWRR" 3 27, C4<0011>;
P_0x8d686a4 .param/l "INST_MUL" 3 26, C4<0010>;
P_0x8d686b8 .param/l "INST_MULI" 3 31, C4<0111>;
P_0x8d686cc .param/l "INST_START" 3 15, +C4<011111>;
P_0x8d686e0 .param/l "INST_SUB" 3 25, C4<0001>;
P_0x8d686f4 .param/l "INST_SUBI" 3 30, C4<0110>;
P_0x8d68708 .param/l "INST_SW" 3 33, C4<1001>;
P_0x8d6871c .param/l "INST_SWRR" 3 28, C4<0100>;
P_0x8d68730 .param/l "J_PCOFFSET_START" 3 21, +C4<011011>;
P_0x8d68744 .param/l "LOADER_NUM" 3 45, C4<0011>;
P_0x8d68758 .param/l "LOADER_START" 3 51, C4<0001000>;
P_0x8d6876c .param/l "MEM_SIZE" 3 2, +C4<010000000000>;
P_0x8d68780 .param/l "MEM_STALL" 3 56, +C4<01100100>;
P_0x8d68794 .param/l "MULTER_NUM" 3 42, C4<0010>;
P_0x8d687a8 .param/l "MULTER_START" 3 48, C4<0011>;
P_0x8d687bc .param/l "MUL_STALL" 3 55, +C4<011>;
P_0x8d687d0 .param/l "NO_FU" 3 52, C4<1111>;
P_0x8d687e4 .param/l "NULL" 3 62, +C4<01111>;
P_0x8d687f8 .param/l "OPCODE_WIDTH" 3 16, +C4<0100>;
P_0x8d6880c .param/l "RB_INDEX" 3 60, +C4<0100>;
P_0x8d68820 .param/l "RB_SIZE" 3 59, +C4<01111>;
P_0x8d68834 .param/l "RD_START" 3 18, +C4<011011>;
P_0x8d68848 .param/l "READY" 3 61, +C4<01111>;
P_0x8d6885c .param/l "REG_FILE_SIZE" 3 4, +C4<0100000>;
P_0x8d68870 .param/l "REG_INDEX" 3 3, +C4<0101>;
P_0x8d68884 .param/l "RS_START" 3 17, +C4<010110>;
P_0x8d68898 .param/l "RT_START" 3 19, +C4<010001>;
P_0x8d688ac .param/l "STORER_NUM" 3 44, C4<0010>;
P_0x8d688c0 .param/l "STORER_START" 3 50, C4<000110>;
P_0x8d688d4 .param/l "TAG_SIZE" 3 8, +C4<010010>;
P_0x8d688e8 .param/l "WORD_SIZE" 3 1, +C4<0100000>;
P_0x8d688fc .param/l "fuindex" 10 6, +C4<0111>;
v0x8d69cb8_0 .alias "CDB_data_data", 479 0, v0x8d88fa0_0;
v0x8d69d18_0 .alias "CDB_data_valid", 14 0, v0x8d88ff0_0;
v0x8d69d68_0 .var "Qj", 3 0;
v0x8d69dc8_0 .var "Qk", 3 0;
v0x8d69e18_0 .alias "RB_index", 3 0, v0x8d89040_0;
v0x8d69e68_0 .alias "RB_index_bus", 43 0, v0x8d89130_0;
v0x8d69ed8_0 .var "Vj", 31 0;
v0x8d69f38_0 .var "Vk", 31 0;
v0x8d69fc0_0 .net *"_s11", 0 0, v0x8d6a768_0; 1 drivers
v0x8d6a020_0 .net *"_s15", 3 0, v0x8d6a348_0; 1 drivers
v0x8d6a0b0_0 .net *"_s3", 0 0, v0x8d6a170_0; 1 drivers
v0x8d6a110_0 .net *"_s7", 31 0, v0x8d6a640_0; 1 drivers
v0x8d6a170_0 .var "busy", 0 0;
v0x8d6a1d0_0 .alias "busy_out", 10 0, v0x8d89270_0;
v0x8d6a260_0 .alias "clk", 0 0, v0x8d88380_0;
v0x8d6a2b0_0 .alias "data_bus", 351 0, v0x8d891d0_0;
v0x8d6a348_0 .var "dest", 3 0;
v0x8d6a3a8_0 .alias "fu", 3 0, v0x8d89090_0;
v0x8d6a448_0 .alias "inst", 31 0, v0x8d890e0_0;
v0x8d6a498_0 .var "op", 3 0;
v0x8d6a3f8_0 .alias "qj", 3 0, v0x8d89608_0;
v0x8d6a540_0 .alias "qk", 3 0, v0x8d89658_0;
v0x8d6a4e8_0 .var "reg_numj", 4 0;
v0x8d6a5f0_0 .var "reg_numk", 4 0;
v0x8d6a590_0 .net "reset", 0 0, L_0x8d8c6c8; 1 drivers
v0x8d6a6a8_0 .alias "reset_bus", 10 0, v0x8d897b0_0;
v0x8d6a640_0 .var "result", 31 0;
v0x8d6a768_0 .var "valid", 0 0;
v0x8d6a6f8_0 .alias "valid_bus", 10 0, v0x8d89220_0;
v0x8d6a830_0 .alias "vj", 31 0, v0x8d898c0_0;
v0x8d6a7b8_0 .alias "vk", 31 0, v0x8d89800_0;
E_0x8d65a08 .event posedge, v0x8d6a590_0, v0x8d62770_0;
L_0x8d8c348 .part/pv v0x8d6a170_0, 7, 1, 11;
L_0x8d8c428 .part/pv v0x8d6a640_0, 224, 32, 352;
L_0x8d8c508 .part/pv v0x8d6a768_0, 7, 1, 11;
L_0x8d8c5e8 .part/pv v0x8d6a348_0, 28, 4, 44;
L_0x8d8c6c8 .part v0x8d83ab0_0, 7, 1;
S_0x8d699d8 .scope task, "checkAndGetData" "checkAndGetData" 10 158, 10 158, S_0x8d68468;
 .timescale -9 -10;
v0x8d69a58_0 .var "Q", 3 0;
v0x8d69ac8_0 .var "V", 31 0;
v0x8d69b28_0 .var "dataBus", 479 0;
v0x8d69b88_0 .var "ok", 0 0;
v0x8d69bd8_0 .var "valid", 0 0;
v0x8d69c38_0 .var "validBus", 14 0;
TD_CPU.alu_rs\x5B7\x5D.checkAndGetData ;
    %load/v 8, v0x8d69a58_0, 4;
    %mov 12, 0, 2;
    %cmpi/u 8, 15, 6;
    %jmp/0xz  T_41.80, 6;
    %jmp T_41.81;
T_41.80 ;
    %load/v 8, v0x8d69c38_0, 15;
    %set/v v0x8d69418_0, 8, 15;
    %load/v 8, v0x8d69a58_0, 4;
    %set/v v0x8d69488_0, 8, 4;
    %fork TD_CPU.alu_rs\x5B7\x5D.readValidBus, S_0x8d69398;
    %join;
    %load/v  8, v0x8d694e8_0, 1;
    %set/v v0x8d69bd8_0, 8, 1;
    %load/v 8, v0x8d69bd8_0, 1;
    %jmp/0xz  T_41.82, 8;
    %load/v 8, v0x8d69b28_0, 480;
    %set/v v0x8d695c8_0, 8, 480;
    %load/v 8, v0x8d69a58_0, 4;
    %set/v v0x8d69638_0, 8, 4;
    %fork TD_CPU.alu_rs\x5B7\x5D.readDataBus, S_0x8d69548;
    %join;
    %load/v  8, v0x8d69698_0, 32;
    %set/v v0x8d69ac8_0, 8, 32;
    %movi 8, 15, 5;
    %set/v v0x8d69a58_0, 8, 4;
    %jmp T_41.83;
T_41.82 ;
    %set/v v0x8d69b88_0, 0, 1;
T_41.83 ;
T_41.81 ;
    %end;
S_0x8d696f8 .scope task, "getData" "getData" 10 121, 10 121, S_0x8d68468;
 .timescale -9 -10;
v0x8d69778_0 .var "CDB_data_data", 479 0;
v0x8d697e8_0 .var "CDB_data_valid", 14 0;
v0x8d69848_0 .var "Q", 3 0;
v0x8d698a8_0 .var "V", 31 0;
v0x8d698f8_0 .var "q", 3 0;
v0x8d69958_0 .var "v", 31 0;
TD_CPU.alu_rs\x5B7\x5D.getData ;
    %load/v 8, v0x8d698f8_0, 4;
    %mov 12, 0, 2;
    %cmpi/u 8, 15, 6;
    %jmp/0xz  T_42.84, 6;
    %load/v 8, v0x8d69958_0, 32;
    %set/v v0x8d698a8_0, 8, 32;
    %movi 8, 15, 5;
    %set/v v0x8d69848_0, 8, 4;
    %jmp T_42.85;
T_42.84 ;
    %load/v 8, v0x8d697e8_0, 15;
    %set/v v0x8d69418_0, 8, 15;
    %load/v 8, v0x8d698f8_0, 4;
    %set/v v0x8d69488_0, 8, 4;
    %fork TD_CPU.alu_rs\x5B7\x5D.readValidBus, S_0x8d69398;
    %join;
    %load/v  8, v0x8d694e8_0, 1;
    %jmp/0xz  T_42.86, 8;
    %load/v 8, v0x8d69778_0, 480;
    %set/v v0x8d695c8_0, 8, 480;
    %load/v 8, v0x8d698f8_0, 4;
    %set/v v0x8d69638_0, 8, 4;
    %fork TD_CPU.alu_rs\x5B7\x5D.readDataBus, S_0x8d69548;
    %join;
    %load/v  8, v0x8d69698_0, 32;
    %set/v v0x8d698a8_0, 8, 32;
    %movi 8, 15, 5;
    %set/v v0x8d69848_0, 8, 4;
    %jmp T_42.87;
T_42.86 ;
    %load/v 8, v0x8d698f8_0, 4;
    %set/v v0x8d69848_0, 8, 4;
T_42.87 ;
T_42.85 ;
    %end;
S_0x8d69548 .scope function, "readDataBus" "readDataBus" 10 141, 10 141, S_0x8d68468;
 .timescale -9 -10;
v0x8d695c8_0 .var "CDB_data_data", 479 0;
v0x8d69638_0 .var "index", 3 0;
v0x8d69698_0 .var "readDataBus", 31 0;
TD_CPU.alu_rs\x5B7\x5D.readDataBus ;
    %load/v 8, v0x8d695c8_0, 480;
    %load/v 488, v0x8d69638_0, 4;
    %movi 492, 0, 7;
    %muli 488, 32, 11;
    %ix/get 0, 488, 11;
    %shiftr/i0  8, 480;
    %set/v v0x8d69698_0, 8, 32;
    %end;
S_0x8d69398 .scope function, "readValidBus" "readValidBus" 10 150, 10 150, S_0x8d68468;
 .timescale -9 -10;
v0x8d69418_0 .var "CDB_data_valid", 14 0;
v0x8d69488_0 .var "index", 3 0;
v0x8d694e8_0 .var "readValidBus", 0 0;
TD_CPU.alu_rs\x5B7\x5D.readValidBus ;
    %load/v 8, v0x8d69418_0, 15;
    %load/v 23, v0x8d69488_0, 4;
    %ix/get 0, 23, 4;
    %shiftr/i0  8, 15;
    %set/v v0x8d694e8_0, 8, 1;
    %end;
S_0x8d69318 .scope begin, "checkIssue" "checkIssue" 10 53, 10 53, S_0x8d68468;
 .timescale -9 -10;
S_0x8d69228 .scope begin, "execute" "execute" 10 80, 10 80, S_0x8d68468;
 .timescale -9 -10;
v0x8d692a8_0 .var "ok", 0 0;
S_0x8d65b40 .scope module, "alu_rs[8]" "ALU_RS" 2 70, 10 1, S_0x8d3d850;
 .timescale -9 -10;
P_0x8d65bc4 .param/l "ADDER_NUM" 3 41, C4<0011>;
P_0x8d65bd8 .param/l "ADDER_START" 3 47, C4<0000>;
P_0x8d65bec .param/l "ALU_ADD" 3 10, C4<0000>;
P_0x8d65c00 .param/l "ALU_MUL" 3 12, C4<0010>;
P_0x8d65c14 .param/l "ALU_SUB" 3 11, C4<0001>;
P_0x8d65c28 .param/l "BGE_IMM_START" 3 22, +C4<010110>;
P_0x8d65c3c .param/l "BGE_PCOFFSET_START" 3 23, +C4<01001>;
P_0x8d65c50 .param/l "BLOCK_SIZE" 3 6, +C4<010000>;
P_0x8d65c64 .param/l "BRANCH_NUM" 3 43, C4<0001>;
P_0x8d65c78 .param/l "BRANCH_START" 3 49, C4<00101>;
P_0x8d65c8c .param/l "CACHE_SIZE" 3 7, +C4<010000000000>;
P_0x8d65ca0 .param/l "FU_INDEX" 3 53, +C4<0100>;
P_0x8d65cb4 .param/l "FU_NUM" 3 46, C4<00001011>;
P_0x8d65cc8 .param/l "IMM_START" 3 20, +C4<010001>;
P_0x8d65cdc .param/l "INST_ADD" 3 24, C4<0000>;
P_0x8d65cf0 .param/l "INST_ADDI" 3 29, C4<0101>;
P_0x8d65d04 .param/l "INST_BGE" 3 37, C4<1101>;
P_0x8d65d18 .param/l "INST_J" 3 35, C4<1011>;
P_0x8d65d2c .param/l "INST_JR" 3 36, C4<1100>;
P_0x8d65d40 .param/l "INST_LI" 3 34, C4<1010>;
P_0x8d65d54 .param/l "INST_LW" 3 32, C4<1000>;
P_0x8d65d68 .param/l "INST_LWRR" 3 27, C4<0011>;
P_0x8d65d7c .param/l "INST_MUL" 3 26, C4<0010>;
P_0x8d65d90 .param/l "INST_MULI" 3 31, C4<0111>;
P_0x8d65da4 .param/l "INST_START" 3 15, +C4<011111>;
P_0x8d65db8 .param/l "INST_SUB" 3 25, C4<0001>;
P_0x8d65dcc .param/l "INST_SUBI" 3 30, C4<0110>;
P_0x8d65de0 .param/l "INST_SW" 3 33, C4<1001>;
P_0x8d65df4 .param/l "INST_SWRR" 3 28, C4<0100>;
P_0x8d65e08 .param/l "J_PCOFFSET_START" 3 21, +C4<011011>;
P_0x8d65e1c .param/l "LOADER_NUM" 3 45, C4<0011>;
P_0x8d65e30 .param/l "LOADER_START" 3 51, C4<0001000>;
P_0x8d65e44 .param/l "MEM_SIZE" 3 2, +C4<010000000000>;
P_0x8d65e58 .param/l "MEM_STALL" 3 56, +C4<01100100>;
P_0x8d65e6c .param/l "MULTER_NUM" 3 42, C4<0010>;
P_0x8d65e80 .param/l "MULTER_START" 3 48, C4<0011>;
P_0x8d65e94 .param/l "MUL_STALL" 3 55, +C4<011>;
P_0x8d65ea8 .param/l "NO_FU" 3 52, C4<1111>;
P_0x8d65ebc .param/l "NULL" 3 62, +C4<01111>;
P_0x8d65ed0 .param/l "OPCODE_WIDTH" 3 16, +C4<0100>;
P_0x8d65ee4 .param/l "RB_INDEX" 3 60, +C4<0100>;
P_0x8d65ef8 .param/l "RB_SIZE" 3 59, +C4<01111>;
P_0x8d65f0c .param/l "RD_START" 3 18, +C4<011011>;
P_0x8d65f20 .param/l "READY" 3 61, +C4<01111>;
P_0x8d65f34 .param/l "REG_FILE_SIZE" 3 4, +C4<0100000>;
P_0x8d65f48 .param/l "REG_INDEX" 3 3, +C4<0101>;
P_0x8d65f5c .param/l "RS_START" 3 17, +C4<010110>;
P_0x8d65f70 .param/l "RT_START" 3 19, +C4<010001>;
P_0x8d65f84 .param/l "STORER_NUM" 3 44, C4<0010>;
P_0x8d65f98 .param/l "STORER_START" 3 50, C4<000110>;
P_0x8d65fac .param/l "TAG_SIZE" 3 8, +C4<010010>;
P_0x8d65fc0 .param/l "WORD_SIZE" 3 1, +C4<0100000>;
P_0x8d65fd4 .param/l "fuindex" 10 6, +C4<01000>;
v0x8d674d0_0 .alias "CDB_data_data", 479 0, v0x8d88fa0_0;
v0x8d67530_0 .alias "CDB_data_valid", 14 0, v0x8d88ff0_0;
v0x8d675b8_0 .var "Qj", 3 0;
v0x8d67618_0 .var "Qk", 3 0;
v0x8d67668_0 .alias "RB_index", 3 0, v0x8d89040_0;
v0x8d676f0_0 .alias "RB_index_bus", 43 0, v0x8d89130_0;
v0x8d67778_0 .var "Vj", 31 0;
v0x8d677d8_0 .var "Vk", 31 0;
v0x8d67860_0 .net *"_s11", 0 0, v0x8d68248_0; 1 drivers
v0x8d678c0_0 .net *"_s15", 3 0, v0x8d67c90_0; 1 drivers
v0x8d67950_0 .net *"_s3", 0 0, v0x8d67a48_0; 1 drivers
v0x8d679b0_0 .net *"_s7", 31 0, v0x8d681f8_0; 1 drivers
v0x8d67a48_0 .var "busy", 0 0;
v0x8d67aa8_0 .alias "busy_out", 10 0, v0x8d89270_0;
v0x8d67b38_0 .alias "clk", 0 0, v0x8d88380_0;
v0x8d67bc0_0 .alias "data_bus", 351 0, v0x8d891d0_0;
v0x8d67c90_0 .var "dest", 3 0;
v0x8d67cf0_0 .alias "fu", 3 0, v0x8d89090_0;
v0x8d67d90_0 .alias "inst", 31 0, v0x8d890e0_0;
v0x8d67e18_0 .var "op", 3 0;
v0x8d67d40_0 .alias "qj", 3 0, v0x8d89608_0;
v0x8d67ef8_0 .alias "qk", 3 0, v0x8d89658_0;
v0x8d67fa8_0 .var "reg_numj", 4 0;
v0x8d68030_0 .var "reg_numk", 4 0;
v0x8d680e8_0 .net "reset", 0 0, L_0x8d8cae8; 1 drivers
v0x8d68138_0 .alias "reset_bus", 10 0, v0x8d897b0_0;
v0x8d681f8_0 .var "result", 31 0;
v0x8d68248_0 .var "valid", 0 0;
v0x8d68188_0 .alias "valid_bus", 10 0, v0x8d89220_0;
v0x8d68348_0 .alias "vj", 31 0, v0x8d898c0_0;
v0x8d68418_0 .alias "vk", 31 0, v0x8d89800_0;
E_0x8d65ff0 .event posedge, v0x8d680e8_0, v0x8d62770_0;
L_0x8d8c738 .part/pv v0x8d67a48_0, 8, 1, 11;
L_0x8d8c818 .part/pv v0x8d681f8_0, 256, 32, 352;
L_0x8d8c8f8 .part/pv v0x8d68248_0, 8, 1, 11;
L_0x8d8c9d8 .part/pv v0x8d67c90_0, 32, 4, 44;
L_0x8d8cae8 .part v0x8d83ab0_0, 8, 1;
S_0x8d671f0 .scope task, "checkAndGetData" "checkAndGetData" 10 158, 10 158, S_0x8d65b40;
 .timescale -9 -10;
v0x8d67270_0 .var "Q", 3 0;
v0x8d672e0_0 .var "V", 31 0;
v0x8d67340_0 .var "dataBus", 479 0;
v0x8d673a0_0 .var "ok", 0 0;
v0x8d673f0_0 .var "valid", 0 0;
v0x8d67450_0 .var "validBus", 14 0;
TD_CPU.alu_rs\x5B8\x5D.checkAndGetData ;
    %load/v 8, v0x8d67270_0, 4;
    %mov 12, 0, 2;
    %cmpi/u 8, 15, 6;
    %jmp/0xz  T_45.88, 6;
    %jmp T_45.89;
T_45.88 ;
    %load/v 8, v0x8d67450_0, 15;
    %set/v v0x8d66c30_0, 8, 15;
    %load/v 8, v0x8d67270_0, 4;
    %set/v v0x8d66ca0_0, 8, 4;
    %fork TD_CPU.alu_rs\x5B8\x5D.readValidBus, S_0x8d66bb0;
    %join;
    %load/v  8, v0x8d66d00_0, 1;
    %set/v v0x8d673f0_0, 8, 1;
    %load/v 8, v0x8d673f0_0, 1;
    %jmp/0xz  T_45.90, 8;
    %load/v 8, v0x8d67340_0, 480;
    %set/v v0x8d66de0_0, 8, 480;
    %load/v 8, v0x8d67270_0, 4;
    %set/v v0x8d66e50_0, 8, 4;
    %fork TD_CPU.alu_rs\x5B8\x5D.readDataBus, S_0x8d66d60;
    %join;
    %load/v  8, v0x8d66eb0_0, 32;
    %set/v v0x8d672e0_0, 8, 32;
    %movi 8, 15, 5;
    %set/v v0x8d67270_0, 8, 4;
    %jmp T_45.91;
T_45.90 ;
    %set/v v0x8d673a0_0, 0, 1;
T_45.91 ;
T_45.89 ;
    %end;
S_0x8d66f10 .scope task, "getData" "getData" 10 121, 10 121, S_0x8d65b40;
 .timescale -9 -10;
v0x8d66f90_0 .var "CDB_data_data", 479 0;
v0x8d67000_0 .var "CDB_data_valid", 14 0;
v0x8d67060_0 .var "Q", 3 0;
v0x8d670c0_0 .var "V", 31 0;
v0x8d67110_0 .var "q", 3 0;
v0x8d67170_0 .var "v", 31 0;
TD_CPU.alu_rs\x5B8\x5D.getData ;
    %load/v 8, v0x8d67110_0, 4;
    %mov 12, 0, 2;
    %cmpi/u 8, 15, 6;
    %jmp/0xz  T_46.92, 6;
    %load/v 8, v0x8d67170_0, 32;
    %set/v v0x8d670c0_0, 8, 32;
    %movi 8, 15, 5;
    %set/v v0x8d67060_0, 8, 4;
    %jmp T_46.93;
T_46.92 ;
    %load/v 8, v0x8d67000_0, 15;
    %set/v v0x8d66c30_0, 8, 15;
    %load/v 8, v0x8d67110_0, 4;
    %set/v v0x8d66ca0_0, 8, 4;
    %fork TD_CPU.alu_rs\x5B8\x5D.readValidBus, S_0x8d66bb0;
    %join;
    %load/v  8, v0x8d66d00_0, 1;
    %jmp/0xz  T_46.94, 8;
    %load/v 8, v0x8d66f90_0, 480;
    %set/v v0x8d66de0_0, 8, 480;
    %load/v 8, v0x8d67110_0, 4;
    %set/v v0x8d66e50_0, 8, 4;
    %fork TD_CPU.alu_rs\x5B8\x5D.readDataBus, S_0x8d66d60;
    %join;
    %load/v  8, v0x8d66eb0_0, 32;
    %set/v v0x8d670c0_0, 8, 32;
    %movi 8, 15, 5;
    %set/v v0x8d67060_0, 8, 4;
    %jmp T_46.95;
T_46.94 ;
    %load/v 8, v0x8d67110_0, 4;
    %set/v v0x8d67060_0, 8, 4;
T_46.95 ;
T_46.93 ;
    %end;
S_0x8d66d60 .scope function, "readDataBus" "readDataBus" 10 141, 10 141, S_0x8d65b40;
 .timescale -9 -10;
v0x8d66de0_0 .var "CDB_data_data", 479 0;
v0x8d66e50_0 .var "index", 3 0;
v0x8d66eb0_0 .var "readDataBus", 31 0;
TD_CPU.alu_rs\x5B8\x5D.readDataBus ;
    %load/v 8, v0x8d66de0_0, 480;
    %load/v 488, v0x8d66e50_0, 4;
    %movi 492, 0, 7;
    %muli 488, 32, 11;
    %ix/get 0, 488, 11;
    %shiftr/i0  8, 480;
    %set/v v0x8d66eb0_0, 8, 32;
    %end;
S_0x8d66bb0 .scope function, "readValidBus" "readValidBus" 10 150, 10 150, S_0x8d65b40;
 .timescale -9 -10;
v0x8d66c30_0 .var "CDB_data_valid", 14 0;
v0x8d66ca0_0 .var "index", 3 0;
v0x8d66d00_0 .var "readValidBus", 0 0;
TD_CPU.alu_rs\x5B8\x5D.readValidBus ;
    %load/v 8, v0x8d66c30_0, 15;
    %load/v 23, v0x8d66ca0_0, 4;
    %ix/get 0, 23, 4;
    %shiftr/i0  8, 15;
    %set/v v0x8d66d00_0, 8, 1;
    %end;
S_0x8d66b30 .scope begin, "checkIssue" "checkIssue" 10 53, 10 53, S_0x8d65b40;
 .timescale -9 -10;
S_0x8d66a40 .scope begin, "execute" "execute" 10 80, 10 80, S_0x8d65b40;
 .timescale -9 -10;
v0x8d66ac0_0 .var "ok", 0 0;
S_0x8d63008 .scope module, "store_rs[0]" "store_RS" 2 75, 11 1, S_0x8d3d850;
 .timescale -9 -10;
P_0x8d6308c .param/l "ADDER_NUM" 3 41, C4<0011>;
P_0x8d630a0 .param/l "ADDER_START" 3 47, C4<0000>;
P_0x8d630b4 .param/l "ALU_ADD" 3 10, C4<0000>;
P_0x8d630c8 .param/l "ALU_MUL" 3 12, C4<0010>;
P_0x8d630dc .param/l "ALU_SUB" 3 11, C4<0001>;
P_0x8d630f0 .param/l "BGE_IMM_START" 3 22, +C4<010110>;
P_0x8d63104 .param/l "BGE_PCOFFSET_START" 3 23, +C4<01001>;
P_0x8d63118 .param/l "BLOCK_SIZE" 3 6, +C4<010000>;
P_0x8d6312c .param/l "BRANCH_NUM" 3 43, C4<0001>;
P_0x8d63140 .param/l "BRANCH_START" 3 49, C4<00101>;
P_0x8d63154 .param/l "CACHE_SIZE" 3 7, +C4<010000000000>;
P_0x8d63168 .param/l "FU_INDEX" 3 53, +C4<0100>;
P_0x8d6317c .param/l "FU_NUM" 3 46, C4<00001011>;
P_0x8d63190 .param/l "IMM_START" 3 20, +C4<010001>;
P_0x8d631a4 .param/l "INST_ADD" 3 24, C4<0000>;
P_0x8d631b8 .param/l "INST_ADDI" 3 29, C4<0101>;
P_0x8d631cc .param/l "INST_BGE" 3 37, C4<1101>;
P_0x8d631e0 .param/l "INST_J" 3 35, C4<1011>;
P_0x8d631f4 .param/l "INST_JR" 3 36, C4<1100>;
P_0x8d63208 .param/l "INST_LI" 3 34, C4<1010>;
P_0x8d6321c .param/l "INST_LW" 3 32, C4<1000>;
P_0x8d63230 .param/l "INST_LWRR" 3 27, C4<0011>;
P_0x8d63244 .param/l "INST_MUL" 3 26, C4<0010>;
P_0x8d63258 .param/l "INST_MULI" 3 31, C4<0111>;
P_0x8d6326c .param/l "INST_START" 3 15, +C4<011111>;
P_0x8d63280 .param/l "INST_SUB" 3 25, C4<0001>;
P_0x8d63294 .param/l "INST_SUBI" 3 30, C4<0110>;
P_0x8d632a8 .param/l "INST_SW" 3 33, C4<1001>;
P_0x8d632bc .param/l "INST_SWRR" 3 28, C4<0100>;
P_0x8d632d0 .param/l "J_PCOFFSET_START" 3 21, +C4<011011>;
P_0x8d632e4 .param/l "LOADER_NUM" 3 45, C4<0011>;
P_0x8d632f8 .param/l "LOADER_START" 3 51, C4<0001000>;
P_0x8d6330c .param/l "MEM_SIZE" 3 2, +C4<010000000000>;
P_0x8d63320 .param/l "MEM_STALL" 3 56, +C4<01100100>;
P_0x8d63334 .param/l "MULTER_NUM" 3 42, C4<0010>;
P_0x8d63348 .param/l "MULTER_START" 3 48, C4<0011>;
P_0x8d6335c .param/l "MUL_STALL" 3 55, +C4<011>;
P_0x8d63370 .param/l "NO_FU" 3 52, C4<1111>;
P_0x8d63384 .param/l "NULL" 3 62, +C4<01111>;
P_0x8d63398 .param/l "OPCODE_WIDTH" 3 16, +C4<0100>;
P_0x8d633ac .param/l "RB_INDEX" 3 60, +C4<0100>;
P_0x8d633c0 .param/l "RB_SIZE" 3 59, +C4<01111>;
P_0x8d633d4 .param/l "RD_START" 3 18, +C4<011011>;
P_0x8d633e8 .param/l "READY" 3 61, +C4<01111>;
P_0x8d633fc .param/l "REG_FILE_SIZE" 3 4, +C4<0100000>;
P_0x8d63410 .param/l "REG_INDEX" 3 3, +C4<0101>;
P_0x8d63424 .param/l "RS_START" 3 17, +C4<010110>;
P_0x8d63438 .param/l "RT_START" 3 19, +C4<010001>;
P_0x8d6344c .param/l "STORER_NUM" 3 44, C4<0010>;
P_0x8d63460 .param/l "STORER_START" 3 50, C4<000110>;
P_0x8d63474 .param/l "StorerIndex" 11 6, +C4<0>;
P_0x8d63488 .param/l "TAG_SIZE" 3 8, +C4<010010>;
P_0x8d6349c .param/l "WORD_SIZE" 3 1, +C4<0100000>;
P_0x8d634b0 .param/l "fuindex" 11 6, +C4<01001>;
v0x8d64a48_0 .alias "CDB_data_data", 479 0, v0x8d88fa0_0;
v0x8d64ac8_0 .alias "CDB_data_valid", 14 0, v0x8d88ff0_0;
v0x8d64b38_0 .var "Qi", 3 0;
v0x8d64b88_0 .var "Qj", 3 0;
v0x8d64bd8_0 .var "Qk", 3 0;
v0x8d64c28_0 .alias "RB_index", 3 0, v0x8d89040_0;
v0x8d64cb8_0 .alias "RB_index_bus", 43 0, v0x8d89130_0;
v0x8d64d28_0 .var "Vi", 31 0;
v0x8d64da0_0 .var "Vj", 31 0;
v0x8d64df0_0 .var "Vk", 31 0;
v0x8d64e80_0 .net *"_s11", 0 0, v0x8d65800_0; 1 drivers
v0x8d64ee0_0 .net *"_s15", 31 0, v0x8d65278_0; 1 drivers
v0x8d64f40_0 .net *"_s19", 3 0, v0x8d65340_0; 1 drivers
v0x8d64fa0_0 .net *"_s3", 0 0, v0x8d65138_0; 1 drivers
v0x8d65040_0 .net *"_s7", 31 0, v0x8d65888_0; 1 drivers
v0x8d650a0_0 .alias "addr_bus", 63 0, v0x8d89180_0;
v0x8d65138_0 .var "busy", 0 0;
v0x8d65188_0 .alias "busy_out", 10 0, v0x8d89270_0;
v0x8d65228_0 .alias "clk", 0 0, v0x8d88380_0;
v0x8d65278_0 .var "data", 31 0;
v0x8d651d8_0 .alias "data_bus", 351 0, v0x8d891d0_0;
v0x8d65340_0 .var "dest", 3 0;
v0x8d652c8_0 .alias "fu", 3 0, v0x8d89090_0;
v0x8d65410_0 .alias "inst", 31 0, v0x8d890e0_0;
v0x8d654c8_0 .var "op", 3 0;
v0x8d65518_0 .alias "qi", 3 0, v0x8d89570_0;
v0x8d65460_0 .alias "qj", 3 0, v0x8d89608_0;
v0x8d655d8_0 .alias "qk", 3 0, v0x8d89658_0;
v0x8d65588_0 .var "reg_numi", 4 0;
v0x8d656c0_0 .var "reg_numj", 4 0;
v0x8d65648_0 .var "reg_numk", 4 0;
v0x8d657b0_0 .net "reset", 0 0, L_0x8d8d018; 1 drivers
v0x8d65710_0 .alias "reset_bus", 10 0, v0x8d897b0_0;
v0x8d65888_0 .var "result", 31 0;
v0x8d65800_0 .var "valid", 0 0;
v0x8d65968_0 .alias "valid_bus", 10 0, v0x8d89220_0;
v0x8d658d8_0 .alias "vi", 31 0, v0x8d896a8_0;
v0x8d65a50_0 .alias "vj", 31 0, v0x8d898c0_0;
v0x8d659b8_0 .alias "vk", 31 0, v0x8d89800_0;
E_0x8d62168 .event posedge, v0x8d657b0_0, v0x8d62770_0;
L_0x8d8cb58 .part/pv v0x8d65138_0, 9, 1, 11;
L_0x8d8cc38 .part/pv v0x8d65888_0, 0, 32, 64;
L_0x8d8cd48 .part/pv v0x8d65800_0, 9, 1, 11;
L_0x8d8ce28 .part/pv v0x8d65278_0, 288, 32, 352;
L_0x8d8cf38 .part/pv v0x8d65340_0, 36, 4, 44;
L_0x8d8d018 .part v0x8d83ab0_0, 9, 1;
S_0x8d64768 .scope task, "checkAndGetData" "checkAndGetData" 11 146, 11 146, S_0x8d63008;
 .timescale -9 -10;
v0x8d647e8_0 .var "Q", 3 0;
v0x8d64858_0 .var "V", 31 0;
v0x8d648b8_0 .var "dataBus", 479 0;
v0x8d64918_0 .var "ok", 0 0;
v0x8d64968_0 .var "valid", 0 0;
v0x8d649c8_0 .var "validBus", 14 0;
TD_CPU.store_rs\x5B0\x5D.checkAndGetData ;
    %load/v 8, v0x8d647e8_0, 4;
    %mov 12, 0, 2;
    %cmpi/u 8, 15, 6;
    %jmp/0xz  T_49.96, 6;
    %jmp T_49.97;
T_49.96 ;
    %load/v 8, v0x8d649c8_0, 15;
    %set/v v0x8d641a8_0, 8, 15;
    %load/v 8, v0x8d647e8_0, 4;
    %set/v v0x8d64218_0, 8, 4;
    %fork TD_CPU.store_rs\x5B0\x5D.readValidBus, S_0x8d64128;
    %join;
    %load/v  8, v0x8d64278_0, 1;
    %set/v v0x8d64968_0, 8, 1;
    %load/v 8, v0x8d64968_0, 1;
    %jmp/0xz  T_49.98, 8;
    %movi 8, 15, 5;
    %set/v v0x8d647e8_0, 8, 4;
    %load/v 8, v0x8d648b8_0, 480;
    %set/v v0x8d64358_0, 8, 480;
    %load/v 8, v0x8d647e8_0, 4;
    %set/v v0x8d643c8_0, 8, 4;
    %fork TD_CPU.store_rs\x5B0\x5D.readDataBus, S_0x8d642d8;
    %join;
    %load/v  8, v0x8d64428_0, 32;
    %set/v v0x8d64858_0, 8, 32;
    %jmp T_49.99;
T_49.98 ;
    %set/v v0x8d64918_0, 0, 1;
T_49.99 ;
T_49.97 ;
    %end;
S_0x8d64488 .scope task, "getData" "getData" 11 111, 11 111, S_0x8d63008;
 .timescale -9 -10;
v0x8d64508_0 .var "CDB_data_data", 479 0;
v0x8d64578_0 .var "CDB_data_valid", 14 0;
v0x8d645d8_0 .var "Q", 3 0;
v0x8d64638_0 .var "V", 31 0;
v0x8d64688_0 .var "q", 3 0;
v0x8d646e8_0 .var "v", 31 0;
TD_CPU.store_rs\x5B0\x5D.getData ;
    %load/v 8, v0x8d64688_0, 4;
    %mov 12, 0, 2;
    %cmpi/u 8, 15, 6;
    %jmp/0xz  T_50.100, 6;
    %load/v 8, v0x8d646e8_0, 32;
    %set/v v0x8d64638_0, 8, 32;
    %movi 8, 15, 5;
    %set/v v0x8d645d8_0, 8, 4;
    %jmp T_50.101;
T_50.100 ;
    %load/v 8, v0x8d64578_0, 15;
    %set/v v0x8d641a8_0, 8, 15;
    %load/v 8, v0x8d64688_0, 4;
    %set/v v0x8d64218_0, 8, 4;
    %fork TD_CPU.store_rs\x5B0\x5D.readValidBus, S_0x8d64128;
    %join;
    %load/v  8, v0x8d64278_0, 1;
    %jmp/0xz  T_50.102, 8;
    %load/v 8, v0x8d64508_0, 480;
    %set/v v0x8d64358_0, 8, 480;
    %load/v 8, v0x8d64688_0, 4;
    %set/v v0x8d643c8_0, 8, 4;
    %fork TD_CPU.store_rs\x5B0\x5D.readDataBus, S_0x8d642d8;
    %join;
    %load/v  8, v0x8d64428_0, 32;
    %set/v v0x8d64638_0, 8, 32;
    %movi 8, 15, 5;
    %set/v v0x8d645d8_0, 8, 4;
    %jmp T_50.103;
T_50.102 ;
    %load/v 8, v0x8d64688_0, 4;
    %set/v v0x8d645d8_0, 8, 4;
T_50.103 ;
T_50.101 ;
    %end;
S_0x8d642d8 .scope function, "readDataBus" "readDataBus" 11 130, 11 130, S_0x8d63008;
 .timescale -9 -10;
v0x8d64358_0 .var "CDB_data_data", 479 0;
v0x8d643c8_0 .var "index", 3 0;
v0x8d64428_0 .var "readDataBus", 31 0;
TD_CPU.store_rs\x5B0\x5D.readDataBus ;
    %load/v 8, v0x8d64358_0, 480;
    %load/v 488, v0x8d643c8_0, 4;
    %movi 492, 0, 7;
    %muli 488, 32, 11;
    %ix/get 0, 488, 11;
    %shiftr/i0  8, 480;
    %set/v v0x8d64428_0, 8, 32;
    %end;
S_0x8d64128 .scope function, "readValidBus" "readValidBus" 11 138, 11 138, S_0x8d63008;
 .timescale -9 -10;
v0x8d641a8_0 .var "CDB_data_valid", 14 0;
v0x8d64218_0 .var "index", 3 0;
v0x8d64278_0 .var "readValidBus", 0 0;
TD_CPU.store_rs\x5B0\x5D.readValidBus ;
    %load/v 8, v0x8d641a8_0, 15;
    %load/v 23, v0x8d64218_0, 4;
    %ix/get 0, 23, 4;
    %shiftr/i0  8, 15;
    %set/v v0x8d64278_0, 8, 1;
    %end;
S_0x8d640a8 .scope begin, "checkIssue" "checkIssue" 11 55, 11 55, S_0x8d63008;
 .timescale -9 -10;
S_0x8d63fb8 .scope begin, "execute" "execute" 11 91, 11 91, S_0x8d63008;
 .timescale -9 -10;
v0x8d64038_0 .var "ok", 0 0;
S_0x8cd8d18 .scope module, "store_rs[1]" "store_RS" 2 75, 11 1, S_0x8d3d850;
 .timescale -9 -10;
P_0x8cf8c14 .param/l "ADDER_NUM" 3 41, C4<0011>;
P_0x8cf8c28 .param/l "ADDER_START" 3 47, C4<0000>;
P_0x8cf8c3c .param/l "ALU_ADD" 3 10, C4<0000>;
P_0x8cf8c50 .param/l "ALU_MUL" 3 12, C4<0010>;
P_0x8cf8c64 .param/l "ALU_SUB" 3 11, C4<0001>;
P_0x8cf8c78 .param/l "BGE_IMM_START" 3 22, +C4<010110>;
P_0x8cf8c8c .param/l "BGE_PCOFFSET_START" 3 23, +C4<01001>;
P_0x8cf8ca0 .param/l "BLOCK_SIZE" 3 6, +C4<010000>;
P_0x8cf8cb4 .param/l "BRANCH_NUM" 3 43, C4<0001>;
P_0x8cf8cc8 .param/l "BRANCH_START" 3 49, C4<00101>;
P_0x8cf8cdc .param/l "CACHE_SIZE" 3 7, +C4<010000000000>;
P_0x8cf8cf0 .param/l "FU_INDEX" 3 53, +C4<0100>;
P_0x8cf8d04 .param/l "FU_NUM" 3 46, C4<00001011>;
P_0x8cf8d18 .param/l "IMM_START" 3 20, +C4<010001>;
P_0x8cf8d2c .param/l "INST_ADD" 3 24, C4<0000>;
P_0x8cf8d40 .param/l "INST_ADDI" 3 29, C4<0101>;
P_0x8cf8d54 .param/l "INST_BGE" 3 37, C4<1101>;
P_0x8cf8d68 .param/l "INST_J" 3 35, C4<1011>;
P_0x8cf8d7c .param/l "INST_JR" 3 36, C4<1100>;
P_0x8cf8d90 .param/l "INST_LI" 3 34, C4<1010>;
P_0x8cf8da4 .param/l "INST_LW" 3 32, C4<1000>;
P_0x8cf8db8 .param/l "INST_LWRR" 3 27, C4<0011>;
P_0x8cf8dcc .param/l "INST_MUL" 3 26, C4<0010>;
P_0x8cf8de0 .param/l "INST_MULI" 3 31, C4<0111>;
P_0x8cf8df4 .param/l "INST_START" 3 15, +C4<011111>;
P_0x8cf8e08 .param/l "INST_SUB" 3 25, C4<0001>;
P_0x8cf8e1c .param/l "INST_SUBI" 3 30, C4<0110>;
P_0x8cf8e30 .param/l "INST_SW" 3 33, C4<1001>;
P_0x8cf8e44 .param/l "INST_SWRR" 3 28, C4<0100>;
P_0x8cf8e58 .param/l "J_PCOFFSET_START" 3 21, +C4<011011>;
P_0x8cf8e6c .param/l "LOADER_NUM" 3 45, C4<0011>;
P_0x8cf8e80 .param/l "LOADER_START" 3 51, C4<0001000>;
P_0x8cf8e94 .param/l "MEM_SIZE" 3 2, +C4<010000000000>;
P_0x8cf8ea8 .param/l "MEM_STALL" 3 56, +C4<01100100>;
P_0x8cf8ebc .param/l "MULTER_NUM" 3 42, C4<0010>;
P_0x8cf8ed0 .param/l "MULTER_START" 3 48, C4<0011>;
P_0x8cf8ee4 .param/l "MUL_STALL" 3 55, +C4<011>;
P_0x8cf8ef8 .param/l "NO_FU" 3 52, C4<1111>;
P_0x8cf8f0c .param/l "NULL" 3 62, +C4<01111>;
P_0x8cf8f20 .param/l "OPCODE_WIDTH" 3 16, +C4<0100>;
P_0x8cf8f34 .param/l "RB_INDEX" 3 60, +C4<0100>;
P_0x8cf8f48 .param/l "RB_SIZE" 3 59, +C4<01111>;
P_0x8cf8f5c .param/l "RD_START" 3 18, +C4<011011>;
P_0x8cf8f70 .param/l "READY" 3 61, +C4<01111>;
P_0x8cf8f84 .param/l "REG_FILE_SIZE" 3 4, +C4<0100000>;
P_0x8cf8f98 .param/l "REG_INDEX" 3 3, +C4<0101>;
P_0x8cf8fac .param/l "RS_START" 3 17, +C4<010110>;
P_0x8cf8fc0 .param/l "RT_START" 3 19, +C4<010001>;
P_0x8cf8fd4 .param/l "STORER_NUM" 3 44, C4<0010>;
P_0x8cf8fe8 .param/l "STORER_START" 3 50, C4<000110>;
P_0x8cf8ffc .param/l "StorerIndex" 11 6, +C4<01>;
P_0x8cf9010 .param/l "TAG_SIZE" 3 8, +C4<010010>;
P_0x8cf9024 .param/l "WORD_SIZE" 3 1, +C4<0100000>;
P_0x8cf9038 .param/l "fuindex" 11 6, +C4<01010>;
v0x8d61f38_0 .alias "CDB_data_data", 479 0, v0x8d88fa0_0;
v0x8d61fa8_0 .alias "CDB_data_valid", 14 0, v0x8d88ff0_0;
v0x8d62008_0 .var "Qi", 3 0;
v0x8d62068_0 .var "Qj", 3 0;
v0x8d620b8_0 .var "Qk", 3 0;
v0x8d62118_0 .alias "RB_index", 3 0, v0x8d89040_0;
v0x8d62198_0 .alias "RB_index_bus", 43 0, v0x8d89130_0;
v0x8d621f8_0 .var "Vi", 31 0;
v0x8d62280_0 .var "Vj", 31 0;
v0x8d622e0_0 .var "Vk", 31 0;
v0x8d62370_0 .net *"_s11", 0 0, v0x8d62cc8_0; 1 drivers
v0x8d623d0_0 .net *"_s15", 31 0, v0x8d627c0_0; 1 drivers
v0x8d62468_0 .net *"_s19", 3 0, v0x8d62868_0; 1 drivers
v0x8d624c8_0 .net *"_s3", 0 0, v0x8d62670_0; 1 drivers
v0x8d62568_0 .net *"_s7", 31 0, v0x8d62d50_0; 1 drivers
v0x8d625c8_0 .alias "addr_bus", 63 0, v0x8d89180_0;
v0x8d62670_0 .var "busy", 0 0;
v0x8d626d0_0 .alias "busy_out", 10 0, v0x8d89270_0;
v0x8d62770_0 .alias "clk", 0 0, v0x8d88380_0;
v0x8d627c0_0 .var "data", 31 0;
v0x8d62720_0 .alias "data_bus", 351 0, v0x8d891d0_0;
v0x8d62868_0 .var "dest", 3 0;
v0x8d62918_0 .alias "fu", 3 0, v0x8d89090_0;
v0x8d62968_0 .alias "inst", 31 0, v0x8d890e0_0;
v0x8d628b8_0 .var "op", 3 0;
v0x8d62a20_0 .alias "qi", 3 0, v0x8d89570_0;
v0x8d629b8_0 .alias "qj", 3 0, v0x8d89608_0;
v0x8d62ae0_0 .alias "qk", 3 0, v0x8d89658_0;
v0x8d62a70_0 .var "reg_numi", 4 0;
v0x8d62ba8_0 .var "reg_numj", 4 0;
v0x8d62b30_0 .var "reg_numk", 4 0;
v0x8d62c78_0 .net "reset", 0 0, L_0x8d8d520; 1 drivers
v0x8d62bf8_0 .alias "reset_bus", 10 0, v0x8d897b0_0;
v0x8d62d50_0 .var "result", 31 0;
v0x8d62cc8_0 .var "valid", 0 0;
v0x8d62e30_0 .alias "valid_bus", 10 0, v0x8d89220_0;
v0x8d62da0_0 .alias "vi", 31 0, v0x8d896a8_0;
v0x8d62f18_0 .alias "vj", 31 0, v0x8d898c0_0;
v0x8d62e80_0 .alias "vk", 31 0, v0x8d89800_0;
E_0x8c7c8e8 .event posedge, v0x8d62770_0;
E_0x8c7e458 .event posedge, v0x8d62c78_0, v0x8d62770_0;
L_0x8d8d0a8 .part/pv v0x8d62670_0, 10, 1, 11;
L_0x8d8d188 .part/pv v0x8d62d50_0, 32, 32, 64;
L_0x8d8d268 .part/pv v0x8d62cc8_0, 10, 1, 11;
L_0x8d8d348 .part/pv v0x8d627c0_0, 320, 32, 352;
L_0x8d8d440 .part/pv v0x8d62868_0, 40, 4, 44;
L_0x8d8d520 .part v0x8d83ab0_0, 10, 1;
S_0x8d61c58 .scope task, "checkAndGetData" "checkAndGetData" 11 146, 11 146, S_0x8cd8d18;
 .timescale -9 -10;
v0x8d61cd8_0 .var "Q", 3 0;
v0x8d61d48_0 .var "V", 31 0;
v0x8d61da8_0 .var "dataBus", 479 0;
v0x8d61e08_0 .var "ok", 0 0;
v0x8d61e58_0 .var "valid", 0 0;
v0x8d61eb8_0 .var "validBus", 14 0;
TD_CPU.store_rs\x5B1\x5D.checkAndGetData ;
    %load/v 8, v0x8d61cd8_0, 4;
    %mov 12, 0, 2;
    %cmpi/u 8, 15, 6;
    %jmp/0xz  T_53.104, 6;
    %jmp T_53.105;
T_53.104 ;
    %load/v 8, v0x8d61eb8_0, 15;
    %set/v v0x8d61680_0, 8, 15;
    %load/v 8, v0x8d61cd8_0, 4;
    %set/v v0x8d616f0_0, 8, 4;
    %fork TD_CPU.store_rs\x5B1\x5D.readValidBus, S_0x8d61600;
    %join;
    %load/v  8, v0x8d61750_0, 1;
    %set/v v0x8d61e58_0, 8, 1;
    %load/v 8, v0x8d61e58_0, 1;
    %jmp/0xz  T_53.106, 8;
    %movi 8, 15, 5;
    %set/v v0x8d61cd8_0, 8, 4;
    %load/v 8, v0x8d61da8_0, 480;
    %set/v v0x8d61830_0, 8, 480;
    %load/v 8, v0x8d61cd8_0, 4;
    %set/v v0x8d618a0_0, 8, 4;
    %fork TD_CPU.store_rs\x5B1\x5D.readDataBus, S_0x8d617b0;
    %join;
    %load/v  8, v0x8d61900_0, 32;
    %set/v v0x8d61d48_0, 8, 32;
    %jmp T_53.107;
T_53.106 ;
    %set/v v0x8d61e08_0, 0, 1;
T_53.107 ;
T_53.105 ;
    %end;
S_0x8d61960 .scope task, "getData" "getData" 11 111, 11 111, S_0x8cd8d18;
 .timescale -9 -10;
v0x8d619e0_0 .var "CDB_data_data", 479 0;
v0x8d61a50_0 .var "CDB_data_valid", 14 0;
v0x8d61ab0_0 .var "Q", 3 0;
v0x8d61b10_0 .var "V", 31 0;
v0x8d61b78_0 .var "q", 3 0;
v0x8d61bd8_0 .var "v", 31 0;
TD_CPU.store_rs\x5B1\x5D.getData ;
    %load/v 8, v0x8d61b78_0, 4;
    %mov 12, 0, 2;
    %cmpi/u 8, 15, 6;
    %jmp/0xz  T_54.108, 6;
    %load/v 8, v0x8d61bd8_0, 32;
    %set/v v0x8d61b10_0, 8, 32;
    %movi 8, 15, 5;
    %set/v v0x8d61ab0_0, 8, 4;
    %jmp T_54.109;
T_54.108 ;
    %load/v 8, v0x8d61a50_0, 15;
    %set/v v0x8d61680_0, 8, 15;
    %load/v 8, v0x8d61b78_0, 4;
    %set/v v0x8d616f0_0, 8, 4;
    %fork TD_CPU.store_rs\x5B1\x5D.readValidBus, S_0x8d61600;
    %join;
    %load/v  8, v0x8d61750_0, 1;
    %jmp/0xz  T_54.110, 8;
    %load/v 8, v0x8d619e0_0, 480;
    %set/v v0x8d61830_0, 8, 480;
    %load/v 8, v0x8d61b78_0, 4;
    %set/v v0x8d618a0_0, 8, 4;
    %fork TD_CPU.store_rs\x5B1\x5D.readDataBus, S_0x8d617b0;
    %join;
    %load/v  8, v0x8d61900_0, 32;
    %set/v v0x8d61b10_0, 8, 32;
    %movi 8, 15, 5;
    %set/v v0x8d61ab0_0, 8, 4;
    %jmp T_54.111;
T_54.110 ;
    %load/v 8, v0x8d61b78_0, 4;
    %set/v v0x8d61ab0_0, 8, 4;
T_54.111 ;
T_54.109 ;
    %end;
S_0x8d617b0 .scope function, "readDataBus" "readDataBus" 11 130, 11 130, S_0x8cd8d18;
 .timescale -9 -10;
v0x8d61830_0 .var "CDB_data_data", 479 0;
v0x8d618a0_0 .var "index", 3 0;
v0x8d61900_0 .var "readDataBus", 31 0;
TD_CPU.store_rs\x5B1\x5D.readDataBus ;
    %load/v 8, v0x8d61830_0, 480;
    %load/v 488, v0x8d618a0_0, 4;
    %movi 492, 0, 7;
    %muli 488, 32, 11;
    %ix/get 0, 488, 11;
    %shiftr/i0  8, 480;
    %set/v v0x8d61900_0, 8, 32;
    %end;
S_0x8d61600 .scope function, "readValidBus" "readValidBus" 11 138, 11 138, S_0x8cd8d18;
 .timescale -9 -10;
v0x8d61680_0 .var "CDB_data_valid", 14 0;
v0x8d616f0_0 .var "index", 3 0;
v0x8d61750_0 .var "readValidBus", 0 0;
TD_CPU.store_rs\x5B1\x5D.readValidBus ;
    %load/v 8, v0x8d61680_0, 15;
    %load/v 23, v0x8d616f0_0, 4;
    %ix/get 0, 23, 4;
    %shiftr/i0  8, 15;
    %set/v v0x8d61750_0, 8, 1;
    %end;
S_0x8d61580 .scope begin, "checkIssue" "checkIssue" 11 55, 11 55, S_0x8cd8d18;
 .timescale -9 -10;
S_0x8cd8f18 .scope begin, "execute" "execute" 11 91, 11 91, S_0x8cd8d18;
 .timescale -9 -10;
v0x8c7b4c0_0 .var "ok", 0 0;
S_0x8d3e4f8 .scope module, "def_param" "def_param" 12 1;
 .timescale -9 -10;
    .scope S_0x8d86ba0;
T_57 ;
    %end;
    .thread T_57;
    .scope S_0x8d86ba0;
T_58 ;
    %wait E_0x8d7fc80;
    %load/v 8, v0x8d88060_0, 1;
    %jmp/0xz  T_58.0, 8;
    %set/v v0x8d87e08_0, 0, 6;
T_58.2 ;
    %load/v 8, v0x8d87e08_0, 6;
    %mov 14, 0, 2;
   %cmpi/u 8, 32, 8;
    %jmp/0xz T_58.3, 5;
    %ix/getv 3, v0x8d87e08_0;
    %jmp/1 t_0, 4;
    %ix/load 0, 32, 0; word width
    %ix/load 1, 0, 0; part off
    %assign/av v0x8d87fd8, 0, 0;
t_0 ;
    %load/v 8, v0x8d87e08_0, 6;
    %mov 14, 0, 26;
    %addi 8, 1, 32;
    %set/v v0x8d87e08_0, 8, 6;
    %jmp T_58.2;
T_58.3 ;
    %jmp T_58.1;
T_58.0 ;
    %load/v 8, v0x8d880e8_0, 1;
    %jmp/0xz  T_58.4, 8;
    %load/v 8, v0x8d881c8_0, 32;
    %ix/getv 3, v0x8d88178_0;
    %jmp/1 t_1, 4;
    %ix/load 0, 32, 0; word width
    %ix/load 1, 0, 0; part off
    %assign/av v0x8d87fd8, 0, 8;
t_1 ;
    %vpi_call 5 32 "$display", $realtime, ": reg[%d] = %d", v0x8d88178_0, v0x8d881c8_0;
T_58.4 ;
T_58.1 ;
    %jmp T_58;
    .thread T_58;
    .scope S_0x8d85a90;
T_59 ;
    %wait E_0x8d7fc80;
    %fork t_3, S_0x8d86ab0;
    %jmp t_2;
    .scope S_0x8d86ab0;
t_3 ;
    %load/v 8, v0x8d884c0_0, 1;
    %jmp/0xz  T_59.0, 8;
    %set/v v0x8d86b30_0, 0, 32;
T_59.2 ;
    %load/v 8, v0x8d86b30_0, 32;
   %cmpi/u 8, 32, 32;
    %jmp/0xz T_59.3, 5;
    %movi 8, 15, 5;
    %ix/getv 3, v0x8d86b30_0;
   %jmp/1 t_4, 4;
   %ix/load 1, 0, 0;
   %set/av v0x8d88600, 8, 4;
t_4 ;
    %ix/load 0, 1, 0;
    %load/vp0 8, v0x8d86b30_0, 32;
    %set/v v0x8d86b30_0, 8, 32;
    %jmp T_59.2;
T_59.3 ;
    %jmp T_59.1;
T_59.0 ;
    %load/v 8, v0x8d88938_0, 1;
    %jmp/0xz  T_59.4, 8;
    %load/v 8, v0x8d889d8_0, 4;
    %ix/getv 3, v0x8d888e8_0;
    %jmp/1 t_5, 4;
    %ix/load 0, 4, 0; word width
    %ix/load 1, 0, 0; part off
    %assign/av v0x8d88600, 0, 8;
t_5 ;
    %vpi_call 4 44 "$display", $realtime, ": reg_status[%d] = %d", v0x8d888e8_0, v0x8d889d8_0;
T_59.4 ;
    %load/v 8, v0x8d88988_0, 1;
    %jmp/0xz  T_59.6, 8;
    %load/v 8, v0x8d88ae0_0, 4;
    %ix/getv 3, v0x8d88a30_0;
    %jmp/1 t_6, 4;
    %ix/load 0, 4, 0; word width
    %ix/load 1, 0, 0; part off
    %assign/av v0x8d88600, 0, 8;
t_6 ;
    %vpi_call 4 48 "$display", $realtime, ": reg_status[%d] = %d", v0x8d88a30_0, v0x8d88ae0_0;
T_59.6 ;
T_59.1 ;
    %end;
    .scope S_0x8d85a90;
t_2 %join;
    %jmp T_59;
    .thread T_59;
    .scope S_0x8d798b8;
T_60 ;
    %set/v v0x8d7bae8_0, 3, 5;
    %end;
    .thread T_60;
    .scope S_0x8d798b8;
T_61 ;
    %set/v v0x8d7bbf0_0, 3, 5;
    %end;
    .thread T_61;
    .scope S_0x8d798b8;
T_62 ;
    %wait E_0x8d79d68;
    %load/v 8, v0x8d7bb90_0, 1;
    %jmp/0xz  T_62.0, 8;
    %ix/load 0, 1, 0;
    %assign/v0 v0x8d7b770_0, 0, 0;
    %movi 8, 15, 5;
    %ix/load 0, 4, 0;
    %assign/v0 v0x8d7b948_0, 0, 8;
    %ix/load 0, 1, 0;
    %assign/v0 v0x8d7bd68_0, 0, 0;
    %ix/load 0, 32, 0;
    %assign/v0 v0x8d7bc40_0, 0, 0;
    %jmp T_62.1;
T_62.0 ;
    %load/v 8, v0x8d7b770_0, 1;
    %inv 8, 1;
    %jmp/0xz  T_62.2, 8;
    %fork t_8, S_0x8d7a918;
    %jmp t_7;
    .scope S_0x8d7a918;
t_8 ;
    %delay 1, 0;
    %load/v 8, v0x8d7b9a8_0, 4;
    %mov 12, 0, 1;
    %cmpi/u 8, 0, 5;
    %jmp/0xz  T_62.4, 4;
    %vpi_call 10 55 "$display", $realtime, ": %d receive inst:%b", P_0x8d79d4c, v0x8d7ba48_0;
    %ix/load 1, 28, 0;
    %mov 4, 0, 1;
    %jmp/1 T_62.6, 4;
    %load/x1p 8, v0x8d7ba48_0, 4;
    %jmp T_62.7;
T_62.6 ;
    %mov 8, 2, 4;
T_62.7 ;
; Save base=8 wid=4 in lookaside.
    %set/v v0x8d7ba98_0, 8, 4;
    %ix/load 0, 1, 0;
    %assign/v0 v0x8d7b770_0, 0, 1;
    %load/v 8, v0x8d7b418_0, 4;
    %ix/load 0, 4, 0;
    %assign/v0 v0x8d7b948_0, 0, 8;
    %ix/load 1, 18, 0;
    %mov 4, 0, 1;
    %jmp/1 T_62.8, 4;
    %load/x1p 8, v0x8d7ba48_0, 5;
    %jmp T_62.9;
T_62.8 ;
    %mov 8, 2, 5;
T_62.9 ;
; Save base=8 wid=5 in lookaside.
    %set/v v0x8d7bae8_0, 8, 5;
    %load/v 8, v0x8d7be30_0, 32;
    %set/v v0x8d7af58_0, 8, 32;
    %load/v 8, v0x8d7b9f8_0, 4;
    %set/v v0x8d7aef8_0, 8, 4;
    %load/v 8, v0x8d7b2b8_0, 480;
    %set/v v0x8d7ad78_0, 8, 480;
    %load/v 8, v0x8d7b318_0, 15;
    %set/v v0x8d7ade8_0, 8, 15;
    %fork TD_CPU.alu_rs\x5B0\x5D.getData, S_0x8d7acf8;
    %join;
    %load/v 8, v0x8d7aea8_0, 32;
    %set/v v0x8d7b4d8_0, 8, 32;
    %load/v 8, v0x8d7ae48_0, 4;
    %set/v v0x8d7b368_0, 8, 4;
    %load/v 8, v0x8d7ba98_0, 4;
    %mov 12, 0, 1;
    %cmpi/u 8, 0, 5;
    %mov 8, 4, 1;
    %load/v 9, v0x8d7ba98_0, 4;
    %mov 13, 0, 1;
    %cmpi/u 9, 1, 5;
    %or 8, 4, 1;
    %load/v 9, v0x8d7ba98_0, 4;
    %mov 13, 0, 1;
    %cmpi/u 9, 2, 5;
    %or 8, 4, 1;
    %jmp/0xz  T_62.10, 8;
    %ix/load 1, 13, 0;
    %mov 4, 0, 1;
    %jmp/1 T_62.12, 4;
    %load/x1p 8, v0x8d7ba48_0, 5;
    %jmp T_62.13;
T_62.12 ;
    %mov 8, 2, 5;
T_62.13 ;
; Save base=8 wid=5 in lookaside.
    %set/v v0x8d7bbf0_0, 8, 5;
    %load/v 8, v0x8d7bdb8_0, 32;
    %set/v v0x8d7af58_0, 8, 32;
    %load/v 8, v0x8d7bb40_0, 4;
    %set/v v0x8d7aef8_0, 8, 4;
    %load/v 8, v0x8d7b2b8_0, 480;
    %set/v v0x8d7ad78_0, 8, 480;
    %load/v 8, v0x8d7b318_0, 15;
    %set/v v0x8d7ade8_0, 8, 15;
    %fork TD_CPU.alu_rs\x5B0\x5D.getData, S_0x8d7acf8;
    %join;
    %load/v 8, v0x8d7aea8_0, 32;
    %set/v v0x8d7b538_0, 8, 32;
    %load/v 8, v0x8d7ae48_0, 4;
    %set/v v0x8d7b3c8_0, 8, 4;
    %jmp T_62.11;
T_62.10 ;
    %load/v 8, v0x8d7ba48_0, 18; Select 18 out of 32 bits
    %mov 26, 0, 14;
    %set/v v0x8d7b538_0, 8, 32;
    %movi 8, 15, 5;
    %set/v v0x8d7b3c8_0, 8, 4;
T_62.11 ;
    %delay 1, 0;
    %set/v v0x8d7bae8_0, 3, 5;
    %set/v v0x8d7bbf0_0, 3, 5;
    %ix/load 0, 1, 0;
    %assign/v0 v0x8d7bd68_0, 0, 0;
T_62.4 ;
    %end;
    .scope S_0x8d798b8;
t_7 %join;
T_62.2 ;
T_62.1 ;
    %jmp T_62;
    .thread T_62;
    .scope S_0x8d798b8;
T_63 ;
    %wait E_0x8c7c8e8;
    %load/v 8, v0x8d7b770_0, 1;
    %jmp/0xz  T_63.0, 8;
    %fork t_10, S_0x8d7a828;
    %jmp t_9;
    .scope S_0x8d7a828;
t_10 ;
    %set/v v0x8d7a8a8_0, 1, 1;
    %load/v 8, v0x8d7b368_0, 4;
    %set/v v0x8d7b058_0, 8, 4;
    %load/v 8, v0x8d7b4d8_0, 32;
    %set/v v0x8d7b0c8_0, 8, 32;
    %load/v 8, v0x8d7b2b8_0, 480;
    %set/v v0x8d7b128_0, 8, 480;
    %load/v 8, v0x8d7b318_0, 15;
    %set/v v0x8d7b238_0, 8, 15;
    %load/v 8, v0x8d7a8a8_0, 1;
    %set/v v0x8d7b188_0, 8, 1;
    %fork TD_CPU.alu_rs\x5B0\x5D.checkAndGetData, S_0x8d7afd8;
    %join;
    %load/v 8, v0x8d7b058_0, 4;
    %set/v v0x8d7b368_0, 8, 4;
    %load/v 8, v0x8d7b0c8_0, 32;
    %set/v v0x8d7b4d8_0, 8, 32;
    %load/v 8, v0x8d7b188_0, 1;
    %set/v v0x8d7a8a8_0, 8, 1;
    %load/v 8, v0x8d7b3c8_0, 4;
    %set/v v0x8d7b058_0, 8, 4;
    %load/v 8, v0x8d7b538_0, 32;
    %set/v v0x8d7b0c8_0, 8, 32;
    %load/v 8, v0x8d7b2b8_0, 480;
    %set/v v0x8d7b128_0, 8, 480;
    %load/v 8, v0x8d7b318_0, 15;
    %set/v v0x8d7b238_0, 8, 15;
    %load/v 8, v0x8d7a8a8_0, 1;
    %set/v v0x8d7b188_0, 8, 1;
    %fork TD_CPU.alu_rs\x5B0\x5D.checkAndGetData, S_0x8d7afd8;
    %join;
    %load/v 8, v0x8d7b058_0, 4;
    %set/v v0x8d7b3c8_0, 8, 4;
    %load/v 8, v0x8d7b0c8_0, 32;
    %set/v v0x8d7b538_0, 8, 32;
    %load/v 8, v0x8d7b188_0, 1;
    %set/v v0x8d7a8a8_0, 8, 1;
    %load/v 8, v0x8d7a8a8_0, 1;
    %jmp/0xz  T_63.2, 8;
    %load/v 8, v0x8d7ba98_0, 4;
    %cmpi/u 8, 1, 4;
    %jmp/1 T_63.4, 6;
    %cmpi/u 8, 6, 4;
    %jmp/1 T_63.5, 6;
    %cmpi/u 8, 0, 4;
    %jmp/1 T_63.6, 6;
    %cmpi/u 8, 5, 4;
    %jmp/1 T_63.7, 6;
    %cmpi/u 8, 2, 4;
    %jmp/1 T_63.8, 6;
    %cmpi/u 8, 7, 4;
    %jmp/1 T_63.9, 6;
    %jmp T_63.11;
T_63.4 ;
    %delay 1, 0;
    %load/v 8, v0x8d7b4d8_0, 32;
    %load/v 40, v0x8d7b538_0, 32;
    %sub 8, 40, 32;
    %set/v v0x8d7bc40_0, 8, 32;
    %jmp T_63.11;
T_63.5 ;
    %delay 1, 0;
    %load/v 8, v0x8d7b4d8_0, 32;
    %load/v 40, v0x8d7b538_0, 32;
    %sub 8, 40, 32;
    %set/v v0x8d7bc40_0, 8, 32;
    %jmp T_63.11;
T_63.6 ;
    %delay 1, 0;
    %load/v 8, v0x8d7b4d8_0, 32;
    %load/v 40, v0x8d7b538_0, 32;
    %add 8, 40, 32;
    %set/v v0x8d7bc40_0, 8, 32;
    %jmp T_63.11;
T_63.7 ;
    %delay 1, 0;
    %load/v 8, v0x8d7b4d8_0, 32;
    %load/v 40, v0x8d7b538_0, 32;
    %add 8, 40, 32;
    %set/v v0x8d7bc40_0, 8, 32;
    %jmp T_63.11;
T_63.8 ;
    %delay 31, 0;
    %load/v 8, v0x8d7b4d8_0, 32;
    %load/v 40, v0x8d7b538_0, 32;
    %mul 8, 40, 32;
    %set/v v0x8d7bc40_0, 8, 32;
    %jmp T_63.11;
T_63.9 ;
    %delay 31, 0;
    %load/v 8, v0x8d7b4d8_0, 32;
    %load/v 40, v0x8d7b538_0, 32;
    %mul 8, 40, 32;
    %set/v v0x8d7bc40_0, 8, 32;
    %jmp T_63.11;
T_63.11 ;
    %set/v v0x8d7bd68_0, 1, 1;
    %set/v v0x8d7b770_0, 0, 1;
    %delay 5, 0;
    %movi 8, 15, 5;
    %set/v v0x8d7b948_0, 8, 4;
    %delay 8, 0;
    %set/v v0x8d7bd68_0, 0, 1;
T_63.2 ;
    %end;
    .scope S_0x8d798b8;
t_9 %join;
T_63.0 ;
    %jmp T_63;
    .thread T_63;
    .scope S_0x8d773a8;
T_64 ;
    %set/v v0x8d794a0_0, 3, 5;
    %end;
    .thread T_64;
    .scope S_0x8d773a8;
T_65 ;
    %set/v v0x8d795a8_0, 3, 5;
    %end;
    .thread T_65;
    .scope S_0x8d773a8;
T_66 ;
    %wait E_0x8d6d0e8;
    %load/v 8, v0x8d79548_0, 1;
    %jmp/0xz  T_66.0, 8;
    %ix/load 0, 1, 0;
    %assign/v0 v0x8d79128_0, 0, 0;
    %movi 8, 15, 5;
    %ix/load 0, 4, 0;
    %assign/v0 v0x8d79300_0, 0, 8;
    %ix/load 0, 1, 0;
    %assign/v0 v0x8d79720_0, 0, 0;
    %ix/load 0, 32, 0;
    %assign/v0 v0x8d795f8_0, 0, 0;
    %jmp T_66.1;
T_66.0 ;
    %load/v 8, v0x8d79128_0, 1;
    %inv 8, 1;
    %jmp/0xz  T_66.2, 8;
    %fork t_12, S_0x8d782d0;
    %jmp t_11;
    .scope S_0x8d782d0;
t_12 ;
    %delay 1, 0;
    %load/v 8, v0x8d79360_0, 4;
    %mov 12, 0, 1;
    %cmpi/u 8, 1, 5;
    %jmp/0xz  T_66.4, 4;
    %vpi_call 10 55 "$display", $realtime, ": %d receive inst:%b", P_0x8d7783c, v0x8d79400_0;
    %ix/load 1, 28, 0;
    %mov 4, 0, 1;
    %jmp/1 T_66.6, 4;
    %load/x1p 8, v0x8d79400_0, 4;
    %jmp T_66.7;
T_66.6 ;
    %mov 8, 2, 4;
T_66.7 ;
; Save base=8 wid=4 in lookaside.
    %set/v v0x8d79450_0, 8, 4;
    %ix/load 0, 1, 0;
    %assign/v0 v0x8d79128_0, 0, 1;
    %load/v 8, v0x8d78dd0_0, 4;
    %ix/load 0, 4, 0;
    %assign/v0 v0x8d79300_0, 0, 8;
    %ix/load 1, 18, 0;
    %mov 4, 0, 1;
    %jmp/1 T_66.8, 4;
    %load/x1p 8, v0x8d79400_0, 5;
    %jmp T_66.9;
T_66.8 ;
    %mov 8, 2, 5;
T_66.9 ;
; Save base=8 wid=5 in lookaside.
    %set/v v0x8d794a0_0, 8, 5;
    %load/v 8, v0x8d797e8_0, 32;
    %set/v v0x8d78910_0, 8, 32;
    %load/v 8, v0x8d793b0_0, 4;
    %set/v v0x8d788b0_0, 8, 4;
    %load/v 8, v0x8d78c70_0, 480;
    %set/v v0x8d78730_0, 8, 480;
    %load/v 8, v0x8d78cd0_0, 15;
    %set/v v0x8d787a0_0, 8, 15;
    %fork TD_CPU.alu_rs\x5B1\x5D.getData, S_0x8d786b0;
    %join;
    %load/v 8, v0x8d78860_0, 32;
    %set/v v0x8d78e90_0, 8, 32;
    %load/v 8, v0x8d78800_0, 4;
    %set/v v0x8d78d20_0, 8, 4;
    %load/v 8, v0x8d79450_0, 4;
    %mov 12, 0, 1;
    %cmpi/u 8, 0, 5;
    %mov 8, 4, 1;
    %load/v 9, v0x8d79450_0, 4;
    %mov 13, 0, 1;
    %cmpi/u 9, 1, 5;
    %or 8, 4, 1;
    %load/v 9, v0x8d79450_0, 4;
    %mov 13, 0, 1;
    %cmpi/u 9, 2, 5;
    %or 8, 4, 1;
    %jmp/0xz  T_66.10, 8;
    %ix/load 1, 13, 0;
    %mov 4, 0, 1;
    %jmp/1 T_66.12, 4;
    %load/x1p 8, v0x8d79400_0, 5;
    %jmp T_66.13;
T_66.12 ;
    %mov 8, 2, 5;
T_66.13 ;
; Save base=8 wid=5 in lookaside.
    %set/v v0x8d795a8_0, 8, 5;
    %load/v 8, v0x8d79770_0, 32;
    %set/v v0x8d78910_0, 8, 32;
    %load/v 8, v0x8d794f8_0, 4;
    %set/v v0x8d788b0_0, 8, 4;
    %load/v 8, v0x8d78c70_0, 480;
    %set/v v0x8d78730_0, 8, 480;
    %load/v 8, v0x8d78cd0_0, 15;
    %set/v v0x8d787a0_0, 8, 15;
    %fork TD_CPU.alu_rs\x5B1\x5D.getData, S_0x8d786b0;
    %join;
    %load/v 8, v0x8d78860_0, 32;
    %set/v v0x8d78ef0_0, 8, 32;
    %load/v 8, v0x8d78800_0, 4;
    %set/v v0x8d78d80_0, 8, 4;
    %jmp T_66.11;
T_66.10 ;
    %load/v 8, v0x8d79400_0, 18; Select 18 out of 32 bits
    %mov 26, 0, 14;
    %set/v v0x8d78ef0_0, 8, 32;
    %movi 8, 15, 5;
    %set/v v0x8d78d80_0, 8, 4;
T_66.11 ;
    %delay 1, 0;
    %set/v v0x8d794a0_0, 3, 5;
    %set/v v0x8d795a8_0, 3, 5;
    %ix/load 0, 1, 0;
    %assign/v0 v0x8d79720_0, 0, 0;
T_66.4 ;
    %end;
    .scope S_0x8d773a8;
t_11 %join;
T_66.2 ;
T_66.1 ;
    %jmp T_66;
    .thread T_66;
    .scope S_0x8d773a8;
T_67 ;
    %wait E_0x8c7c8e8;
    %load/v 8, v0x8d79128_0, 1;
    %jmp/0xz  T_67.0, 8;
    %fork t_14, S_0x8d781e0;
    %jmp t_13;
    .scope S_0x8d781e0;
t_14 ;
    %set/v v0x8d78260_0, 1, 1;
    %load/v 8, v0x8d78d20_0, 4;
    %set/v v0x8d78a10_0, 8, 4;
    %load/v 8, v0x8d78e90_0, 32;
    %set/v v0x8d78a80_0, 8, 32;
    %load/v 8, v0x8d78c70_0, 480;
    %set/v v0x8d78ae0_0, 8, 480;
    %load/v 8, v0x8d78cd0_0, 15;
    %set/v v0x8d78bf0_0, 8, 15;
    %load/v 8, v0x8d78260_0, 1;
    %set/v v0x8d78b40_0, 8, 1;
    %fork TD_CPU.alu_rs\x5B1\x5D.checkAndGetData, S_0x8d78990;
    %join;
    %load/v 8, v0x8d78a10_0, 4;
    %set/v v0x8d78d20_0, 8, 4;
    %load/v 8, v0x8d78a80_0, 32;
    %set/v v0x8d78e90_0, 8, 32;
    %load/v 8, v0x8d78b40_0, 1;
    %set/v v0x8d78260_0, 8, 1;
    %load/v 8, v0x8d78d80_0, 4;
    %set/v v0x8d78a10_0, 8, 4;
    %load/v 8, v0x8d78ef0_0, 32;
    %set/v v0x8d78a80_0, 8, 32;
    %load/v 8, v0x8d78c70_0, 480;
    %set/v v0x8d78ae0_0, 8, 480;
    %load/v 8, v0x8d78cd0_0, 15;
    %set/v v0x8d78bf0_0, 8, 15;
    %load/v 8, v0x8d78260_0, 1;
    %set/v v0x8d78b40_0, 8, 1;
    %fork TD_CPU.alu_rs\x5B1\x5D.checkAndGetData, S_0x8d78990;
    %join;
    %load/v 8, v0x8d78a10_0, 4;
    %set/v v0x8d78d80_0, 8, 4;
    %load/v 8, v0x8d78a80_0, 32;
    %set/v v0x8d78ef0_0, 8, 32;
    %load/v 8, v0x8d78b40_0, 1;
    %set/v v0x8d78260_0, 8, 1;
    %load/v 8, v0x8d78260_0, 1;
    %jmp/0xz  T_67.2, 8;
    %load/v 8, v0x8d79450_0, 4;
    %cmpi/u 8, 1, 4;
    %jmp/1 T_67.4, 6;
    %cmpi/u 8, 6, 4;
    %jmp/1 T_67.5, 6;
    %cmpi/u 8, 0, 4;
    %jmp/1 T_67.6, 6;
    %cmpi/u 8, 5, 4;
    %jmp/1 T_67.7, 6;
    %cmpi/u 8, 2, 4;
    %jmp/1 T_67.8, 6;
    %cmpi/u 8, 7, 4;
    %jmp/1 T_67.9, 6;
    %jmp T_67.11;
T_67.4 ;
    %delay 1, 0;
    %load/v 8, v0x8d78e90_0, 32;
    %load/v 40, v0x8d78ef0_0, 32;
    %sub 8, 40, 32;
    %set/v v0x8d795f8_0, 8, 32;
    %jmp T_67.11;
T_67.5 ;
    %delay 1, 0;
    %load/v 8, v0x8d78e90_0, 32;
    %load/v 40, v0x8d78ef0_0, 32;
    %sub 8, 40, 32;
    %set/v v0x8d795f8_0, 8, 32;
    %jmp T_67.11;
T_67.6 ;
    %delay 1, 0;
    %load/v 8, v0x8d78e90_0, 32;
    %load/v 40, v0x8d78ef0_0, 32;
    %add 8, 40, 32;
    %set/v v0x8d795f8_0, 8, 32;
    %jmp T_67.11;
T_67.7 ;
    %delay 1, 0;
    %load/v 8, v0x8d78e90_0, 32;
    %load/v 40, v0x8d78ef0_0, 32;
    %add 8, 40, 32;
    %set/v v0x8d795f8_0, 8, 32;
    %jmp T_67.11;
T_67.8 ;
    %delay 31, 0;
    %load/v 8, v0x8d78e90_0, 32;
    %load/v 40, v0x8d78ef0_0, 32;
    %mul 8, 40, 32;
    %set/v v0x8d795f8_0, 8, 32;
    %jmp T_67.11;
T_67.9 ;
    %delay 31, 0;
    %load/v 8, v0x8d78e90_0, 32;
    %load/v 40, v0x8d78ef0_0, 32;
    %mul 8, 40, 32;
    %set/v v0x8d795f8_0, 8, 32;
    %jmp T_67.11;
T_67.11 ;
    %set/v v0x8d79720_0, 1, 1;
    %set/v v0x8d79128_0, 0, 1;
    %delay 5, 0;
    %movi 8, 15, 5;
    %set/v v0x8d79300_0, 8, 4;
    %delay 8, 0;
    %set/v v0x8d79720_0, 0, 1;
T_67.2 ;
    %end;
    .scope S_0x8d773a8;
t_13 %join;
T_67.0 ;
    %jmp T_67;
    .thread T_67;
    .scope S_0x8d74550;
T_68 ;
    %set/v v0x8d76b68_0, 3, 5;
    %end;
    .thread T_68;
    .scope S_0x8d74550;
T_69 ;
    %set/v v0x8d6d048_0, 3, 5;
    %end;
    .thread T_69;
    .scope S_0x8d74550;
T_70 ;
    %wait E_0x8d74a00;
    %load/v 8, v0x8d76c88_0, 1;
    %jmp/0xz  T_70.0, 8;
    %ix/load 0, 1, 0;
    %assign/v0 v0x8d765a8_0, 0, 0;
    %movi 8, 15, 5;
    %ix/load 0, 4, 0;
    %assign/v0 v0x8d6cc00_0, 0, 8;
    %ix/load 0, 1, 0;
    %assign/v0 v0x8d77008_0, 0, 0;
    %ix/load 0, 32, 0;
    %assign/v0 v0x8d6d168_0, 0, 0;
    %jmp T_70.1;
T_70.0 ;
    %load/v 8, v0x8d765a8_0, 1;
    %inv 8, 1;
    %jmp/0xz  T_70.2, 8;
    %fork t_16, S_0x8d755b0;
    %jmp t_15;
    .scope S_0x8d755b0;
t_16 ;
    %delay 1, 0;
    %load/v 8, v0x8d76938_0, 4;
    %mov 12, 0, 1;
    %cmpi/u 8, 2, 5;
    %jmp/0xz  T_70.4, 4;
    %vpi_call 10 55 "$display", $realtime, ": %d receive inst:%b", P_0x8d749e4, v0x8d6cd68_0;
    %ix/load 1, 28, 0;
    %mov 4, 0, 1;
    %jmp/1 T_70.6, 4;
    %load/x1p 8, v0x8d6cd68_0, 4;
    %jmp T_70.7;
T_70.6 ;
    %mov 8, 2, 4;
T_70.7 ;
; Save base=8 wid=4 in lookaside.
    %set/v v0x8d6ce20_0, 8, 4;
    %ix/load 0, 1, 0;
    %assign/v0 v0x8d765a8_0, 0, 1;
    %load/v 8, v0x8d76190_0, 4;
    %ix/load 0, 4, 0;
    %assign/v0 v0x8d6cc00_0, 0, 8;
    %ix/load 1, 18, 0;
    %mov 4, 0, 1;
    %jmp/1 T_70.8, 4;
    %load/x1p 8, v0x8d6cd68_0, 5;
    %jmp T_70.9;
T_70.8 ;
    %mov 8, 2, 5;
T_70.9 ;
; Save base=8 wid=5 in lookaside.
    %set/v v0x8d76b68_0, 8, 5;
    %load/v 8, v0x8d6d410_0, 32;
    %set/v v0x8d75bf0_0, 8, 32;
    %load/v 8, v0x8d76988_0, 4;
    %set/v v0x8d75b90_0, 8, 4;
    %load/v 8, v0x8d75f50_0, 480;
    %set/v v0x8d75a10_0, 8, 480;
    %load/v 8, v0x8d6c360_0, 15;
    %set/v v0x8d75a80_0, 8, 15;
    %fork TD_CPU.alu_rs\x5B2\x5D.getData, S_0x8d75990;
    %join;
    %load/v 8, v0x8d75b40_0, 32;
    %set/v v0x8d6c658_0, 8, 32;
    %load/v 8, v0x8d75ae0_0, 4;
    %set/v v0x8d6c418_0, 8, 4;
    %load/v 8, v0x8d6ce20_0, 4;
    %mov 12, 0, 1;
    %cmpi/u 8, 0, 5;
    %mov 8, 4, 1;
    %load/v 9, v0x8d6ce20_0, 4;
    %mov 13, 0, 1;
    %cmpi/u 9, 1, 5;
    %or 8, 4, 1;
    %load/v 9, v0x8d6ce20_0, 4;
    %mov 13, 0, 1;
    %cmpi/u 9, 2, 5;
    %or 8, 4, 1;
    %jmp/0xz  T_70.10, 8;
    %ix/load 1, 13, 0;
    %mov 4, 0, 1;
    %jmp/1 T_70.12, 4;
    %load/x1p 8, v0x8d6cd68_0, 5;
    %jmp T_70.13;
T_70.12 ;
    %mov 8, 2, 5;
T_70.13 ;
; Save base=8 wid=5 in lookaside.
    %set/v v0x8d6d048_0, 8, 5;
    %load/v 8, v0x8d6d398_0, 32;
    %set/v v0x8d75bf0_0, 8, 32;
    %load/v 8, v0x8d6cf30_0, 4;
    %set/v v0x8d75b90_0, 8, 4;
    %load/v 8, v0x8d75f50_0, 480;
    %set/v v0x8d75a10_0, 8, 480;
    %load/v 8, v0x8d6c360_0, 15;
    %set/v v0x8d75a80_0, 8, 15;
    %fork TD_CPU.alu_rs\x5B2\x5D.getData, S_0x8d75990;
    %join;
    %load/v 8, v0x8d75b40_0, 32;
    %set/v v0x8d76390_0, 8, 32;
    %load/v 8, v0x8d75ae0_0, 4;
    %set/v v0x8d76140_0, 8, 4;
    %jmp T_70.11;
T_70.10 ;
    %load/v 8, v0x8d6cd68_0, 18; Select 18 out of 32 bits
    %mov 26, 0, 14;
    %set/v v0x8d76390_0, 8, 32;
    %movi 8, 15, 5;
    %set/v v0x8d76140_0, 8, 4;
T_70.11 ;
    %delay 1, 0;
    %set/v v0x8d76b68_0, 3, 5;
    %set/v v0x8d6d048_0, 3, 5;
    %ix/load 0, 1, 0;
    %assign/v0 v0x8d77008_0, 0, 0;
T_70.4 ;
    %end;
    .scope S_0x8d74550;
t_15 %join;
T_70.2 ;
T_70.1 ;
    %jmp T_70;
    .thread T_70;
    .scope S_0x8d74550;
T_71 ;
    %wait E_0x8c7c8e8;
    %load/v 8, v0x8d765a8_0, 1;
    %jmp/0xz  T_71.0, 8;
    %fork t_18, S_0x8d754c0;
    %jmp t_17;
    .scope S_0x8d754c0;
t_18 ;
    %set/v v0x8d75540_0, 1, 1;
    %load/v 8, v0x8d6c418_0, 4;
    %set/v v0x8d75cf0_0, 8, 4;
    %load/v 8, v0x8d6c658_0, 32;
    %set/v v0x8d75d60_0, 8, 32;
    %load/v 8, v0x8d75f50_0, 480;
    %set/v v0x8d75dc0_0, 8, 480;
    %load/v 8, v0x8d6c360_0, 15;
    %set/v v0x8d75ed0_0, 8, 15;
    %load/v 8, v0x8d75540_0, 1;
    %set/v v0x8d75e20_0, 8, 1;
    %fork TD_CPU.alu_rs\x5B2\x5D.checkAndGetData, S_0x8d75c70;
    %join;
    %load/v 8, v0x8d75cf0_0, 4;
    %set/v v0x8d6c418_0, 8, 4;
    %load/v 8, v0x8d75d60_0, 32;
    %set/v v0x8d6c658_0, 8, 32;
    %load/v 8, v0x8d75e20_0, 1;
    %set/v v0x8d75540_0, 8, 1;
    %load/v 8, v0x8d76140_0, 4;
    %set/v v0x8d75cf0_0, 8, 4;
    %load/v 8, v0x8d76390_0, 32;
    %set/v v0x8d75d60_0, 8, 32;
    %load/v 8, v0x8d75f50_0, 480;
    %set/v v0x8d75dc0_0, 8, 480;
    %load/v 8, v0x8d6c360_0, 15;
    %set/v v0x8d75ed0_0, 8, 15;
    %load/v 8, v0x8d75540_0, 1;
    %set/v v0x8d75e20_0, 8, 1;
    %fork TD_CPU.alu_rs\x5B2\x5D.checkAndGetData, S_0x8d75c70;
    %join;
    %load/v 8, v0x8d75cf0_0, 4;
    %set/v v0x8d76140_0, 8, 4;
    %load/v 8, v0x8d75d60_0, 32;
    %set/v v0x8d76390_0, 8, 32;
    %load/v 8, v0x8d75e20_0, 1;
    %set/v v0x8d75540_0, 8, 1;
    %load/v 8, v0x8d75540_0, 1;
    %jmp/0xz  T_71.2, 8;
    %load/v 8, v0x8d6ce20_0, 4;
    %cmpi/u 8, 1, 4;
    %jmp/1 T_71.4, 6;
    %cmpi/u 8, 6, 4;
    %jmp/1 T_71.5, 6;
    %cmpi/u 8, 0, 4;
    %jmp/1 T_71.6, 6;
    %cmpi/u 8, 5, 4;
    %jmp/1 T_71.7, 6;
    %cmpi/u 8, 2, 4;
    %jmp/1 T_71.8, 6;
    %cmpi/u 8, 7, 4;
    %jmp/1 T_71.9, 6;
    %jmp T_71.11;
T_71.4 ;
    %delay 1, 0;
    %load/v 8, v0x8d6c658_0, 32;
    %load/v 40, v0x8d76390_0, 32;
    %sub 8, 40, 32;
    %set/v v0x8d6d168_0, 8, 32;
    %jmp T_71.11;
T_71.5 ;
    %delay 1, 0;
    %load/v 8, v0x8d6c658_0, 32;
    %load/v 40, v0x8d76390_0, 32;
    %sub 8, 40, 32;
    %set/v v0x8d6d168_0, 8, 32;
    %jmp T_71.11;
T_71.6 ;
    %delay 1, 0;
    %load/v 8, v0x8d6c658_0, 32;
    %load/v 40, v0x8d76390_0, 32;
    %add 8, 40, 32;
    %set/v v0x8d6d168_0, 8, 32;
    %jmp T_71.11;
T_71.7 ;
    %delay 1, 0;
    %load/v 8, v0x8d6c658_0, 32;
    %load/v 40, v0x8d76390_0, 32;
    %add 8, 40, 32;
    %set/v v0x8d6d168_0, 8, 32;
    %jmp T_71.11;
T_71.8 ;
    %delay 31, 0;
    %load/v 8, v0x8d6c658_0, 32;
    %load/v 40, v0x8d76390_0, 32;
    %mul 8, 40, 32;
    %set/v v0x8d6d168_0, 8, 32;
    %jmp T_71.11;
T_71.9 ;
    %delay 31, 0;
    %load/v 8, v0x8d6c658_0, 32;
    %load/v 40, v0x8d76390_0, 32;
    %mul 8, 40, 32;
    %set/v v0x8d6d168_0, 8, 32;
    %jmp T_71.11;
T_71.11 ;
    %set/v v0x8d77008_0, 1, 1;
    %set/v v0x8d765a8_0, 0, 1;
    %delay 5, 0;
    %movi 8, 15, 5;
    %set/v v0x8d6cc00_0, 8, 4;
    %delay 8, 0;
    %set/v v0x8d77008_0, 0, 1;
T_71.2 ;
    %end;
    .scope S_0x8d74550;
t_17 %join;
T_71.0 ;
    %jmp T_71;
    .thread T_71;
    .scope S_0x8d71f08;
T_72 ;
    %set/v v0x8d74138_0, 3, 5;
    %end;
    .thread T_72;
    .scope S_0x8d71f08;
T_73 ;
    %set/v v0x8d74240_0, 3, 5;
    %end;
    .thread T_73;
    .scope S_0x8d71f08;
T_74 ;
    %wait E_0x8d723b8;
    %load/v 8, v0x8d741e0_0, 1;
    %jmp/0xz  T_74.0, 8;
    %ix/load 0, 1, 0;
    %assign/v0 v0x8d73dc0_0, 0, 0;
    %movi 8, 15, 5;
    %ix/load 0, 4, 0;
    %assign/v0 v0x8d73f98_0, 0, 8;
    %ix/load 0, 1, 0;
    %assign/v0 v0x8d743b8_0, 0, 0;
    %ix/load 0, 32, 0;
    %assign/v0 v0x8d74290_0, 0, 0;
    %jmp T_74.1;
T_74.0 ;
    %load/v 8, v0x8d73dc0_0, 1;
    %inv 8, 1;
    %jmp/0xz  T_74.2, 8;
    %fork t_20, S_0x8d72f68;
    %jmp t_19;
    .scope S_0x8d72f68;
t_20 ;
    %delay 1, 0;
    %load/v 8, v0x8d73ff8_0, 4;
    %mov 12, 0, 1;
    %cmpi/u 8, 3, 5;
    %jmp/0xz  T_74.4, 4;
    %vpi_call 10 55 "$display", $realtime, ": %d receive inst:%b", P_0x8d7239c, v0x8d74098_0;
    %ix/load 1, 28, 0;
    %mov 4, 0, 1;
    %jmp/1 T_74.6, 4;
    %load/x1p 8, v0x8d74098_0, 4;
    %jmp T_74.7;
T_74.6 ;
    %mov 8, 2, 4;
T_74.7 ;
; Save base=8 wid=4 in lookaside.
    %set/v v0x8d740e8_0, 8, 4;
    %ix/load 0, 1, 0;
    %assign/v0 v0x8d73dc0_0, 0, 1;
    %load/v 8, v0x8d73a68_0, 4;
    %ix/load 0, 4, 0;
    %assign/v0 v0x8d73f98_0, 0, 8;
    %ix/load 1, 18, 0;
    %mov 4, 0, 1;
    %jmp/1 T_74.8, 4;
    %load/x1p 8, v0x8d74098_0, 5;
    %jmp T_74.9;
T_74.8 ;
    %mov 8, 2, 5;
T_74.9 ;
; Save base=8 wid=5 in lookaside.
    %set/v v0x8d74138_0, 8, 5;
    %load/v 8, v0x8d74480_0, 32;
    %set/v v0x8d735a8_0, 8, 32;
    %load/v 8, v0x8d74048_0, 4;
    %set/v v0x8d73548_0, 8, 4;
    %load/v 8, v0x8d73908_0, 480;
    %set/v v0x8d733c8_0, 8, 480;
    %load/v 8, v0x8d73968_0, 15;
    %set/v v0x8d73438_0, 8, 15;
    %fork TD_CPU.alu_rs\x5B3\x5D.getData, S_0x8d73348;
    %join;
    %load/v 8, v0x8d734f8_0, 32;
    %set/v v0x8d73b28_0, 8, 32;
    %load/v 8, v0x8d73498_0, 4;
    %set/v v0x8d739b8_0, 8, 4;
    %load/v 8, v0x8d740e8_0, 4;
    %mov 12, 0, 1;
    %cmpi/u 8, 0, 5;
    %mov 8, 4, 1;
    %load/v 9, v0x8d740e8_0, 4;
    %mov 13, 0, 1;
    %cmpi/u 9, 1, 5;
    %or 8, 4, 1;
    %load/v 9, v0x8d740e8_0, 4;
    %mov 13, 0, 1;
    %cmpi/u 9, 2, 5;
    %or 8, 4, 1;
    %jmp/0xz  T_74.10, 8;
    %ix/load 1, 13, 0;
    %mov 4, 0, 1;
    %jmp/1 T_74.12, 4;
    %load/x1p 8, v0x8d74098_0, 5;
    %jmp T_74.13;
T_74.12 ;
    %mov 8, 2, 5;
T_74.13 ;
; Save base=8 wid=5 in lookaside.
    %set/v v0x8d74240_0, 8, 5;
    %load/v 8, v0x8d74408_0, 32;
    %set/v v0x8d735a8_0, 8, 32;
    %load/v 8, v0x8d74190_0, 4;
    %set/v v0x8d73548_0, 8, 4;
    %load/v 8, v0x8d73908_0, 480;
    %set/v v0x8d733c8_0, 8, 480;
    %load/v 8, v0x8d73968_0, 15;
    %set/v v0x8d73438_0, 8, 15;
    %fork TD_CPU.alu_rs\x5B3\x5D.getData, S_0x8d73348;
    %join;
    %load/v 8, v0x8d734f8_0, 32;
    %set/v v0x8d73b88_0, 8, 32;
    %load/v 8, v0x8d73498_0, 4;
    %set/v v0x8d73a18_0, 8, 4;
    %jmp T_74.11;
T_74.10 ;
    %load/v 8, v0x8d74098_0, 18; Select 18 out of 32 bits
    %mov 26, 0, 14;
    %set/v v0x8d73b88_0, 8, 32;
    %movi 8, 15, 5;
    %set/v v0x8d73a18_0, 8, 4;
T_74.11 ;
    %delay 1, 0;
    %set/v v0x8d74138_0, 3, 5;
    %set/v v0x8d74240_0, 3, 5;
    %ix/load 0, 1, 0;
    %assign/v0 v0x8d743b8_0, 0, 0;
T_74.4 ;
    %end;
    .scope S_0x8d71f08;
t_19 %join;
T_74.2 ;
T_74.1 ;
    %jmp T_74;
    .thread T_74;
    .scope S_0x8d71f08;
T_75 ;
    %wait E_0x8c7c8e8;
    %load/v 8, v0x8d73dc0_0, 1;
    %jmp/0xz  T_75.0, 8;
    %fork t_22, S_0x8d72e78;
    %jmp t_21;
    .scope S_0x8d72e78;
t_22 ;
    %set/v v0x8d72ef8_0, 1, 1;
    %load/v 8, v0x8d739b8_0, 4;
    %set/v v0x8d736a8_0, 8, 4;
    %load/v 8, v0x8d73b28_0, 32;
    %set/v v0x8d73718_0, 8, 32;
    %load/v 8, v0x8d73908_0, 480;
    %set/v v0x8d73778_0, 8, 480;
    %load/v 8, v0x8d73968_0, 15;
    %set/v v0x8d73888_0, 8, 15;
    %load/v 8, v0x8d72ef8_0, 1;
    %set/v v0x8d737d8_0, 8, 1;
    %fork TD_CPU.alu_rs\x5B3\x5D.checkAndGetData, S_0x8d73628;
    %join;
    %load/v 8, v0x8d736a8_0, 4;
    %set/v v0x8d739b8_0, 8, 4;
    %load/v 8, v0x8d73718_0, 32;
    %set/v v0x8d73b28_0, 8, 32;
    %load/v 8, v0x8d737d8_0, 1;
    %set/v v0x8d72ef8_0, 8, 1;
    %load/v 8, v0x8d73a18_0, 4;
    %set/v v0x8d736a8_0, 8, 4;
    %load/v 8, v0x8d73b88_0, 32;
    %set/v v0x8d73718_0, 8, 32;
    %load/v 8, v0x8d73908_0, 480;
    %set/v v0x8d73778_0, 8, 480;
    %load/v 8, v0x8d73968_0, 15;
    %set/v v0x8d73888_0, 8, 15;
    %load/v 8, v0x8d72ef8_0, 1;
    %set/v v0x8d737d8_0, 8, 1;
    %fork TD_CPU.alu_rs\x5B3\x5D.checkAndGetData, S_0x8d73628;
    %join;
    %load/v 8, v0x8d736a8_0, 4;
    %set/v v0x8d73a18_0, 8, 4;
    %load/v 8, v0x8d73718_0, 32;
    %set/v v0x8d73b88_0, 8, 32;
    %load/v 8, v0x8d737d8_0, 1;
    %set/v v0x8d72ef8_0, 8, 1;
    %load/v 8, v0x8d72ef8_0, 1;
    %jmp/0xz  T_75.2, 8;
    %load/v 8, v0x8d740e8_0, 4;
    %cmpi/u 8, 1, 4;
    %jmp/1 T_75.4, 6;
    %cmpi/u 8, 6, 4;
    %jmp/1 T_75.5, 6;
    %cmpi/u 8, 0, 4;
    %jmp/1 T_75.6, 6;
    %cmpi/u 8, 5, 4;
    %jmp/1 T_75.7, 6;
    %cmpi/u 8, 2, 4;
    %jmp/1 T_75.8, 6;
    %cmpi/u 8, 7, 4;
    %jmp/1 T_75.9, 6;
    %jmp T_75.11;
T_75.4 ;
    %delay 1, 0;
    %load/v 8, v0x8d73b28_0, 32;
    %load/v 40, v0x8d73b88_0, 32;
    %sub 8, 40, 32;
    %set/v v0x8d74290_0, 8, 32;
    %jmp T_75.11;
T_75.5 ;
    %delay 1, 0;
    %load/v 8, v0x8d73b28_0, 32;
    %load/v 40, v0x8d73b88_0, 32;
    %sub 8, 40, 32;
    %set/v v0x8d74290_0, 8, 32;
    %jmp T_75.11;
T_75.6 ;
    %delay 1, 0;
    %load/v 8, v0x8d73b28_0, 32;
    %load/v 40, v0x8d73b88_0, 32;
    %add 8, 40, 32;
    %set/v v0x8d74290_0, 8, 32;
    %jmp T_75.11;
T_75.7 ;
    %delay 1, 0;
    %load/v 8, v0x8d73b28_0, 32;
    %load/v 40, v0x8d73b88_0, 32;
    %add 8, 40, 32;
    %set/v v0x8d74290_0, 8, 32;
    %jmp T_75.11;
T_75.8 ;
    %delay 31, 0;
    %load/v 8, v0x8d73b28_0, 32;
    %load/v 40, v0x8d73b88_0, 32;
    %mul 8, 40, 32;
    %set/v v0x8d74290_0, 8, 32;
    %jmp T_75.11;
T_75.9 ;
    %delay 31, 0;
    %load/v 8, v0x8d73b28_0, 32;
    %load/v 40, v0x8d73b88_0, 32;
    %mul 8, 40, 32;
    %set/v v0x8d74290_0, 8, 32;
    %jmp T_75.11;
T_75.11 ;
    %set/v v0x8d743b8_0, 1, 1;
    %set/v v0x8d73dc0_0, 0, 1;
    %delay 5, 0;
    %movi 8, 15, 5;
    %set/v v0x8d73f98_0, 8, 4;
    %delay 8, 0;
    %set/v v0x8d743b8_0, 0, 1;
T_75.2 ;
    %end;
    .scope S_0x8d71f08;
t_21 %join;
T_75.0 ;
    %jmp T_75;
    .thread T_75;
    .scope S_0x8d6f8c0;
T_76 ;
    %set/v v0x8d71af0_0, 3, 5;
    %end;
    .thread T_76;
    .scope S_0x8d6f8c0;
T_77 ;
    %set/v v0x8d71bf8_0, 3, 5;
    %end;
    .thread T_77;
    .scope S_0x8d6f8c0;
T_78 ;
    %wait E_0x8d6fd70;
    %load/v 8, v0x8d71b98_0, 1;
    %jmp/0xz  T_78.0, 8;
    %ix/load 0, 1, 0;
    %assign/v0 v0x8d71778_0, 0, 0;
    %movi 8, 15, 5;
    %ix/load 0, 4, 0;
    %assign/v0 v0x8d71950_0, 0, 8;
    %ix/load 0, 1, 0;
    %assign/v0 v0x8d71d70_0, 0, 0;
    %ix/load 0, 32, 0;
    %assign/v0 v0x8d71c48_0, 0, 0;
    %jmp T_78.1;
T_78.0 ;
    %load/v 8, v0x8d71778_0, 1;
    %inv 8, 1;
    %jmp/0xz  T_78.2, 8;
    %fork t_24, S_0x8d70920;
    %jmp t_23;
    .scope S_0x8d70920;
t_24 ;
    %delay 1, 0;
    %load/v 8, v0x8d719b0_0, 4;
    %mov 12, 0, 1;
    %cmpi/u 8, 4, 5;
    %jmp/0xz  T_78.4, 4;
    %vpi_call 10 55 "$display", $realtime, ": %d receive inst:%b", P_0x8d6fd54, v0x8d71a50_0;
    %ix/load 1, 28, 0;
    %mov 4, 0, 1;
    %jmp/1 T_78.6, 4;
    %load/x1p 8, v0x8d71a50_0, 4;
    %jmp T_78.7;
T_78.6 ;
    %mov 8, 2, 4;
T_78.7 ;
; Save base=8 wid=4 in lookaside.
    %set/v v0x8d71aa0_0, 8, 4;
    %ix/load 0, 1, 0;
    %assign/v0 v0x8d71778_0, 0, 1;
    %load/v 8, v0x8d71420_0, 4;
    %ix/load 0, 4, 0;
    %assign/v0 v0x8d71950_0, 0, 8;
    %ix/load 1, 18, 0;
    %mov 4, 0, 1;
    %jmp/1 T_78.8, 4;
    %load/x1p 8, v0x8d71a50_0, 5;
    %jmp T_78.9;
T_78.8 ;
    %mov 8, 2, 5;
T_78.9 ;
; Save base=8 wid=5 in lookaside.
    %set/v v0x8d71af0_0, 8, 5;
    %load/v 8, v0x8d71e38_0, 32;
    %set/v v0x8d70f60_0, 8, 32;
    %load/v 8, v0x8d71a00_0, 4;
    %set/v v0x8d70f00_0, 8, 4;
    %load/v 8, v0x8d712c0_0, 480;
    %set/v v0x8d70d80_0, 8, 480;
    %load/v 8, v0x8d71320_0, 15;
    %set/v v0x8d70df0_0, 8, 15;
    %fork TD_CPU.alu_rs\x5B4\x5D.getData, S_0x8d70d00;
    %join;
    %load/v 8, v0x8d70eb0_0, 32;
    %set/v v0x8d714e0_0, 8, 32;
    %load/v 8, v0x8d70e50_0, 4;
    %set/v v0x8d71370_0, 8, 4;
    %load/v 8, v0x8d71aa0_0, 4;
    %mov 12, 0, 1;
    %cmpi/u 8, 0, 5;
    %mov 8, 4, 1;
    %load/v 9, v0x8d71aa0_0, 4;
    %mov 13, 0, 1;
    %cmpi/u 9, 1, 5;
    %or 8, 4, 1;
    %load/v 9, v0x8d71aa0_0, 4;
    %mov 13, 0, 1;
    %cmpi/u 9, 2, 5;
    %or 8, 4, 1;
    %jmp/0xz  T_78.10, 8;
    %ix/load 1, 13, 0;
    %mov 4, 0, 1;
    %jmp/1 T_78.12, 4;
    %load/x1p 8, v0x8d71a50_0, 5;
    %jmp T_78.13;
T_78.12 ;
    %mov 8, 2, 5;
T_78.13 ;
; Save base=8 wid=5 in lookaside.
    %set/v v0x8d71bf8_0, 8, 5;
    %load/v 8, v0x8d71dc0_0, 32;
    %set/v v0x8d70f60_0, 8, 32;
    %load/v 8, v0x8d71b48_0, 4;
    %set/v v0x8d70f00_0, 8, 4;
    %load/v 8, v0x8d712c0_0, 480;
    %set/v v0x8d70d80_0, 8, 480;
    %load/v 8, v0x8d71320_0, 15;
    %set/v v0x8d70df0_0, 8, 15;
    %fork TD_CPU.alu_rs\x5B4\x5D.getData, S_0x8d70d00;
    %join;
    %load/v 8, v0x8d70eb0_0, 32;
    %set/v v0x8d71540_0, 8, 32;
    %load/v 8, v0x8d70e50_0, 4;
    %set/v v0x8d713d0_0, 8, 4;
    %jmp T_78.11;
T_78.10 ;
    %load/v 8, v0x8d71a50_0, 18; Select 18 out of 32 bits
    %mov 26, 0, 14;
    %set/v v0x8d71540_0, 8, 32;
    %movi 8, 15, 5;
    %set/v v0x8d713d0_0, 8, 4;
T_78.11 ;
    %delay 1, 0;
    %set/v v0x8d71af0_0, 3, 5;
    %set/v v0x8d71bf8_0, 3, 5;
    %ix/load 0, 1, 0;
    %assign/v0 v0x8d71d70_0, 0, 0;
T_78.4 ;
    %end;
    .scope S_0x8d6f8c0;
t_23 %join;
T_78.2 ;
T_78.1 ;
    %jmp T_78;
    .thread T_78;
    .scope S_0x8d6f8c0;
T_79 ;
    %wait E_0x8c7c8e8;
    %load/v 8, v0x8d71778_0, 1;
    %jmp/0xz  T_79.0, 8;
    %fork t_26, S_0x8d70830;
    %jmp t_25;
    .scope S_0x8d70830;
t_26 ;
    %set/v v0x8d708b0_0, 1, 1;
    %load/v 8, v0x8d71370_0, 4;
    %set/v v0x8d71060_0, 8, 4;
    %load/v 8, v0x8d714e0_0, 32;
    %set/v v0x8d710d0_0, 8, 32;
    %load/v 8, v0x8d712c0_0, 480;
    %set/v v0x8d71130_0, 8, 480;
    %load/v 8, v0x8d71320_0, 15;
    %set/v v0x8d71240_0, 8, 15;
    %load/v 8, v0x8d708b0_0, 1;
    %set/v v0x8d71190_0, 8, 1;
    %fork TD_CPU.alu_rs\x5B4\x5D.checkAndGetData, S_0x8d70fe0;
    %join;
    %load/v 8, v0x8d71060_0, 4;
    %set/v v0x8d71370_0, 8, 4;
    %load/v 8, v0x8d710d0_0, 32;
    %set/v v0x8d714e0_0, 8, 32;
    %load/v 8, v0x8d71190_0, 1;
    %set/v v0x8d708b0_0, 8, 1;
    %load/v 8, v0x8d713d0_0, 4;
    %set/v v0x8d71060_0, 8, 4;
    %load/v 8, v0x8d71540_0, 32;
    %set/v v0x8d710d0_0, 8, 32;
    %load/v 8, v0x8d712c0_0, 480;
    %set/v v0x8d71130_0, 8, 480;
    %load/v 8, v0x8d71320_0, 15;
    %set/v v0x8d71240_0, 8, 15;
    %load/v 8, v0x8d708b0_0, 1;
    %set/v v0x8d71190_0, 8, 1;
    %fork TD_CPU.alu_rs\x5B4\x5D.checkAndGetData, S_0x8d70fe0;
    %join;
    %load/v 8, v0x8d71060_0, 4;
    %set/v v0x8d713d0_0, 8, 4;
    %load/v 8, v0x8d710d0_0, 32;
    %set/v v0x8d71540_0, 8, 32;
    %load/v 8, v0x8d71190_0, 1;
    %set/v v0x8d708b0_0, 8, 1;
    %load/v 8, v0x8d708b0_0, 1;
    %jmp/0xz  T_79.2, 8;
    %load/v 8, v0x8d71aa0_0, 4;
    %cmpi/u 8, 1, 4;
    %jmp/1 T_79.4, 6;
    %cmpi/u 8, 6, 4;
    %jmp/1 T_79.5, 6;
    %cmpi/u 8, 0, 4;
    %jmp/1 T_79.6, 6;
    %cmpi/u 8, 5, 4;
    %jmp/1 T_79.7, 6;
    %cmpi/u 8, 2, 4;
    %jmp/1 T_79.8, 6;
    %cmpi/u 8, 7, 4;
    %jmp/1 T_79.9, 6;
    %jmp T_79.11;
T_79.4 ;
    %delay 1, 0;
    %load/v 8, v0x8d714e0_0, 32;
    %load/v 40, v0x8d71540_0, 32;
    %sub 8, 40, 32;
    %set/v v0x8d71c48_0, 8, 32;
    %jmp T_79.11;
T_79.5 ;
    %delay 1, 0;
    %load/v 8, v0x8d714e0_0, 32;
    %load/v 40, v0x8d71540_0, 32;
    %sub 8, 40, 32;
    %set/v v0x8d71c48_0, 8, 32;
    %jmp T_79.11;
T_79.6 ;
    %delay 1, 0;
    %load/v 8, v0x8d714e0_0, 32;
    %load/v 40, v0x8d71540_0, 32;
    %add 8, 40, 32;
    %set/v v0x8d71c48_0, 8, 32;
    %jmp T_79.11;
T_79.7 ;
    %delay 1, 0;
    %load/v 8, v0x8d714e0_0, 32;
    %load/v 40, v0x8d71540_0, 32;
    %add 8, 40, 32;
    %set/v v0x8d71c48_0, 8, 32;
    %jmp T_79.11;
T_79.8 ;
    %delay 31, 0;
    %load/v 8, v0x8d714e0_0, 32;
    %load/v 40, v0x8d71540_0, 32;
    %mul 8, 40, 32;
    %set/v v0x8d71c48_0, 8, 32;
    %jmp T_79.11;
T_79.9 ;
    %delay 31, 0;
    %load/v 8, v0x8d714e0_0, 32;
    %load/v 40, v0x8d71540_0, 32;
    %mul 8, 40, 32;
    %set/v v0x8d71c48_0, 8, 32;
    %jmp T_79.11;
T_79.11 ;
    %set/v v0x8d71d70_0, 1, 1;
    %set/v v0x8d71778_0, 0, 1;
    %delay 5, 0;
    %movi 8, 15, 5;
    %set/v v0x8d71950_0, 8, 4;
    %delay 8, 0;
    %set/v v0x8d71d70_0, 0, 1;
T_79.2 ;
    %end;
    .scope S_0x8d6f8c0;
t_25 %join;
T_79.0 ;
    %jmp T_79;
    .thread T_79;
    .scope S_0x8d6d600;
T_80 ;
    %set/v v0x8d6f4a8_0, 3, 5;
    %end;
    .thread T_80;
    .scope S_0x8d6d600;
T_81 ;
    %set/v v0x8d6f5b0_0, 3, 5;
    %end;
    .thread T_81;
    .scope S_0x8d6d600;
T_82 ;
    %wait E_0x8d6d2d8;
    %load/v 8, v0x8d6f550_0, 1;
    %jmp/0xz  T_82.0, 8;
    %ix/load 0, 1, 0;
    %assign/v0 v0x8d6f130_0, 0, 0;
    %movi 8, 15, 5;
    %ix/load 0, 4, 0;
    %assign/v0 v0x8d6f308_0, 0, 8;
    %ix/load 0, 1, 0;
    %assign/v0 v0x8d6f728_0, 0, 0;
    %ix/load 0, 32, 0;
    %assign/v0 v0x8d6f600_0, 0, 0;
    %jmp T_82.1;
T_82.0 ;
    %load/v 8, v0x8d6f130_0, 1;
    %inv 8, 1;
    %jmp/0xz  T_82.2, 8;
    %fork t_28, S_0x8d6e2d8;
    %jmp t_27;
    .scope S_0x8d6e2d8;
t_28 ;
    %delay 1, 0;
    %load/v 8, v0x8d6f368_0, 4;
    %mov 12, 0, 1;
    %cmpi/u 8, 5, 5;
    %jmp/0xz  T_82.4, 4;
    %vpi_call 10 55 "$display", $realtime, ": %d receive inst:%b", P_0x8d6da94, v0x8d6f408_0;
    %ix/load 1, 28, 0;
    %mov 4, 0, 1;
    %jmp/1 T_82.6, 4;
    %load/x1p 8, v0x8d6f408_0, 4;
    %jmp T_82.7;
T_82.6 ;
    %mov 8, 2, 4;
T_82.7 ;
; Save base=8 wid=4 in lookaside.
    %set/v v0x8d6f458_0, 8, 4;
    %ix/load 0, 1, 0;
    %assign/v0 v0x8d6f130_0, 0, 1;
    %load/v 8, v0x8d6edd8_0, 4;
    %ix/load 0, 4, 0;
    %assign/v0 v0x8d6f308_0, 0, 8;
    %ix/load 1, 18, 0;
    %mov 4, 0, 1;
    %jmp/1 T_82.8, 4;
    %load/x1p 8, v0x8d6f408_0, 5;
    %jmp T_82.9;
T_82.8 ;
    %mov 8, 2, 5;
T_82.9 ;
; Save base=8 wid=5 in lookaside.
    %set/v v0x8d6f4a8_0, 8, 5;
    %load/v 8, v0x8d6f7f0_0, 32;
    %set/v v0x8d6e918_0, 8, 32;
    %load/v 8, v0x8d6f3b8_0, 4;
    %set/v v0x8d6e8b8_0, 8, 4;
    %load/v 8, v0x8d6ec78_0, 480;
    %set/v v0x8d6e738_0, 8, 480;
    %load/v 8, v0x8d6ecd8_0, 15;
    %set/v v0x8d6e7a8_0, 8, 15;
    %fork TD_CPU.alu_rs\x5B5\x5D.getData, S_0x8d6e6b8;
    %join;
    %load/v 8, v0x8d6e868_0, 32;
    %set/v v0x8d6ee98_0, 8, 32;
    %load/v 8, v0x8d6e808_0, 4;
    %set/v v0x8d6ed28_0, 8, 4;
    %load/v 8, v0x8d6f458_0, 4;
    %mov 12, 0, 1;
    %cmpi/u 8, 0, 5;
    %mov 8, 4, 1;
    %load/v 9, v0x8d6f458_0, 4;
    %mov 13, 0, 1;
    %cmpi/u 9, 1, 5;
    %or 8, 4, 1;
    %load/v 9, v0x8d6f458_0, 4;
    %mov 13, 0, 1;
    %cmpi/u 9, 2, 5;
    %or 8, 4, 1;
    %jmp/0xz  T_82.10, 8;
    %ix/load 1, 13, 0;
    %mov 4, 0, 1;
    %jmp/1 T_82.12, 4;
    %load/x1p 8, v0x8d6f408_0, 5;
    %jmp T_82.13;
T_82.12 ;
    %mov 8, 2, 5;
T_82.13 ;
; Save base=8 wid=5 in lookaside.
    %set/v v0x8d6f5b0_0, 8, 5;
    %load/v 8, v0x8d6f778_0, 32;
    %set/v v0x8d6e918_0, 8, 32;
    %load/v 8, v0x8d6f500_0, 4;
    %set/v v0x8d6e8b8_0, 8, 4;
    %load/v 8, v0x8d6ec78_0, 480;
    %set/v v0x8d6e738_0, 8, 480;
    %load/v 8, v0x8d6ecd8_0, 15;
    %set/v v0x8d6e7a8_0, 8, 15;
    %fork TD_CPU.alu_rs\x5B5\x5D.getData, S_0x8d6e6b8;
    %join;
    %load/v 8, v0x8d6e868_0, 32;
    %set/v v0x8d6eef8_0, 8, 32;
    %load/v 8, v0x8d6e808_0, 4;
    %set/v v0x8d6ed88_0, 8, 4;
    %jmp T_82.11;
T_82.10 ;
    %load/v 8, v0x8d6f408_0, 18; Select 18 out of 32 bits
    %mov 26, 0, 14;
    %set/v v0x8d6eef8_0, 8, 32;
    %movi 8, 15, 5;
    %set/v v0x8d6ed88_0, 8, 4;
T_82.11 ;
    %delay 1, 0;
    %set/v v0x8d6f4a8_0, 3, 5;
    %set/v v0x8d6f5b0_0, 3, 5;
    %ix/load 0, 1, 0;
    %assign/v0 v0x8d6f728_0, 0, 0;
T_82.4 ;
    %end;
    .scope S_0x8d6d600;
t_27 %join;
T_82.2 ;
T_82.1 ;
    %jmp T_82;
    .thread T_82;
    .scope S_0x8d6d600;
T_83 ;
    %wait E_0x8c7c8e8;
    %load/v 8, v0x8d6f130_0, 1;
    %jmp/0xz  T_83.0, 8;
    %fork t_30, S_0x8d6e1e8;
    %jmp t_29;
    .scope S_0x8d6e1e8;
t_30 ;
    %set/v v0x8d6e268_0, 1, 1;
    %load/v 8, v0x8d6ed28_0, 4;
    %set/v v0x8d6ea18_0, 8, 4;
    %load/v 8, v0x8d6ee98_0, 32;
    %set/v v0x8d6ea88_0, 8, 32;
    %load/v 8, v0x8d6ec78_0, 480;
    %set/v v0x8d6eae8_0, 8, 480;
    %load/v 8, v0x8d6ecd8_0, 15;
    %set/v v0x8d6ebf8_0, 8, 15;
    %load/v 8, v0x8d6e268_0, 1;
    %set/v v0x8d6eb48_0, 8, 1;
    %fork TD_CPU.alu_rs\x5B5\x5D.checkAndGetData, S_0x8d6e998;
    %join;
    %load/v 8, v0x8d6ea18_0, 4;
    %set/v v0x8d6ed28_0, 8, 4;
    %load/v 8, v0x8d6ea88_0, 32;
    %set/v v0x8d6ee98_0, 8, 32;
    %load/v 8, v0x8d6eb48_0, 1;
    %set/v v0x8d6e268_0, 8, 1;
    %load/v 8, v0x8d6ed88_0, 4;
    %set/v v0x8d6ea18_0, 8, 4;
    %load/v 8, v0x8d6eef8_0, 32;
    %set/v v0x8d6ea88_0, 8, 32;
    %load/v 8, v0x8d6ec78_0, 480;
    %set/v v0x8d6eae8_0, 8, 480;
    %load/v 8, v0x8d6ecd8_0, 15;
    %set/v v0x8d6ebf8_0, 8, 15;
    %load/v 8, v0x8d6e268_0, 1;
    %set/v v0x8d6eb48_0, 8, 1;
    %fork TD_CPU.alu_rs\x5B5\x5D.checkAndGetData, S_0x8d6e998;
    %join;
    %load/v 8, v0x8d6ea18_0, 4;
    %set/v v0x8d6ed88_0, 8, 4;
    %load/v 8, v0x8d6ea88_0, 32;
    %set/v v0x8d6eef8_0, 8, 32;
    %load/v 8, v0x8d6eb48_0, 1;
    %set/v v0x8d6e268_0, 8, 1;
    %load/v 8, v0x8d6e268_0, 1;
    %jmp/0xz  T_83.2, 8;
    %load/v 8, v0x8d6f458_0, 4;
    %cmpi/u 8, 1, 4;
    %jmp/1 T_83.4, 6;
    %cmpi/u 8, 6, 4;
    %jmp/1 T_83.5, 6;
    %cmpi/u 8, 0, 4;
    %jmp/1 T_83.6, 6;
    %cmpi/u 8, 5, 4;
    %jmp/1 T_83.7, 6;
    %cmpi/u 8, 2, 4;
    %jmp/1 T_83.8, 6;
    %cmpi/u 8, 7, 4;
    %jmp/1 T_83.9, 6;
    %jmp T_83.11;
T_83.4 ;
    %delay 1, 0;
    %load/v 8, v0x8d6ee98_0, 32;
    %load/v 40, v0x8d6eef8_0, 32;
    %sub 8, 40, 32;
    %set/v v0x8d6f600_0, 8, 32;
    %jmp T_83.11;
T_83.5 ;
    %delay 1, 0;
    %load/v 8, v0x8d6ee98_0, 32;
    %load/v 40, v0x8d6eef8_0, 32;
    %sub 8, 40, 32;
    %set/v v0x8d6f600_0, 8, 32;
    %jmp T_83.11;
T_83.6 ;
    %delay 1, 0;
    %load/v 8, v0x8d6ee98_0, 32;
    %load/v 40, v0x8d6eef8_0, 32;
    %add 8, 40, 32;
    %set/v v0x8d6f600_0, 8, 32;
    %jmp T_83.11;
T_83.7 ;
    %delay 1, 0;
    %load/v 8, v0x8d6ee98_0, 32;
    %load/v 40, v0x8d6eef8_0, 32;
    %add 8, 40, 32;
    %set/v v0x8d6f600_0, 8, 32;
    %jmp T_83.11;
T_83.8 ;
    %delay 31, 0;
    %load/v 8, v0x8d6ee98_0, 32;
    %load/v 40, v0x8d6eef8_0, 32;
    %mul 8, 40, 32;
    %set/v v0x8d6f600_0, 8, 32;
    %jmp T_83.11;
T_83.9 ;
    %delay 31, 0;
    %load/v 8, v0x8d6ee98_0, 32;
    %load/v 40, v0x8d6eef8_0, 32;
    %mul 8, 40, 32;
    %set/v v0x8d6f600_0, 8, 32;
    %jmp T_83.11;
T_83.11 ;
    %set/v v0x8d6f728_0, 1, 1;
    %set/v v0x8d6f130_0, 0, 1;
    %delay 5, 0;
    %movi 8, 15, 5;
    %set/v v0x8d6f308_0, 8, 4;
    %delay 8, 0;
    %set/v v0x8d6f728_0, 0, 1;
T_83.2 ;
    %end;
    .scope S_0x8d6d600;
t_29 %join;
T_83.0 ;
    %jmp T_83;
    .thread T_83;
    .scope S_0x8d6a900;
T_84 ;
    %set/v v0x8d6ced8_0, 3, 5;
    %end;
    .thread T_84;
    .scope S_0x8d6a900;
T_85 ;
    %set/v v0x8d6d118_0, 3, 5;
    %end;
    .thread T_85;
    .scope S_0x8d6a900;
T_86 ;
    %wait E_0x8d6adb0;
    %load/v 8, v0x8d6cfe8_0, 1;
    %jmp/0xz  T_86.0, 8;
    %ix/load 0, 1, 0;
    %assign/v0 v0x8d6c958_0, 0, 0;
    %movi 8, 15, 5;
    %ix/load 0, 4, 0;
    %assign/v0 v0x8d6cc68_0, 0, 8;
    %ix/load 0, 1, 0;
    %assign/v0 v0x8d6d348_0, 0, 0;
    %ix/load 0, 32, 0;
    %assign/v0 v0x8d6d2f8_0, 0, 0;
    %jmp T_86.1;
T_86.0 ;
    %load/v 8, v0x8d6c958_0, 1;
    %inv 8, 1;
    %jmp/0xz  T_86.2, 8;
    %fork t_32, S_0x8d6b960;
    %jmp t_31;
    .scope S_0x8d6b960;
t_32 ;
    %delay 1, 0;
    %load/v 8, v0x8d6ccc8_0, 4;
    %mov 12, 0, 1;
    %cmpi/u 8, 6, 5;
    %jmp/0xz  T_86.4, 4;
    %vpi_call 10 55 "$display", $realtime, ": %d receive inst:%b", P_0x8d6ad94, v0x8d6cdd0_0;
    %ix/load 1, 28, 0;
    %mov 4, 0, 1;
    %jmp/1 T_86.6, 4;
    %load/x1p 8, v0x8d6cdd0_0, 4;
    %jmp T_86.7;
T_86.6 ;
    %mov 8, 2, 4;
T_86.7 ;
; Save base=8 wid=4 in lookaside.
    %set/v v0x8d6ce88_0, 8, 4;
    %ix/load 0, 1, 0;
    %assign/v0 v0x8d6c958_0, 0, 1;
    %load/v 8, v0x8d6c530_0, 4;
    %ix/load 0, 4, 0;
    %assign/v0 v0x8d6cc68_0, 0, 8;
    %ix/load 1, 18, 0;
    %mov 4, 0, 1;
    %jmp/1 T_86.8, 4;
    %load/x1p 8, v0x8d6cdd0_0, 5;
    %jmp T_86.9;
T_86.8 ;
    %mov 8, 2, 5;
T_86.9 ;
; Save base=8 wid=5 in lookaside.
    %set/v v0x8d6ced8_0, 8, 5;
    %load/v 8, v0x8d6d478_0, 32;
    %set/v v0x8d6bfa0_0, 8, 32;
    %load/v 8, v0x8d6cd18_0, 4;
    %set/v v0x8d6bf40_0, 8, 4;
    %load/v 8, v0x8d6c300_0, 480;
    %set/v v0x8d6bdc0_0, 8, 480;
    %load/v 8, v0x8d6c3c8_0, 15;
    %set/v v0x8d6be30_0, 8, 15;
    %fork TD_CPU.alu_rs\x5B6\x5D.getData, S_0x8d6bd40;
    %join;
    %load/v 8, v0x8d6bef0_0, 32;
    %set/v v0x8d6c6c0_0, 8, 32;
    %load/v 8, v0x8d6be90_0, 4;
    %set/v v0x8d6c480_0, 8, 4;
    %load/v 8, v0x8d6ce88_0, 4;
    %mov 12, 0, 1;
    %cmpi/u 8, 0, 5;
    %mov 8, 4, 1;
    %load/v 9, v0x8d6ce88_0, 4;
    %mov 13, 0, 1;
    %cmpi/u 9, 1, 5;
    %or 8, 4, 1;
    %load/v 9, v0x8d6ce88_0, 4;
    %mov 13, 0, 1;
    %cmpi/u 9, 2, 5;
    %or 8, 4, 1;
    %jmp/0xz  T_86.10, 8;
    %ix/load 1, 13, 0;
    %mov 4, 0, 1;
    %jmp/1 T_86.12, 4;
    %load/x1p 8, v0x8d6cdd0_0, 5;
    %jmp T_86.13;
T_86.12 ;
    %mov 8, 2, 5;
T_86.13 ;
; Save base=8 wid=5 in lookaside.
    %set/v v0x8d6d118_0, 8, 5;
    %load/v 8, v0x8d6d548_0, 32;
    %set/v v0x8d6bfa0_0, 8, 32;
    %load/v 8, v0x8d6cf98_0, 4;
    %set/v v0x8d6bf40_0, 8, 4;
    %load/v 8, v0x8d6c300_0, 480;
    %set/v v0x8d6bdc0_0, 8, 480;
    %load/v 8, v0x8d6c3c8_0, 15;
    %set/v v0x8d6be30_0, 8, 15;
    %fork TD_CPU.alu_rs\x5B6\x5D.getData, S_0x8d6bd40;
    %join;
    %load/v 8, v0x8d6bef0_0, 32;
    %set/v v0x8d6c720_0, 8, 32;
    %load/v 8, v0x8d6be90_0, 4;
    %set/v v0x8d6c4e0_0, 8, 4;
    %jmp T_86.11;
T_86.10 ;
    %load/v 8, v0x8d6cdd0_0, 18; Select 18 out of 32 bits
    %mov 26, 0, 14;
    %set/v v0x8d6c720_0, 8, 32;
    %movi 8, 15, 5;
    %set/v v0x8d6c4e0_0, 8, 4;
T_86.11 ;
    %delay 1, 0;
    %set/v v0x8d6ced8_0, 3, 5;
    %set/v v0x8d6d118_0, 3, 5;
    %ix/load 0, 1, 0;
    %assign/v0 v0x8d6d348_0, 0, 0;
T_86.4 ;
    %end;
    .scope S_0x8d6a900;
t_31 %join;
T_86.2 ;
T_86.1 ;
    %jmp T_86;
    .thread T_86;
    .scope S_0x8d6a900;
T_87 ;
    %wait E_0x8c7c8e8;
    %load/v 8, v0x8d6c958_0, 1;
    %jmp/0xz  T_87.0, 8;
    %fork t_34, S_0x8d6b870;
    %jmp t_33;
    .scope S_0x8d6b870;
t_34 ;
    %set/v v0x8d6b8f0_0, 1, 1;
    %load/v 8, v0x8d6c480_0, 4;
    %set/v v0x8d6c0a0_0, 8, 4;
    %load/v 8, v0x8d6c6c0_0, 32;
    %set/v v0x8d6c110_0, 8, 32;
    %load/v 8, v0x8d6c300_0, 480;
    %set/v v0x8d6c170_0, 8, 480;
    %load/v 8, v0x8d6c3c8_0, 15;
    %set/v v0x8d6c280_0, 8, 15;
    %load/v 8, v0x8d6b8f0_0, 1;
    %set/v v0x8d6c1d0_0, 8, 1;
    %fork TD_CPU.alu_rs\x5B6\x5D.checkAndGetData, S_0x8d6c020;
    %join;
    %load/v 8, v0x8d6c0a0_0, 4;
    %set/v v0x8d6c480_0, 8, 4;
    %load/v 8, v0x8d6c110_0, 32;
    %set/v v0x8d6c6c0_0, 8, 32;
    %load/v 8, v0x8d6c1d0_0, 1;
    %set/v v0x8d6b8f0_0, 8, 1;
    %load/v 8, v0x8d6c4e0_0, 4;
    %set/v v0x8d6c0a0_0, 8, 4;
    %load/v 8, v0x8d6c720_0, 32;
    %set/v v0x8d6c110_0, 8, 32;
    %load/v 8, v0x8d6c300_0, 480;
    %set/v v0x8d6c170_0, 8, 480;
    %load/v 8, v0x8d6c3c8_0, 15;
    %set/v v0x8d6c280_0, 8, 15;
    %load/v 8, v0x8d6b8f0_0, 1;
    %set/v v0x8d6c1d0_0, 8, 1;
    %fork TD_CPU.alu_rs\x5B6\x5D.checkAndGetData, S_0x8d6c020;
    %join;
    %load/v 8, v0x8d6c0a0_0, 4;
    %set/v v0x8d6c4e0_0, 8, 4;
    %load/v 8, v0x8d6c110_0, 32;
    %set/v v0x8d6c720_0, 8, 32;
    %load/v 8, v0x8d6c1d0_0, 1;
    %set/v v0x8d6b8f0_0, 8, 1;
    %load/v 8, v0x8d6b8f0_0, 1;
    %jmp/0xz  T_87.2, 8;
    %load/v 8, v0x8d6ce88_0, 4;
    %cmpi/u 8, 1, 4;
    %jmp/1 T_87.4, 6;
    %cmpi/u 8, 6, 4;
    %jmp/1 T_87.5, 6;
    %cmpi/u 8, 0, 4;
    %jmp/1 T_87.6, 6;
    %cmpi/u 8, 5, 4;
    %jmp/1 T_87.7, 6;
    %cmpi/u 8, 2, 4;
    %jmp/1 T_87.8, 6;
    %cmpi/u 8, 7, 4;
    %jmp/1 T_87.9, 6;
    %jmp T_87.11;
T_87.4 ;
    %delay 1, 0;
    %load/v 8, v0x8d6c6c0_0, 32;
    %load/v 40, v0x8d6c720_0, 32;
    %sub 8, 40, 32;
    %set/v v0x8d6d2f8_0, 8, 32;
    %jmp T_87.11;
T_87.5 ;
    %delay 1, 0;
    %load/v 8, v0x8d6c6c0_0, 32;
    %load/v 40, v0x8d6c720_0, 32;
    %sub 8, 40, 32;
    %set/v v0x8d6d2f8_0, 8, 32;
    %jmp T_87.11;
T_87.6 ;
    %delay 1, 0;
    %load/v 8, v0x8d6c6c0_0, 32;
    %load/v 40, v0x8d6c720_0, 32;
    %add 8, 40, 32;
    %set/v v0x8d6d2f8_0, 8, 32;
    %jmp T_87.11;
T_87.7 ;
    %delay 1, 0;
    %load/v 8, v0x8d6c6c0_0, 32;
    %load/v 40, v0x8d6c720_0, 32;
    %add 8, 40, 32;
    %set/v v0x8d6d2f8_0, 8, 32;
    %jmp T_87.11;
T_87.8 ;
    %delay 31, 0;
    %load/v 8, v0x8d6c6c0_0, 32;
    %load/v 40, v0x8d6c720_0, 32;
    %mul 8, 40, 32;
    %set/v v0x8d6d2f8_0, 8, 32;
    %jmp T_87.11;
T_87.9 ;
    %delay 31, 0;
    %load/v 8, v0x8d6c6c0_0, 32;
    %load/v 40, v0x8d6c720_0, 32;
    %mul 8, 40, 32;
    %set/v v0x8d6d2f8_0, 8, 32;
    %jmp T_87.11;
T_87.11 ;
    %set/v v0x8d6d348_0, 1, 1;
    %set/v v0x8d6c958_0, 0, 1;
    %delay 5, 0;
    %movi 8, 15, 5;
    %set/v v0x8d6cc68_0, 8, 4;
    %delay 8, 0;
    %set/v v0x8d6d348_0, 0, 1;
T_87.2 ;
    %end;
    .scope S_0x8d6a900;
t_33 %join;
T_87.0 ;
    %jmp T_87;
    .thread T_87;
    .scope S_0x8d68468;
T_88 ;
    %set/v v0x8d6a4e8_0, 3, 5;
    %end;
    .thread T_88;
    .scope S_0x8d68468;
T_89 ;
    %set/v v0x8d6a5f0_0, 3, 5;
    %end;
    .thread T_89;
    .scope S_0x8d68468;
T_90 ;
    %wait E_0x8d65a08;
    %load/v 8, v0x8d6a590_0, 1;
    %jmp/0xz  T_90.0, 8;
    %ix/load 0, 1, 0;
    %assign/v0 v0x8d6a170_0, 0, 0;
    %movi 8, 15, 5;
    %ix/load 0, 4, 0;
    %assign/v0 v0x8d6a348_0, 0, 8;
    %ix/load 0, 1, 0;
    %assign/v0 v0x8d6a768_0, 0, 0;
    %ix/load 0, 32, 0;
    %assign/v0 v0x8d6a640_0, 0, 0;
    %jmp T_90.1;
T_90.0 ;
    %load/v 8, v0x8d6a170_0, 1;
    %inv 8, 1;
    %jmp/0xz  T_90.2, 8;
    %fork t_36, S_0x8d69318;
    %jmp t_35;
    .scope S_0x8d69318;
t_36 ;
    %delay 1, 0;
    %load/v 8, v0x8d6a3a8_0, 4;
    %mov 12, 0, 1;
    %cmpi/u 8, 7, 5;
    %jmp/0xz  T_90.4, 4;
    %vpi_call 10 55 "$display", $realtime, ": %d receive inst:%b", P_0x8d688fc, v0x8d6a448_0;
    %ix/load 1, 28, 0;
    %mov 4, 0, 1;
    %jmp/1 T_90.6, 4;
    %load/x1p 8, v0x8d6a448_0, 4;
    %jmp T_90.7;
T_90.6 ;
    %mov 8, 2, 4;
T_90.7 ;
; Save base=8 wid=4 in lookaside.
    %set/v v0x8d6a498_0, 8, 4;
    %ix/load 0, 1, 0;
    %assign/v0 v0x8d6a170_0, 0, 1;
    %load/v 8, v0x8d69e18_0, 4;
    %ix/load 0, 4, 0;
    %assign/v0 v0x8d6a348_0, 0, 8;
    %ix/load 1, 18, 0;
    %mov 4, 0, 1;
    %jmp/1 T_90.8, 4;
    %load/x1p 8, v0x8d6a448_0, 5;
    %jmp T_90.9;
T_90.8 ;
    %mov 8, 2, 5;
T_90.9 ;
; Save base=8 wid=5 in lookaside.
    %set/v v0x8d6a4e8_0, 8, 5;
    %load/v 8, v0x8d6a830_0, 32;
    %set/v v0x8d69958_0, 8, 32;
    %load/v 8, v0x8d6a3f8_0, 4;
    %set/v v0x8d698f8_0, 8, 4;
    %load/v 8, v0x8d69cb8_0, 480;
    %set/v v0x8d69778_0, 8, 480;
    %load/v 8, v0x8d69d18_0, 15;
    %set/v v0x8d697e8_0, 8, 15;
    %fork TD_CPU.alu_rs\x5B7\x5D.getData, S_0x8d696f8;
    %join;
    %load/v 8, v0x8d698a8_0, 32;
    %set/v v0x8d69ed8_0, 8, 32;
    %load/v 8, v0x8d69848_0, 4;
    %set/v v0x8d69d68_0, 8, 4;
    %load/v 8, v0x8d6a498_0, 4;
    %mov 12, 0, 1;
    %cmpi/u 8, 0, 5;
    %mov 8, 4, 1;
    %load/v 9, v0x8d6a498_0, 4;
    %mov 13, 0, 1;
    %cmpi/u 9, 1, 5;
    %or 8, 4, 1;
    %load/v 9, v0x8d6a498_0, 4;
    %mov 13, 0, 1;
    %cmpi/u 9, 2, 5;
    %or 8, 4, 1;
    %jmp/0xz  T_90.10, 8;
    %ix/load 1, 13, 0;
    %mov 4, 0, 1;
    %jmp/1 T_90.12, 4;
    %load/x1p 8, v0x8d6a448_0, 5;
    %jmp T_90.13;
T_90.12 ;
    %mov 8, 2, 5;
T_90.13 ;
; Save base=8 wid=5 in lookaside.
    %set/v v0x8d6a5f0_0, 8, 5;
    %load/v 8, v0x8d6a7b8_0, 32;
    %set/v v0x8d69958_0, 8, 32;
    %load/v 8, v0x8d6a540_0, 4;
    %set/v v0x8d698f8_0, 8, 4;
    %load/v 8, v0x8d69cb8_0, 480;
    %set/v v0x8d69778_0, 8, 480;
    %load/v 8, v0x8d69d18_0, 15;
    %set/v v0x8d697e8_0, 8, 15;
    %fork TD_CPU.alu_rs\x5B7\x5D.getData, S_0x8d696f8;
    %join;
    %load/v 8, v0x8d698a8_0, 32;
    %set/v v0x8d69f38_0, 8, 32;
    %load/v 8, v0x8d69848_0, 4;
    %set/v v0x8d69dc8_0, 8, 4;
    %jmp T_90.11;
T_90.10 ;
    %load/v 8, v0x8d6a448_0, 18; Select 18 out of 32 bits
    %mov 26, 0, 14;
    %set/v v0x8d69f38_0, 8, 32;
    %movi 8, 15, 5;
    %set/v v0x8d69dc8_0, 8, 4;
T_90.11 ;
    %delay 1, 0;
    %set/v v0x8d6a4e8_0, 3, 5;
    %set/v v0x8d6a5f0_0, 3, 5;
    %ix/load 0, 1, 0;
    %assign/v0 v0x8d6a768_0, 0, 0;
T_90.4 ;
    %end;
    .scope S_0x8d68468;
t_35 %join;
T_90.2 ;
T_90.1 ;
    %jmp T_90;
    .thread T_90;
    .scope S_0x8d68468;
T_91 ;
    %wait E_0x8c7c8e8;
    %load/v 8, v0x8d6a170_0, 1;
    %jmp/0xz  T_91.0, 8;
    %fork t_38, S_0x8d69228;
    %jmp t_37;
    .scope S_0x8d69228;
t_38 ;
    %set/v v0x8d692a8_0, 1, 1;
    %load/v 8, v0x8d69d68_0, 4;
    %set/v v0x8d69a58_0, 8, 4;
    %load/v 8, v0x8d69ed8_0, 32;
    %set/v v0x8d69ac8_0, 8, 32;
    %load/v 8, v0x8d69cb8_0, 480;
    %set/v v0x8d69b28_0, 8, 480;
    %load/v 8, v0x8d69d18_0, 15;
    %set/v v0x8d69c38_0, 8, 15;
    %load/v 8, v0x8d692a8_0, 1;
    %set/v v0x8d69b88_0, 8, 1;
    %fork TD_CPU.alu_rs\x5B7\x5D.checkAndGetData, S_0x8d699d8;
    %join;
    %load/v 8, v0x8d69a58_0, 4;
    %set/v v0x8d69d68_0, 8, 4;
    %load/v 8, v0x8d69ac8_0, 32;
    %set/v v0x8d69ed8_0, 8, 32;
    %load/v 8, v0x8d69b88_0, 1;
    %set/v v0x8d692a8_0, 8, 1;
    %load/v 8, v0x8d69dc8_0, 4;
    %set/v v0x8d69a58_0, 8, 4;
    %load/v 8, v0x8d69f38_0, 32;
    %set/v v0x8d69ac8_0, 8, 32;
    %load/v 8, v0x8d69cb8_0, 480;
    %set/v v0x8d69b28_0, 8, 480;
    %load/v 8, v0x8d69d18_0, 15;
    %set/v v0x8d69c38_0, 8, 15;
    %load/v 8, v0x8d692a8_0, 1;
    %set/v v0x8d69b88_0, 8, 1;
    %fork TD_CPU.alu_rs\x5B7\x5D.checkAndGetData, S_0x8d699d8;
    %join;
    %load/v 8, v0x8d69a58_0, 4;
    %set/v v0x8d69dc8_0, 8, 4;
    %load/v 8, v0x8d69ac8_0, 32;
    %set/v v0x8d69f38_0, 8, 32;
    %load/v 8, v0x8d69b88_0, 1;
    %set/v v0x8d692a8_0, 8, 1;
    %load/v 8, v0x8d692a8_0, 1;
    %jmp/0xz  T_91.2, 8;
    %load/v 8, v0x8d6a498_0, 4;
    %cmpi/u 8, 1, 4;
    %jmp/1 T_91.4, 6;
    %cmpi/u 8, 6, 4;
    %jmp/1 T_91.5, 6;
    %cmpi/u 8, 0, 4;
    %jmp/1 T_91.6, 6;
    %cmpi/u 8, 5, 4;
    %jmp/1 T_91.7, 6;
    %cmpi/u 8, 2, 4;
    %jmp/1 T_91.8, 6;
    %cmpi/u 8, 7, 4;
    %jmp/1 T_91.9, 6;
    %jmp T_91.11;
T_91.4 ;
    %delay 1, 0;
    %load/v 8, v0x8d69ed8_0, 32;
    %load/v 40, v0x8d69f38_0, 32;
    %sub 8, 40, 32;
    %set/v v0x8d6a640_0, 8, 32;
    %jmp T_91.11;
T_91.5 ;
    %delay 1, 0;
    %load/v 8, v0x8d69ed8_0, 32;
    %load/v 40, v0x8d69f38_0, 32;
    %sub 8, 40, 32;
    %set/v v0x8d6a640_0, 8, 32;
    %jmp T_91.11;
T_91.6 ;
    %delay 1, 0;
    %load/v 8, v0x8d69ed8_0, 32;
    %load/v 40, v0x8d69f38_0, 32;
    %add 8, 40, 32;
    %set/v v0x8d6a640_0, 8, 32;
    %jmp T_91.11;
T_91.7 ;
    %delay 1, 0;
    %load/v 8, v0x8d69ed8_0, 32;
    %load/v 40, v0x8d69f38_0, 32;
    %add 8, 40, 32;
    %set/v v0x8d6a640_0, 8, 32;
    %jmp T_91.11;
T_91.8 ;
    %delay 31, 0;
    %load/v 8, v0x8d69ed8_0, 32;
    %load/v 40, v0x8d69f38_0, 32;
    %mul 8, 40, 32;
    %set/v v0x8d6a640_0, 8, 32;
    %jmp T_91.11;
T_91.9 ;
    %delay 31, 0;
    %load/v 8, v0x8d69ed8_0, 32;
    %load/v 40, v0x8d69f38_0, 32;
    %mul 8, 40, 32;
    %set/v v0x8d6a640_0, 8, 32;
    %jmp T_91.11;
T_91.11 ;
    %set/v v0x8d6a768_0, 1, 1;
    %set/v v0x8d6a170_0, 0, 1;
    %delay 5, 0;
    %movi 8, 15, 5;
    %set/v v0x8d6a348_0, 8, 4;
    %delay 8, 0;
    %set/v v0x8d6a768_0, 0, 1;
T_91.2 ;
    %end;
    .scope S_0x8d68468;
t_37 %join;
T_91.0 ;
    %jmp T_91;
    .thread T_91;
    .scope S_0x8d65b40;
T_92 ;
    %set/v v0x8d67fa8_0, 3, 5;
    %end;
    .thread T_92;
    .scope S_0x8d65b40;
T_93 ;
    %set/v v0x8d68030_0, 3, 5;
    %end;
    .thread T_93;
    .scope S_0x8d65b40;
T_94 ;
    %wait E_0x8d65ff0;
    %load/v 8, v0x8d680e8_0, 1;
    %jmp/0xz  T_94.0, 8;
    %ix/load 0, 1, 0;
    %assign/v0 v0x8d67a48_0, 0, 0;
    %movi 8, 15, 5;
    %ix/load 0, 4, 0;
    %assign/v0 v0x8d67c90_0, 0, 8;
    %ix/load 0, 1, 0;
    %assign/v0 v0x8d68248_0, 0, 0;
    %ix/load 0, 32, 0;
    %assign/v0 v0x8d681f8_0, 0, 0;
    %jmp T_94.1;
T_94.0 ;
    %load/v 8, v0x8d67a48_0, 1;
    %inv 8, 1;
    %jmp/0xz  T_94.2, 8;
    %fork t_40, S_0x8d66b30;
    %jmp t_39;
    .scope S_0x8d66b30;
t_40 ;
    %delay 1, 0;
    %load/v 8, v0x8d67cf0_0, 4;
    %mov 12, 0, 2;
    %cmpi/u 8, 8, 6;
    %jmp/0xz  T_94.4, 4;
    %vpi_call 10 55 "$display", $realtime, ": %d receive inst:%b", P_0x8d65fd4, v0x8d67d90_0;
    %ix/load 1, 28, 0;
    %mov 4, 0, 1;
    %jmp/1 T_94.6, 4;
    %load/x1p 8, v0x8d67d90_0, 4;
    %jmp T_94.7;
T_94.6 ;
    %mov 8, 2, 4;
T_94.7 ;
; Save base=8 wid=4 in lookaside.
    %set/v v0x8d67e18_0, 8, 4;
    %ix/load 0, 1, 0;
    %assign/v0 v0x8d67a48_0, 0, 1;
    %load/v 8, v0x8d67668_0, 4;
    %ix/load 0, 4, 0;
    %assign/v0 v0x8d67c90_0, 0, 8;
    %ix/load 1, 18, 0;
    %mov 4, 0, 1;
    %jmp/1 T_94.8, 4;
    %load/x1p 8, v0x8d67d90_0, 5;
    %jmp T_94.9;
T_94.8 ;
    %mov 8, 2, 5;
T_94.9 ;
; Save base=8 wid=5 in lookaside.
    %set/v v0x8d67fa8_0, 8, 5;
    %load/v 8, v0x8d68348_0, 32;
    %set/v v0x8d67170_0, 8, 32;
    %load/v 8, v0x8d67d40_0, 4;
    %set/v v0x8d67110_0, 8, 4;
    %load/v 8, v0x8d674d0_0, 480;
    %set/v v0x8d66f90_0, 8, 480;
    %load/v 8, v0x8d67530_0, 15;
    %set/v v0x8d67000_0, 8, 15;
    %fork TD_CPU.alu_rs\x5B8\x5D.getData, S_0x8d66f10;
    %join;
    %load/v 8, v0x8d670c0_0, 32;
    %set/v v0x8d67778_0, 8, 32;
    %load/v 8, v0x8d67060_0, 4;
    %set/v v0x8d675b8_0, 8, 4;
    %load/v 8, v0x8d67e18_0, 4;
    %mov 12, 0, 1;
    %cmpi/u 8, 0, 5;
    %mov 8, 4, 1;
    %load/v 9, v0x8d67e18_0, 4;
    %mov 13, 0, 1;
    %cmpi/u 9, 1, 5;
    %or 8, 4, 1;
    %load/v 9, v0x8d67e18_0, 4;
    %mov 13, 0, 1;
    %cmpi/u 9, 2, 5;
    %or 8, 4, 1;
    %jmp/0xz  T_94.10, 8;
    %ix/load 1, 13, 0;
    %mov 4, 0, 1;
    %jmp/1 T_94.12, 4;
    %load/x1p 8, v0x8d67d90_0, 5;
    %jmp T_94.13;
T_94.12 ;
    %mov 8, 2, 5;
T_94.13 ;
; Save base=8 wid=5 in lookaside.
    %set/v v0x8d68030_0, 8, 5;
    %load/v 8, v0x8d68418_0, 32;
    %set/v v0x8d67170_0, 8, 32;
    %load/v 8, v0x8d67ef8_0, 4;
    %set/v v0x8d67110_0, 8, 4;
    %load/v 8, v0x8d674d0_0, 480;
    %set/v v0x8d66f90_0, 8, 480;
    %load/v 8, v0x8d67530_0, 15;
    %set/v v0x8d67000_0, 8, 15;
    %fork TD_CPU.alu_rs\x5B8\x5D.getData, S_0x8d66f10;
    %join;
    %load/v 8, v0x8d670c0_0, 32;
    %set/v v0x8d677d8_0, 8, 32;
    %load/v 8, v0x8d67060_0, 4;
    %set/v v0x8d67618_0, 8, 4;
    %jmp T_94.11;
T_94.10 ;
    %load/v 8, v0x8d67d90_0, 18; Select 18 out of 32 bits
    %mov 26, 0, 14;
    %set/v v0x8d677d8_0, 8, 32;
    %movi 8, 15, 5;
    %set/v v0x8d67618_0, 8, 4;
T_94.11 ;
    %delay 1, 0;
    %set/v v0x8d67fa8_0, 3, 5;
    %set/v v0x8d68030_0, 3, 5;
    %ix/load 0, 1, 0;
    %assign/v0 v0x8d68248_0, 0, 0;
T_94.4 ;
    %end;
    .scope S_0x8d65b40;
t_39 %join;
T_94.2 ;
T_94.1 ;
    %jmp T_94;
    .thread T_94;
    .scope S_0x8d65b40;
T_95 ;
    %wait E_0x8c7c8e8;
    %load/v 8, v0x8d67a48_0, 1;
    %jmp/0xz  T_95.0, 8;
    %fork t_42, S_0x8d66a40;
    %jmp t_41;
    .scope S_0x8d66a40;
t_42 ;
    %set/v v0x8d66ac0_0, 1, 1;
    %load/v 8, v0x8d675b8_0, 4;
    %set/v v0x8d67270_0, 8, 4;
    %load/v 8, v0x8d67778_0, 32;
    %set/v v0x8d672e0_0, 8, 32;
    %load/v 8, v0x8d674d0_0, 480;
    %set/v v0x8d67340_0, 8, 480;
    %load/v 8, v0x8d67530_0, 15;
    %set/v v0x8d67450_0, 8, 15;
    %load/v 8, v0x8d66ac0_0, 1;
    %set/v v0x8d673a0_0, 8, 1;
    %fork TD_CPU.alu_rs\x5B8\x5D.checkAndGetData, S_0x8d671f0;
    %join;
    %load/v 8, v0x8d67270_0, 4;
    %set/v v0x8d675b8_0, 8, 4;
    %load/v 8, v0x8d672e0_0, 32;
    %set/v v0x8d67778_0, 8, 32;
    %load/v 8, v0x8d673a0_0, 1;
    %set/v v0x8d66ac0_0, 8, 1;
    %load/v 8, v0x8d67618_0, 4;
    %set/v v0x8d67270_0, 8, 4;
    %load/v 8, v0x8d677d8_0, 32;
    %set/v v0x8d672e0_0, 8, 32;
    %load/v 8, v0x8d674d0_0, 480;
    %set/v v0x8d67340_0, 8, 480;
    %load/v 8, v0x8d67530_0, 15;
    %set/v v0x8d67450_0, 8, 15;
    %load/v 8, v0x8d66ac0_0, 1;
    %set/v v0x8d673a0_0, 8, 1;
    %fork TD_CPU.alu_rs\x5B8\x5D.checkAndGetData, S_0x8d671f0;
    %join;
    %load/v 8, v0x8d67270_0, 4;
    %set/v v0x8d67618_0, 8, 4;
    %load/v 8, v0x8d672e0_0, 32;
    %set/v v0x8d677d8_0, 8, 32;
    %load/v 8, v0x8d673a0_0, 1;
    %set/v v0x8d66ac0_0, 8, 1;
    %load/v 8, v0x8d66ac0_0, 1;
    %jmp/0xz  T_95.2, 8;
    %load/v 8, v0x8d67e18_0, 4;
    %cmpi/u 8, 1, 4;
    %jmp/1 T_95.4, 6;
    %cmpi/u 8, 6, 4;
    %jmp/1 T_95.5, 6;
    %cmpi/u 8, 0, 4;
    %jmp/1 T_95.6, 6;
    %cmpi/u 8, 5, 4;
    %jmp/1 T_95.7, 6;
    %cmpi/u 8, 2, 4;
    %jmp/1 T_95.8, 6;
    %cmpi/u 8, 7, 4;
    %jmp/1 T_95.9, 6;
    %jmp T_95.11;
T_95.4 ;
    %delay 1, 0;
    %load/v 8, v0x8d67778_0, 32;
    %load/v 40, v0x8d677d8_0, 32;
    %sub 8, 40, 32;
    %set/v v0x8d681f8_0, 8, 32;
    %jmp T_95.11;
T_95.5 ;
    %delay 1, 0;
    %load/v 8, v0x8d67778_0, 32;
    %load/v 40, v0x8d677d8_0, 32;
    %sub 8, 40, 32;
    %set/v v0x8d681f8_0, 8, 32;
    %jmp T_95.11;
T_95.6 ;
    %delay 1, 0;
    %load/v 8, v0x8d67778_0, 32;
    %load/v 40, v0x8d677d8_0, 32;
    %add 8, 40, 32;
    %set/v v0x8d681f8_0, 8, 32;
    %jmp T_95.11;
T_95.7 ;
    %delay 1, 0;
    %load/v 8, v0x8d67778_0, 32;
    %load/v 40, v0x8d677d8_0, 32;
    %add 8, 40, 32;
    %set/v v0x8d681f8_0, 8, 32;
    %jmp T_95.11;
T_95.8 ;
    %delay 31, 0;
    %load/v 8, v0x8d67778_0, 32;
    %load/v 40, v0x8d677d8_0, 32;
    %mul 8, 40, 32;
    %set/v v0x8d681f8_0, 8, 32;
    %jmp T_95.11;
T_95.9 ;
    %delay 31, 0;
    %load/v 8, v0x8d67778_0, 32;
    %load/v 40, v0x8d677d8_0, 32;
    %mul 8, 40, 32;
    %set/v v0x8d681f8_0, 8, 32;
    %jmp T_95.11;
T_95.11 ;
    %set/v v0x8d68248_0, 1, 1;
    %set/v v0x8d67a48_0, 0, 1;
    %delay 5, 0;
    %movi 8, 15, 5;
    %set/v v0x8d67c90_0, 8, 4;
    %delay 8, 0;
    %set/v v0x8d68248_0, 0, 1;
T_95.2 ;
    %end;
    .scope S_0x8d65b40;
t_41 %join;
T_95.0 ;
    %jmp T_95;
    .thread T_95;
    .scope S_0x8d63008;
T_96 ;
    %set/v v0x8d65588_0, 3, 5;
    %end;
    .thread T_96;
    .scope S_0x8d63008;
T_97 ;
    %set/v v0x8d656c0_0, 3, 5;
    %end;
    .thread T_97;
    .scope S_0x8d63008;
T_98 ;
    %set/v v0x8d65648_0, 3, 5;
    %end;
    .thread T_98;
    .scope S_0x8d63008;
T_99 ;
    %set/v v0x8d65888_0, 0, 32;
    %end;
    .thread T_99;
    .scope S_0x8d63008;
T_100 ;
    %set/v v0x8d65278_0, 0, 32;
    %end;
    .thread T_100;
    .scope S_0x8d63008;
T_101 ;
    %wait E_0x8d62168;
    %load/v 8, v0x8d657b0_0, 1;
    %jmp/0xz  T_101.0, 8;
    %ix/load 0, 1, 0;
    %assign/v0 v0x8d65138_0, 0, 0;
    %movi 8, 15, 5;
    %ix/load 0, 4, 0;
    %assign/v0 v0x8d65340_0, 0, 8;
    %ix/load 0, 1, 0;
    %assign/v0 v0x8d65800_0, 0, 0;
    %ix/load 0, 32, 0;
    %assign/v0 v0x8d65888_0, 0, 0;
    %jmp T_101.1;
T_101.0 ;
    %load/v 8, v0x8d65138_0, 1;
    %inv 8, 1;
    %jmp/0xz  T_101.2, 8;
    %fork t_44, S_0x8d640a8;
    %jmp t_43;
    .scope S_0x8d640a8;
t_44 ;
    %delay 1, 0;
    %load/v 8, v0x8d652c8_0, 4;
    %mov 12, 0, 2;
    %cmpi/u 8, 9, 6;
    %jmp/0xz  T_101.4, 4;
    %vpi_call 11 58 "$display", $realtime, ": %d receive inst:%b", P_0x8d634b0, v0x8d65410_0;
    %ix/load 0, 1, 0;
    %assign/v0 v0x8d65138_0, 0, 1;
    %load/v 8, v0x8d64c28_0, 4;
    %ix/load 0, 4, 0;
    %assign/v0 v0x8d65340_0, 0, 8;
    %ix/load 1, 28, 0;
    %mov 4, 0, 1;
    %jmp/1 T_101.6, 4;
    %load/x1p 8, v0x8d65410_0, 4;
    %jmp T_101.7;
T_101.6 ;
    %mov 8, 2, 4;
T_101.7 ;
; Save base=8 wid=4 in lookaside.
    %set/v v0x8d654c8_0, 8, 4;
    %ix/load 1, 23, 0;
    %mov 4, 0, 1;
    %jmp/1 T_101.8, 4;
    %load/x1p 8, v0x8d65410_0, 5;
    %jmp T_101.9;
T_101.8 ;
    %mov 8, 2, 5;
T_101.9 ;
; Save base=8 wid=5 in lookaside.
    %set/v v0x8d65588_0, 8, 5;
    %ix/load 1, 18, 0;
    %mov 4, 0, 1;
    %jmp/1 T_101.10, 4;
    %load/x1p 8, v0x8d65410_0, 5;
    %jmp T_101.11;
T_101.10 ;
    %mov 8, 2, 5;
T_101.11 ;
; Save base=8 wid=5 in lookaside.
    %set/v v0x8d656c0_0, 8, 5;
    %load/v 8, v0x8d658d8_0, 32;
    %set/v v0x8d646e8_0, 8, 32;
    %load/v 8, v0x8d65518_0, 4;
    %set/v v0x8d64688_0, 8, 4;
    %load/v 8, v0x8d64a48_0, 480;
    %set/v v0x8d64508_0, 8, 480;
    %load/v 8, v0x8d64ac8_0, 15;
    %set/v v0x8d64578_0, 8, 15;
    %fork TD_CPU.store_rs\x5B0\x5D.getData, S_0x8d64488;
    %join;
    %load/v 8, v0x8d64638_0, 32;
    %set/v v0x8d64d28_0, 8, 32;
    %load/v 8, v0x8d645d8_0, 4;
    %set/v v0x8d64b38_0, 8, 4;
    %load/v 8, v0x8d65a50_0, 32;
    %set/v v0x8d646e8_0, 8, 32;
    %load/v 8, v0x8d65460_0, 4;
    %set/v v0x8d64688_0, 8, 4;
    %load/v 8, v0x8d64a48_0, 480;
    %set/v v0x8d64508_0, 8, 480;
    %load/v 8, v0x8d64ac8_0, 15;
    %set/v v0x8d64578_0, 8, 15;
    %fork TD_CPU.store_rs\x5B0\x5D.getData, S_0x8d64488;
    %join;
    %load/v 8, v0x8d64638_0, 32;
    %set/v v0x8d64da0_0, 8, 32;
    %load/v 8, v0x8d645d8_0, 4;
    %set/v v0x8d64b88_0, 8, 4;
    %load/v 8, v0x8d654c8_0, 4;
    %mov 12, 0, 1;
    %cmpi/u 8, 4, 5;
    %jmp/0xz  T_101.12, 6;
    %ix/load 1, 13, 0;
    %mov 4, 0, 1;
    %jmp/1 T_101.14, 4;
    %load/x1p 8, v0x8d65410_0, 5;
    %jmp T_101.15;
T_101.14 ;
    %mov 8, 2, 5;
T_101.15 ;
; Save base=8 wid=5 in lookaside.
    %set/v v0x8d65648_0, 8, 5;
    %load/v 8, v0x8d659b8_0, 32;
    %set/v v0x8d646e8_0, 8, 32;
    %load/v 8, v0x8d655d8_0, 4;
    %set/v v0x8d64688_0, 8, 4;
    %load/v 8, v0x8d64a48_0, 480;
    %set/v v0x8d64508_0, 8, 480;
    %load/v 8, v0x8d64ac8_0, 15;
    %set/v v0x8d64578_0, 8, 15;
    %fork TD_CPU.store_rs\x5B0\x5D.getData, S_0x8d64488;
    %join;
    %load/v 8, v0x8d64638_0, 32;
    %set/v v0x8d64df0_0, 8, 32;
    %load/v 8, v0x8d645d8_0, 4;
    %set/v v0x8d64bd8_0, 8, 4;
    %jmp T_101.13;
T_101.12 ;
    %load/v 8, v0x8d65410_0, 18; Select 18 out of 32 bits
    %mov 26, 0, 14;
    %set/v v0x8d64df0_0, 8, 32;
    %movi 8, 15, 5;
    %set/v v0x8d64bd8_0, 8, 4;
T_101.13 ;
    %delay 1, 0;
    %set/v v0x8d65588_0, 3, 5;
    %set/v v0x8d656c0_0, 3, 5;
    %set/v v0x8d65648_0, 3, 5;
    %ix/load 0, 1, 0;
    %assign/v0 v0x8d65800_0, 0, 0;
T_101.4 ;
    %end;
    .scope S_0x8d63008;
t_43 %join;
T_101.2 ;
T_101.1 ;
    %jmp T_101;
    .thread T_101;
    .scope S_0x8d63008;
T_102 ;
    %wait E_0x8c7c8e8;
    %load/v 8, v0x8d65138_0, 1;
    %jmp/0xz  T_102.0, 8;
    %fork t_46, S_0x8d63fb8;
    %jmp t_45;
    .scope S_0x8d63fb8;
t_46 ;
    %set/v v0x8d64038_0, 1, 1;
    %load/v 8, v0x8d64b88_0, 4;
    %set/v v0x8d647e8_0, 8, 4;
    %load/v 8, v0x8d64da0_0, 32;
    %set/v v0x8d64858_0, 8, 32;
    %load/v 8, v0x8d64a48_0, 480;
    %set/v v0x8d648b8_0, 8, 480;
    %load/v 8, v0x8d64ac8_0, 15;
    %set/v v0x8d649c8_0, 8, 15;
    %load/v 8, v0x8d64038_0, 1;
    %set/v v0x8d64918_0, 8, 1;
    %fork TD_CPU.store_rs\x5B0\x5D.checkAndGetData, S_0x8d64768;
    %join;
    %load/v 8, v0x8d647e8_0, 4;
    %set/v v0x8d64b88_0, 8, 4;
    %load/v 8, v0x8d64858_0, 32;
    %set/v v0x8d64da0_0, 8, 32;
    %load/v 8, v0x8d64918_0, 1;
    %set/v v0x8d64038_0, 8, 1;
    %load/v 8, v0x8d64bd8_0, 4;
    %set/v v0x8d647e8_0, 8, 4;
    %load/v 8, v0x8d64df0_0, 32;
    %set/v v0x8d64858_0, 8, 32;
    %load/v 8, v0x8d64a48_0, 480;
    %set/v v0x8d648b8_0, 8, 480;
    %load/v 8, v0x8d64ac8_0, 15;
    %set/v v0x8d649c8_0, 8, 15;
    %load/v 8, v0x8d64038_0, 1;
    %set/v v0x8d64918_0, 8, 1;
    %fork TD_CPU.store_rs\x5B0\x5D.checkAndGetData, S_0x8d64768;
    %join;
    %load/v 8, v0x8d647e8_0, 4;
    %set/v v0x8d64bd8_0, 8, 4;
    %load/v 8, v0x8d64858_0, 32;
    %set/v v0x8d64df0_0, 8, 32;
    %load/v 8, v0x8d64918_0, 1;
    %set/v v0x8d64038_0, 8, 1;
    %load/v 8, v0x8d64b38_0, 4;
    %set/v v0x8d647e8_0, 8, 4;
    %load/v 8, v0x8d64d28_0, 32;
    %set/v v0x8d64858_0, 8, 32;
    %load/v 8, v0x8d64a48_0, 480;
    %set/v v0x8d648b8_0, 8, 480;
    %load/v 8, v0x8d64ac8_0, 15;
    %set/v v0x8d649c8_0, 8, 15;
    %load/v 8, v0x8d64038_0, 1;
    %set/v v0x8d64918_0, 8, 1;
    %fork TD_CPU.store_rs\x5B0\x5D.checkAndGetData, S_0x8d64768;
    %join;
    %load/v 8, v0x8d647e8_0, 4;
    %set/v v0x8d64b38_0, 8, 4;
    %load/v 8, v0x8d64858_0, 32;
    %set/v v0x8d64d28_0, 8, 32;
    %load/v 8, v0x8d64918_0, 1;
    %set/v v0x8d64038_0, 8, 1;
    %load/v 8, v0x8d64038_0, 1;
    %jmp/0xz  T_102.2, 8;
    %delay 1, 0;
    %load/v 8, v0x8d64da0_0, 32;
    %load/v 40, v0x8d64df0_0, 32;
    %sub 8, 40, 32;
    %set/v v0x8d65888_0, 8, 32;
    %load/v 8, v0x8d64d28_0, 32;
    %set/v v0x8d65278_0, 8, 32;
    %set/v v0x8d65800_0, 1, 1;
    %set/v v0x8d65138_0, 0, 1;
    %delay 5, 0;
    %movi 8, 15, 5;
    %set/v v0x8d65340_0, 8, 4;
    %delay 8, 0;
    %set/v v0x8d65800_0, 0, 1;
T_102.2 ;
    %end;
    .scope S_0x8d63008;
t_45 %join;
T_102.0 ;
    %jmp T_102;
    .thread T_102;
    .scope S_0x8cd8d18;
T_103 ;
    %set/v v0x8d62a70_0, 3, 5;
    %end;
    .thread T_103;
    .scope S_0x8cd8d18;
T_104 ;
    %set/v v0x8d62ba8_0, 3, 5;
    %end;
    .thread T_104;
    .scope S_0x8cd8d18;
T_105 ;
    %set/v v0x8d62b30_0, 3, 5;
    %end;
    .thread T_105;
    .scope S_0x8cd8d18;
T_106 ;
    %set/v v0x8d62d50_0, 0, 32;
    %end;
    .thread T_106;
    .scope S_0x8cd8d18;
T_107 ;
    %set/v v0x8d627c0_0, 0, 32;
    %end;
    .thread T_107;
    .scope S_0x8cd8d18;
T_108 ;
    %wait E_0x8c7e458;
    %load/v 8, v0x8d62c78_0, 1;
    %jmp/0xz  T_108.0, 8;
    %ix/load 0, 1, 0;
    %assign/v0 v0x8d62670_0, 0, 0;
    %movi 8, 15, 5;
    %ix/load 0, 4, 0;
    %assign/v0 v0x8d62868_0, 0, 8;
    %ix/load 0, 1, 0;
    %assign/v0 v0x8d62cc8_0, 0, 0;
    %ix/load 0, 32, 0;
    %assign/v0 v0x8d62d50_0, 0, 0;
    %jmp T_108.1;
T_108.0 ;
    %load/v 8, v0x8d62670_0, 1;
    %inv 8, 1;
    %jmp/0xz  T_108.2, 8;
    %fork t_48, S_0x8d61580;
    %jmp t_47;
    .scope S_0x8d61580;
t_48 ;
    %delay 1, 0;
    %load/v 8, v0x8d62918_0, 4;
    %mov 12, 0, 2;
    %cmpi/u 8, 10, 6;
    %jmp/0xz  T_108.4, 4;
    %vpi_call 11 58 "$display", $realtime, ": %d receive inst:%b", P_0x8cf9038, v0x8d62968_0;
    %ix/load 0, 1, 0;
    %assign/v0 v0x8d62670_0, 0, 1;
    %load/v 8, v0x8d62118_0, 4;
    %ix/load 0, 4, 0;
    %assign/v0 v0x8d62868_0, 0, 8;
    %ix/load 1, 28, 0;
    %mov 4, 0, 1;
    %jmp/1 T_108.6, 4;
    %load/x1p 8, v0x8d62968_0, 4;
    %jmp T_108.7;
T_108.6 ;
    %mov 8, 2, 4;
T_108.7 ;
; Save base=8 wid=4 in lookaside.
    %set/v v0x8d628b8_0, 8, 4;
    %ix/load 1, 23, 0;
    %mov 4, 0, 1;
    %jmp/1 T_108.8, 4;
    %load/x1p 8, v0x8d62968_0, 5;
    %jmp T_108.9;
T_108.8 ;
    %mov 8, 2, 5;
T_108.9 ;
; Save base=8 wid=5 in lookaside.
    %set/v v0x8d62a70_0, 8, 5;
    %ix/load 1, 18, 0;
    %mov 4, 0, 1;
    %jmp/1 T_108.10, 4;
    %load/x1p 8, v0x8d62968_0, 5;
    %jmp T_108.11;
T_108.10 ;
    %mov 8, 2, 5;
T_108.11 ;
; Save base=8 wid=5 in lookaside.
    %set/v v0x8d62ba8_0, 8, 5;
    %load/v 8, v0x8d62da0_0, 32;
    %set/v v0x8d61bd8_0, 8, 32;
    %load/v 8, v0x8d62a20_0, 4;
    %set/v v0x8d61b78_0, 8, 4;
    %load/v 8, v0x8d61f38_0, 480;
    %set/v v0x8d619e0_0, 8, 480;
    %load/v 8, v0x8d61fa8_0, 15;
    %set/v v0x8d61a50_0, 8, 15;
    %fork TD_CPU.store_rs\x5B1\x5D.getData, S_0x8d61960;
    %join;
    %load/v 8, v0x8d61b10_0, 32;
    %set/v v0x8d621f8_0, 8, 32;
    %load/v 8, v0x8d61ab0_0, 4;
    %set/v v0x8d62008_0, 8, 4;
    %load/v 8, v0x8d62f18_0, 32;
    %set/v v0x8d61bd8_0, 8, 32;
    %load/v 8, v0x8d629b8_0, 4;
    %set/v v0x8d61b78_0, 8, 4;
    %load/v 8, v0x8d61f38_0, 480;
    %set/v v0x8d619e0_0, 8, 480;
    %load/v 8, v0x8d61fa8_0, 15;
    %set/v v0x8d61a50_0, 8, 15;
    %fork TD_CPU.store_rs\x5B1\x5D.getData, S_0x8d61960;
    %join;
    %load/v 8, v0x8d61b10_0, 32;
    %set/v v0x8d62280_0, 8, 32;
    %load/v 8, v0x8d61ab0_0, 4;
    %set/v v0x8d62068_0, 8, 4;
    %load/v 8, v0x8d628b8_0, 4;
    %mov 12, 0, 1;
    %cmpi/u 8, 4, 5;
    %jmp/0xz  T_108.12, 6;
    %ix/load 1, 13, 0;
    %mov 4, 0, 1;
    %jmp/1 T_108.14, 4;
    %load/x1p 8, v0x8d62968_0, 5;
    %jmp T_108.15;
T_108.14 ;
    %mov 8, 2, 5;
T_108.15 ;
; Save base=8 wid=5 in lookaside.
    %set/v v0x8d62b30_0, 8, 5;
    %load/v 8, v0x8d62e80_0, 32;
    %set/v v0x8d61bd8_0, 8, 32;
    %load/v 8, v0x8d62ae0_0, 4;
    %set/v v0x8d61b78_0, 8, 4;
    %load/v 8, v0x8d61f38_0, 480;
    %set/v v0x8d619e0_0, 8, 480;
    %load/v 8, v0x8d61fa8_0, 15;
    %set/v v0x8d61a50_0, 8, 15;
    %fork TD_CPU.store_rs\x5B1\x5D.getData, S_0x8d61960;
    %join;
    %load/v 8, v0x8d61b10_0, 32;
    %set/v v0x8d622e0_0, 8, 32;
    %load/v 8, v0x8d61ab0_0, 4;
    %set/v v0x8d620b8_0, 8, 4;
    %jmp T_108.13;
T_108.12 ;
    %load/v 8, v0x8d62968_0, 18; Select 18 out of 32 bits
    %mov 26, 0, 14;
    %set/v v0x8d622e0_0, 8, 32;
    %movi 8, 15, 5;
    %set/v v0x8d620b8_0, 8, 4;
T_108.13 ;
    %delay 1, 0;
    %set/v v0x8d62a70_0, 3, 5;
    %set/v v0x8d62ba8_0, 3, 5;
    %set/v v0x8d62b30_0, 3, 5;
    %ix/load 0, 1, 0;
    %assign/v0 v0x8d62cc8_0, 0, 0;
T_108.4 ;
    %end;
    .scope S_0x8cd8d18;
t_47 %join;
T_108.2 ;
T_108.1 ;
    %jmp T_108;
    .thread T_108;
    .scope S_0x8cd8d18;
T_109 ;
    %wait E_0x8c7c8e8;
    %load/v 8, v0x8d62670_0, 1;
    %jmp/0xz  T_109.0, 8;
    %fork t_50, S_0x8cd8f18;
    %jmp t_49;
    .scope S_0x8cd8f18;
t_50 ;
    %set/v v0x8c7b4c0_0, 1, 1;
    %load/v 8, v0x8d62068_0, 4;
    %set/v v0x8d61cd8_0, 8, 4;
    %load/v 8, v0x8d62280_0, 32;
    %set/v v0x8d61d48_0, 8, 32;
    %load/v 8, v0x8d61f38_0, 480;
    %set/v v0x8d61da8_0, 8, 480;
    %load/v 8, v0x8d61fa8_0, 15;
    %set/v v0x8d61eb8_0, 8, 15;
    %load/v 8, v0x8c7b4c0_0, 1;
    %set/v v0x8d61e08_0, 8, 1;
    %fork TD_CPU.store_rs\x5B1\x5D.checkAndGetData, S_0x8d61c58;
    %join;
    %load/v 8, v0x8d61cd8_0, 4;
    %set/v v0x8d62068_0, 8, 4;
    %load/v 8, v0x8d61d48_0, 32;
    %set/v v0x8d62280_0, 8, 32;
    %load/v 8, v0x8d61e08_0, 1;
    %set/v v0x8c7b4c0_0, 8, 1;
    %load/v 8, v0x8d620b8_0, 4;
    %set/v v0x8d61cd8_0, 8, 4;
    %load/v 8, v0x8d622e0_0, 32;
    %set/v v0x8d61d48_0, 8, 32;
    %load/v 8, v0x8d61f38_0, 480;
    %set/v v0x8d61da8_0, 8, 480;
    %load/v 8, v0x8d61fa8_0, 15;
    %set/v v0x8d61eb8_0, 8, 15;
    %load/v 8, v0x8c7b4c0_0, 1;
    %set/v v0x8d61e08_0, 8, 1;
    %fork TD_CPU.store_rs\x5B1\x5D.checkAndGetData, S_0x8d61c58;
    %join;
    %load/v 8, v0x8d61cd8_0, 4;
    %set/v v0x8d620b8_0, 8, 4;
    %load/v 8, v0x8d61d48_0, 32;
    %set/v v0x8d622e0_0, 8, 32;
    %load/v 8, v0x8d61e08_0, 1;
    %set/v v0x8c7b4c0_0, 8, 1;
    %load/v 8, v0x8d62008_0, 4;
    %set/v v0x8d61cd8_0, 8, 4;
    %load/v 8, v0x8d621f8_0, 32;
    %set/v v0x8d61d48_0, 8, 32;
    %load/v 8, v0x8d61f38_0, 480;
    %set/v v0x8d61da8_0, 8, 480;
    %load/v 8, v0x8d61fa8_0, 15;
    %set/v v0x8d61eb8_0, 8, 15;
    %load/v 8, v0x8c7b4c0_0, 1;
    %set/v v0x8d61e08_0, 8, 1;
    %fork TD_CPU.store_rs\x5B1\x5D.checkAndGetData, S_0x8d61c58;
    %join;
    %load/v 8, v0x8d61cd8_0, 4;
    %set/v v0x8d62008_0, 8, 4;
    %load/v 8, v0x8d61d48_0, 32;
    %set/v v0x8d621f8_0, 8, 32;
    %load/v 8, v0x8d61e08_0, 1;
    %set/v v0x8c7b4c0_0, 8, 1;
    %load/v 8, v0x8c7b4c0_0, 1;
    %jmp/0xz  T_109.2, 8;
    %delay 1, 0;
    %load/v 8, v0x8d62280_0, 32;
    %load/v 40, v0x8d622e0_0, 32;
    %sub 8, 40, 32;
    %set/v v0x8d62d50_0, 8, 32;
    %load/v 8, v0x8d621f8_0, 32;
    %set/v v0x8d627c0_0, 8, 32;
    %set/v v0x8d62cc8_0, 1, 1;
    %set/v v0x8d62670_0, 0, 1;
    %delay 5, 0;
    %movi 8, 15, 5;
    %set/v v0x8d62868_0, 8, 4;
    %delay 8, 0;
    %set/v v0x8d62cc8_0, 0, 1;
T_109.2 ;
    %end;
    .scope S_0x8cd8d18;
t_49 %join;
T_109.0 ;
    %jmp T_109;
    .thread T_109;
    .scope S_0x8d83f60;
T_110 ;
    %wait E_0x8d7fc80;
    %load/v 8, v0x8d859c8_0, 1;
    %jmp/0xz  T_110.0, 8;
    %ix/load 0, 15, 0;
    %assign/v0 v0x8d85838_0, 0, 0;
    %ix/load 0, 480, 0;
    %assign/v0 v0x8d857e8_0, 0, 0;
    %ix/load 0, 480, 0;
    %assign/v0 v0x8d85768_0, 0, 0;
    %jmp T_110.1;
T_110.0 ;
    %fork t_52, S_0x8d84f78;
    %jmp t_51;
    .scope S_0x8d84f78;
t_52 ;
    %set/v v0x8d84ff8_0, 0, 480;
    %set/v v0x8d85178_0, 0, 15;
    %set/v v0x8d850c8_0, 0, 32;
T_110.2 ;
    %load/v 8, v0x8d850c8_0, 32;
   %cmpi/u 8, 11, 32;
    %jmp/0xz T_110.3, 5;
    %load/v 8, v0x8d85888_0, 44;
    %set/v v0x8d85488_0, 8, 44;
    %load/v 8, v0x8d850c8_0, 32;
    %set/v v0x8d854f8_0, 8, 32;
    %fork TD_CPU.data_ctrl.readIndex, S_0x8d85408;
    %join;
    %load/v  8, v0x8d85558_0, 4;
    %set/v v0x8d85128_0, 8, 4;
    %load/v 8, v0x8d85128_0, 4;
    %mov 12, 0, 2;
    %cmpi/u 8, 15, 6;
    %mov 8, 4, 1;
    %load/v 9, v0x8d85a40_0, 11;
    %set/v v0x8d853a8_0, 9, 11;
    %load/v 9, v0x8d850c8_0, 32;
    %set/v v0x8d852d8_0, 9, 32;
    %fork TD_CPU.data_ctrl.readValid, S_0x8d85258;
    %join;
    %load/v  9, v0x8d85348_0, 1;
    %inv 9, 1;
    %or 8, 9, 1;
    %jmp/0xz  T_110.4, 8;
    %jmp T_110.5;
T_110.4 ;
    %load/v 488, v0x8d85978_0, 352;
    %set/v v0x8d85638_0, 488, 352;
    %load/v 488, v0x8d850c8_0, 32;
    %set/v v0x8d856a8_0, 488, 32;
    %fork TD_CPU.data_ctrl.readData, S_0x8d855b8;
    %join;
    %load/v  488, v0x8d85708_0, 32;
    %mov 8, 488, 32;
    %mov 40, 0, 448;
    %set/v v0x8d85068_0, 8, 480;
    %vpi_call 6 36 "$display", $realtime, ":controler: %g %g", v0x8d850c8_0, v0x8d85068_0;
    %load/v 8, v0x8d85068_0, 480;
    %load/v 488, v0x8d85128_0, 4;
    %movi 492, 0, 7;
    %muli 488, 32, 11;
    %ix/get 0, 488, 11;
    %shiftl/i0  8, 480;
    %set/v v0x8d85068_0, 8, 480;
    %load/v 8, v0x8d84ff8_0, 480;
    %load/v 488, v0x8d85068_0, 480;
    %or 8, 488, 480;
    %set/v v0x8d84ff8_0, 8, 480;
    %load/v 23, v0x8d85a40_0, 11;
    %set/v v0x8d853a8_0, 23, 11;
    %load/v 23, v0x8d850c8_0, 32;
    %set/v v0x8d852d8_0, 23, 32;
    %fork TD_CPU.data_ctrl.readValid, S_0x8d85258;
    %join;
    %load/v  23, v0x8d85348_0, 1;
    %mov 8, 23, 1;
    %mov 9, 0, 14;
    %set/v v0x8d851d8_0, 8, 15;
    %load/v 8, v0x8d851d8_0, 15;
    %load/v 23, v0x8d85128_0, 4;
    %ix/get 0, 23, 4;
    %shiftl/i0  8, 15;
    %set/v v0x8d851d8_0, 8, 15;
    %load/v 8, v0x8d85178_0, 15;
    %load/v 23, v0x8d851d8_0, 15;
    %or 8, 23, 15;
    %set/v v0x8d85178_0, 8, 15;
T_110.5 ;
    %ix/load 0, 1, 0;
    %load/vp0 8, v0x8d850c8_0, 32;
    %set/v v0x8d850c8_0, 8, 32;
    %jmp T_110.2;
T_110.3 ;
    %load/v 8, v0x8d84ff8_0, 480;
    %set/v v0x8d857e8_0, 8, 480;
    %load/v 8, v0x8d85178_0, 15;
    %set/v v0x8d85838_0, 8, 15;
    %set/v v0x8d84ff8_0, 0, 480;
    %set/v v0x8d850c8_0, 0, 32;
T_110.6 ;
    %load/v 8, v0x8d850c8_0, 32;
   %cmpi/u 8, 2, 32;
    %jmp/0xz T_110.7, 5;
    %load/v 8, v0x8d85888_0, 44;
    %set/v v0x8d85488_0, 8, 44;
    %movi 8, 9, 34;
    %load/v 42, v0x8d850c8_0, 32;
    %mov 74, 0, 2;
    %add 8, 42, 34;
    %set/v v0x8d854f8_0, 8, 32;
    %fork TD_CPU.data_ctrl.readIndex, S_0x8d85408;
    %join;
    %load/v  8, v0x8d85558_0, 4;
    %set/v v0x8d85128_0, 8, 4;
    %load/v 8, v0x8d85128_0, 4;
    %mov 12, 0, 2;
    %cmpi/u 8, 15, 6;
    %jmp/0xz  T_110.8, 4;
    %jmp T_110.9;
T_110.8 ;
    %load/v 488, v0x8d858d8_0, 64;
    %movi 552, 0, 288;
    %set/v v0x8d85638_0, 488, 352;
    %load/v 488, v0x8d850c8_0, 32;
    %set/v v0x8d856a8_0, 488, 32;
    %fork TD_CPU.data_ctrl.readData, S_0x8d855b8;
    %join;
    %load/v  488, v0x8d85708_0, 32;
    %mov 8, 488, 32;
    %mov 40, 0, 448;
    %set/v v0x8d85068_0, 8, 480;
    %load/v 8, v0x8d85068_0, 480;
    %load/v 488, v0x8d85128_0, 4;
    %movi 492, 0, 7;
    %muli 488, 32, 11;
    %ix/get 0, 488, 11;
    %shiftl/i0  8, 480;
    %set/v v0x8d85068_0, 8, 480;
    %load/v 8, v0x8d84ff8_0, 480;
    %load/v 488, v0x8d85068_0, 480;
    %or 8, 488, 480;
    %set/v v0x8d84ff8_0, 8, 480;
T_110.9 ;
    %ix/load 0, 1, 0;
    %load/vp0 8, v0x8d850c8_0, 32;
    %set/v v0x8d850c8_0, 8, 32;
    %jmp T_110.6;
T_110.7 ;
    %load/v 8, v0x8d84ff8_0, 480;
    %set/v v0x8d85768_0, 8, 480;
    %end;
    .scope S_0x8d83f60;
t_51 %join;
T_110.1 ;
    %jmp T_110;
    .thread T_110;
    .scope S_0x8d7e7b0;
T_111 ;
    %fork t_54, S_0x8d7f7a8;
    %jmp t_53;
    .scope S_0x8d7f7a8;
t_54 ;
    %set/v v0x8d7f828_0, 0, 32;
T_111.0 ;
    %load/v 8, v0x8d7f828_0, 32;
   %cmpi/u 8, 1024, 32;
    %jmp/0xz T_111.1, 5;
    %ix/getv 3, v0x8d7f828_0;
   %jmp/1 t_55, 4;
   %ix/load 1, 0, 0;
   %set/av v0x8d81a58, 0, 32;
t_55 ;
    %ix/load 0, 1, 0;
    %load/vp0 8, v0x8d7f828_0, 32;
    %set/v v0x8d7f828_0, 8, 32;
    %jmp T_111.0;
T_111.1 ;
    %vpi_call 9 26 "$readmemb", "code.bin", v0x8d81a58;
    %end;
    .scope S_0x8d7e7b0;
t_53 %join;
    %end;
    .thread T_111;
    .scope S_0x8d7d780;
T_112 ;
    %set/v v0x8d81ba8_0, 0, 1;
    %end;
    .thread T_112;
    .scope S_0x8d7d780;
T_113 ;
    %wait E_0x8c7c8e8;
    %load/v 8, v0x8d81af8_0, 1;
    %jmp/0xz  T_113.0, 8;
    %delay 1, 0;
    %ix/getv 3, v0x8d81dc0_0;
    %load/av 8, v0x8d81ff0, 18;
    %load/v 26, v0x8d81eb0_0, 18;
    %cmp/u 8, 26, 18;
    %jmp/0xz  T_113.2, 6;
    %ix/load 0, 1, 0;
    %assign/v0 v0x8d81ba8_0, 0, 1;
    %load/v 8, v0x8d81e10_0, 32;
    %ix/load 0, 32, 0;
    %assign/v0 v0x8d81f50_0, 0, 8;
    %jmp T_113.3;
T_113.2 ;
    %ix/load 0, 1, 0;
    %assign/v0 v0x8d81ba8_0, 0, 0;
    %load/v 8, v0x8d81eb0_0, 18;
    %ix/getv 3, v0x8d81dc0_0;
    %jmp/1 t_56, 4;
    %ix/load 0, 18, 0; word width
    %ix/load 1, 0, 0; part off
    %assign/av v0x8d81ff0, 0, 8;
t_56 ;
    %load/v 8, v0x8d81e60_0, 512;
    %ix/getv 3, v0x8d81dc0_0;
    %jmp/1 t_57, 4;
    %ix/load 0, 512, 0; word width
    %ix/load 1, 0, 0; part off
    %assign/av v0x8d81aa8, 0, 8;
t_57 ;
    %load/v 8, v0x8d81e10_0, 32;
    %ix/load 0, 32, 0;
    %assign/v0 v0x8d81f50_0, 0, 8;
T_113.3 ;
T_113.0 ;
    %jmp T_113;
    .thread T_113;
    .scope S_0x8d7bf80;
T_114 ;
    %set/v v0x8d83f10_0, 0, 1;
    %end;
    .thread T_114;
    .scope S_0x8d7bf80;
T_115 ;
    %set/v v0x8d83d68_0, 0, 1;
    %end;
    .thread T_115;
    .scope S_0x8d7bf80;
T_116 ;
    %set/v v0x8d838b8_0, 3, 5;
    %end;
    .thread T_116;
    .scope S_0x8d7bf80;
T_117 ;
    %set/v v0x8d83840_0, 3, 5;
    %end;
    .thread T_117;
    .scope S_0x8d7bf80;
T_118 ;
    %set/v v0x8d83e60_0, 0, 1;
    %end;
    .thread T_118;
    .scope S_0x8d7bf80;
T_119 ;
    %set/v v0x8d83ec0_0, 0, 1;
    %end;
    .thread T_119;
    .scope S_0x8d7bf80;
T_120 ;
    %set/v v0x8d83ab0_0, 1, 11;
    %end;
    .thread T_120;
    .scope S_0x8d7bf80;
T_121 ;
    %set/v v0x8d83710_0, 0, 4;
    %end;
    .thread T_121;
    .scope S_0x8d7bf80;
T_122 ;
    %set/v v0x8d83c28_0, 0, 4;
    %end;
    .thread T_122;
    .scope S_0x8d7bf80;
T_123 ;
    %set/v v0x8d834b0_0, 0, 4;
    %end;
    .thread T_123;
    .scope S_0x8d7bf80;
T_124 ;
    %set/v v0x8d83460_0, 0, 1;
    %end;
    .thread T_124;
    .scope S_0x8d7bf80;
T_125 ;
    %set/v v0x8d83658_0, 0, 1;
    %end;
    .thread T_125;
    .scope S_0x8d7bf80;
T_126 ;
    %wait E_0x8d7cea0;
    %load/v 8, v0x8d83b40_0, 1;
    %jmp/0xz  T_126.0, 8;
    %fork t_59, S_0x8d7d690;
    %jmp t_58;
    .scope S_0x8d7d690;
t_59 ;
    %set/v v0x8d7d710_0, 0, 32;
T_126.2 ;
    %load/v 8, v0x8d7d710_0, 32;
   %cmpi/u 8, 15, 32;
    %jmp/0xz T_126.3, 5;
    %ix/getv 3, v0x8d7d710_0;
   %jmp/1 t_60, 4;
   %ix/load 1, 0, 0;
   %set/av v0x8d83318, 0, 1;
t_60 ;
    %ix/getv 3, v0x8d7d710_0;
   %jmp/1 t_61, 4;
   %ix/load 1, 0, 0;
   %set/av v0x8d830f0, 0, 1;
t_61 ;
    %ix/load 0, 1, 0;
    %load/vp0 8, v0x8d7d710_0, 32;
    %set/v v0x8d7d710_0, 8, 32;
    %jmp T_126.2;
T_126.3 ;
    %set/v v0x8d83908_0, 0, 32;
    %set/v v0x8d83f10_0, 0, 1;
    %set/v v0x8d83d68_0, 0, 1;
    %set/v v0x8d83e60_0, 0, 1;
    %set/v v0x8d83ec0_0, 0, 1;
    %set/v v0x8d83710_0, 0, 4;
    %set/v v0x8d83c28_0, 0, 4;
    %set/v v0x8d834b0_0, 0, 4;
    %set/v v0x8d82f40_0, 1, 4;
    %set/v v0x8d838b8_0, 3, 5;
    %set/v v0x8d83840_0, 3, 5;
    %set/v v0x8d83550_0, 0, 32;
    %set/v v0x8d83658_0, 0, 1;
    %set/v v0x8d83ab0_0, 1, 11;
    %delay 1, 0;
    %set/v v0x8d83ab0_0, 0, 11;
    %end;
    .scope S_0x8d7bf80;
t_58 %join;
    %jmp T_126.1;
T_126.0 ;
    %load/v 8, v0x8d83710_0, 4;
    %set/v v0x8d82440_0, 8, 4;
    %load/v 8, v0x8d834b0_0, 4;
    %set/v v0x8d823d0_0, 8, 4;
    %fork TD_CPU.RB.notFull, S_0x8d82350;
    %join;
    %load/v  8, v0x8d824a0_0, 1;
    %jmp/0xz  T_126.4, 8;
    %fork t_63, S_0x8d7d590;
    %jmp t_62;
    .scope S_0x8d7d590;
t_63 ;
    %set/v v0x8d83460_0, 1, 1;
    %delay 5, 0;
    %load/v 8, v0x8d836a8_0, 1;
    %jmp/0xz  T_126.6, 8;
    %jmp T_126.7;
T_126.6 ;
    %delay 990, 0;
T_126.7 ;
    %ix/load 1, 28, 0;
    %mov 4, 0, 1;
    %jmp/1 T_126.8, 4;
    %load/x1p 13, v0x8d837f0_0, 4;
    %jmp T_126.9;
T_126.8 ;
    %mov 13, 2, 4;
T_126.9 ;
    %mov 8, 13, 4; Move signal select into place
    %mov 12, 0, 1;
    %cmpi/u 8, 11, 5;
    %jmp/0xz  T_126.10, 6;
    %load/v 8, v0x8d83908_0, 32;
    %load/v 40, v0x8d837f0_0, 28; Select 28 out of 32 bits
    %mov 68, 0, 4;
    %add 8, 40, 32;
    %set/v v0x8d83908_0, 8, 32;
    %jmp T_126.11;
T_126.10 ;
    %fork t_65, S_0x8d7d610;
    %jmp t_64;
    .scope S_0x8d7d610;
t_65 ;
    %load/v 8, v0x8d834b0_0, 4;
    %set/v v0x8d825f0_0, 8, 4;
    %fork TD_CPU.RB.inc, S_0x8d82500;
    %join;
    %load/v  8, v0x8d82580_0, 4;
    %set/v v0x8d834b0_0, 8, 4;
    %ix/getv 3, v0x8d834b0_0;
   %jmp/1 t_66, 4;
   %ix/load 1, 0, 0;
   %set/av v0x8d83318, 1, 1;
t_66 ;
    %load/v 8, v0x8d837f0_0, 32;
    %ix/getv 3, v0x8d834b0_0;
   %jmp/1 t_67, 4;
   %ix/load 1, 0, 0;
   %set/av v0x8d83278, 8, 32;
t_67 ;
    %load/v 8, v0x8d83908_0, 32;
    %mov 40, 0, 1;
    %addi 8, 1, 33;
    %set/v v0x8d83908_0, 8, 32;
    %end;
    .scope S_0x8d7d590;
t_64 %join;
T_126.11 ;
    %end;
    .scope S_0x8d7bf80;
t_62 %join;
T_126.4 ;
T_126.1 ;
    %jmp T_126;
    .thread T_126;
    .scope S_0x8d7bf80;
T_127 ;
    %wait E_0x8c7c8e8;
    %fork t_69, S_0x8d7d350;
    %jmp t_68;
    .scope S_0x8d7d350;
t_69 ;
    %load/v 9, v0x8d83c28_0, 4;
    %set/v v0x8d825f0_0, 9, 4;
    %fork TD_CPU.RB.inc, S_0x8d82500;
    %join;
    %load/v  9, v0x8d82580_0, 4;
    %ix/get 3, 9, 4;
    %load/av 8, v0x8d83318, 1;
    %jmp/0xz  T_127.0, 8;
    %fork t_71, S_0x8d7d3d0;
    %jmp t_70;
    .scope S_0x8d7d3d0;
t_71 ;
    %load/v 40, v0x8d83c28_0, 4;
    %set/v v0x8d825f0_0, 40, 4;
    %fork TD_CPU.RB.inc, S_0x8d82500;
    %join;
    %load/v  40, v0x8d82580_0, 4;
    %ix/get 3, 40, 4;
    %load/av 8, v0x8d83278, 32;
    %set/v v0x8d7d520_0, 8, 32;
    %ix/load 1, 28, 0;
    %mov 4, 0, 1;
    %jmp/1 T_127.2, 4;
    %load/x1p 8, v0x8d7d520_0, 4;
    %jmp T_127.3;
T_127.2 ;
    %mov 8, 2, 4;
T_127.3 ;
; Save base=8 wid=4 in lookaside.
    %set/v v0x8d83988_0, 8, 4;
    %load/v 8, v0x8d83988_0, 4;
    %set/v v0x8d82b00_0, 8, 4;
    %fork TD_CPU.RB.getFuStartAndNum, S_0x8d82950;
    %join;
    %load/v 8, v0x8d82aa0_0, 4;
    %set/v v0x8d7d4c0_0, 8, 4;
    %load/v 8, v0x8d829d0_0, 4;
    %set/v v0x8d7d450_0, 8, 4;
    %set/v v0x8d835f8_0, 0, 1;
    %load/v 8, v0x8d7d4c0_0, 4;
    %set/v v0x8d7d4c0_0, 8, 4;
T_127.4 ;
    %load/v 8, v0x8d7d4c0_0, 4;
    %load/v 12, v0x8d7d450_0, 4;
    %cmp/u 8, 12, 4;
    %or 5, 4, 1;
    %mov 8, 5, 1;
    %load/v 9, v0x8d835f8_0, 1;
    %inv 9, 1;
    %and 8, 9, 1;
    %jmp/0xz T_127.5, 8;
    %ix/getv 1, v0x8d7d4c0_0;
    %jmp/1 T_127.6, 4;
    %load/x1p 8, v0x8d83500_0, 1;
    %jmp T_127.7;
T_127.6 ;
    %mov 8, 2, 1;
T_127.7 ;
; Save base=8 wid=1 in lookaside.
    %inv 8, 1;
    %jmp/0xz  T_127.8, 8;
    %load/v 8, v0x8d83c28_0, 4;
    %set/v v0x8d825f0_0, 8, 4;
    %fork TD_CPU.RB.inc, S_0x8d82500;
    %join;
    %load/v  8, v0x8d82580_0, 4;
    %set/v v0x8d83c28_0, 8, 4;
    %load/v 8, v0x8d7d520_0, 32;
    %set/v v0x8d82f90_0, 8, 32;
    %load/v 8, v0x8d7d4c0_0, 4;
    %set/v v0x8d82f40_0, 8, 4;
    %load/v 8, v0x8d83c28_0, 4;
    %set/v v0x8d82ed8_0, 8, 4;
    %set/v v0x8d835f8_0, 1, 1;
    %ix/getv 3, v0x8d83c28_0;
   %jmp/1 t_72, 4;
   %ix/load 1, 0, 0;
   %set/av v0x8d830f0, 0, 1;
t_72 ;
    %load/v 8, v0x8d7d4c0_0, 4;
    %ix/getv 3, v0x8d83c28_0;
   %jmp/1 t_73, 4;
   %ix/load 1, 0, 0;
   %set/av v0x8d83140, 8, 4;
t_73 ;
    %vpi_call 7 128 "$display", $realtime, "issuing to %d: op = %h, %b", v0x8d7d4c0_0, v0x8d83988_0, v0x8d7d520_0;
    %load/v 8, v0x8d83988_0, 4;
    %mov 12, 0, 1;
    %cmpi/u 8, 4, 5;
    %mov 8, 6, 1;
    %load/v 9, v0x8d83988_0, 4;
    %mov 13, 0, 1;
    %cmpi/u 9, 9, 5;
    %or 8, 6, 1;
    %jmp/0xz  T_127.10, 8;
    %ix/getv 3, v0x8d83c28_0;
   %jmp/1 t_74, 4;
   %ix/load 1, 0, 0;
   %set/av v0x8d832c8, 1, 1;
t_74 ;
    %jmp T_127.11;
T_127.10 ;
    %load/v 8, v0x8d83988_0, 4;
    %mov 12, 0, 1;
    %cmpi/u 8, 13, 5;
    %jmp/0xz  T_127.12, 6;
    %ix/getv 3, v0x8d83c28_0;
   %jmp/1 t_75, 4;
   %ix/load 1, 0, 0;
   %set/av v0x8d832c8, 0, 1;
t_75 ;
    %jmp T_127.13;
T_127.12 ;
    %ix/getv 3, v0x8d83c28_0;
   %jmp/1 t_76, 4;
   %ix/load 1, 0, 0;
   %set/av v0x8d832c8, 0, 1;
t_76 ;
    %load/v 8, v0x8d7d520_0, 32;
    %set/v v0x8d82740_0, 8, 32;
    %fork TD_CPU.RB.getRdest, S_0x8d82650;
    %join;
    %load/v  8, v0x8d826d0_0, 5;
    %ix/getv 3, v0x8d83c28_0;
   %jmp/1 t_77, 4;
   %ix/load 1, 0, 0;
   %set/av v0x8d83000, 8, 5;
t_77 ;
T_127.13 ;
T_127.11 ;
T_127.8 ;
    %load/v 8, v0x8d7d4c0_0, 4;
    %mov 12, 0, 28;
    %addi 8, 1, 32;
    %set/v v0x8d7d4c0_0, 8, 4;
    %jmp T_127.4;
T_127.5 ;
    %load/v 8, v0x8d835f8_0, 1;
    %inv 8, 1;
    %jmp/0xz  T_127.14, 8;
    %set/v v0x8d83e60_0, 0, 1;
    %set/v v0x8d82f40_0, 1, 4;
    %jmp T_127.15;
T_127.14 ;
    %load/v 8, v0x8d83988_0, 4;
    %mov 12, 0, 1;
    %cmpi/u 8, 9, 5;
    %inv 4, 1;
    %mov 8, 4, 1;
    %load/v 9, v0x8d83988_0, 4;
    %mov 13, 0, 1;
    %cmpi/u 9, 4, 5;
    %inv 4, 1;
    %mov 9, 4, 1;
    %and 8, 9, 1;
    %load/v 9, v0x8d83988_0, 4;
    %mov 13, 0, 1;
    %cmpi/u 9, 13, 5;
    %inv 4, 1;
    %mov 9, 4, 1;
    %and 8, 9, 1;
    %jmp/0xz  T_127.16, 8;
    %ix/getv 3, v0x8d83c28_0;
    %load/av 8, v0x8d83278, 32;
    %set/v v0x8d82740_0, 8, 32;
    %fork TD_CPU.RB.getRdest, S_0x8d82650;
    %join;
    %load/v  8, v0x8d826d0_0, 5;
    %set/v v0x8d833b0_0, 8, 5;
    %set/v v0x8d83e60_0, 1, 1;
    %load/v 8, v0x8d83c28_0, 4;
    %set/v v0x8d83190_0, 8, 4;
    %jmp T_127.17;
T_127.16 ;
    %set/v v0x8d83e60_0, 0, 1;
T_127.17 ;
T_127.15 ;
    %end;
    .scope S_0x8d7d350;
t_70 %join;
    %jmp T_127.1;
T_127.0 ;
    %set/v v0x8d82f40_0, 1, 4;
    %set/v v0x8d83e60_0, 0, 1;
T_127.1 ;
    %end;
    .scope S_0x8d7bf80;
t_68 %join;
    %jmp T_127;
    .thread T_127;
    .scope S_0x8d7bf80;
T_128 ;
    %wait E_0x8d7c418;
    %fork t_79, S_0x8d7d0d0;
    %jmp t_78;
    .scope S_0x8d7d0d0;
t_79 ;
    %set/v v0x8d7d1d0_0, 0, 1;
    %delay 1, 0;
    %load/v 8, v0x8d83710_0, 4;
    %mov 12, 0, 28;
    %set/v v0x8d7d240_0, 8, 32;
T_128.0 ;
    %load/v 8, v0x8d7d240_0, 32;
    %load/v 72, v0x8d83c28_0, 4;
    %set/v v0x8d825f0_0, 72, 4;
    %fork TD_CPU.RB.inc, S_0x8d82500;
    %join;
    %load/v  72, v0x8d82580_0, 4;
    %mov 40, 72, 4;
    %mov 44, 0, 28;
    %cmp/u 8, 40, 32;
    %inv 4, 1;
    %jmp/0xz T_128.1, 4;
    %load/v 8, v0x8d82e88_0, 15;
    %set/v v0x8d820c0_0, 8, 15;
    %load/v 8, v0x8d7d240_0, 32;
    %set/v v0x8d82110_0, 8, 4;
    %fork TD_CPU.RB.readValidBus, S_0x8d82040;
    %join;
    %load/v  8, v0x8d82160_0, 1;
    %jmp/0xz  T_128.2, 8;
    %movi 8, 28, 6;
    %ix/getv 3, v0x8d7d240_0;
    %jmp/1 T_128.4, 4;
    %ix/get/s 0, 8, 6;
T_128.4 ;
    %load/avx.p 8, v0x8d83278, 0;
    %load/avx.p 9, v0x8d83278, 0;
    %load/avx.p 10, v0x8d83278, 0;
    %load/avx.p 11, v0x8d83278, 0;
; Save base=8 wid=4 in lookaside.
    %set/v v0x8d7d300_0, 8, 4;
    %load/v 8, v0x8d82e38_0, 480;
    %set/v v0x8d82230_0, 8, 480;
    %load/v 8, v0x8d7d240_0, 32;
    %set/v v0x8d82290_0, 8, 4;
    %fork TD_CPU.RB.readDataBus, S_0x8d821b0;
    %join;
    %load/v  8, v0x8d822f0_0, 32;
    %ix/getv 3, v0x8d7d240_0;
   %jmp/1 t_80, 4;
   %ix/load 1, 0, 0;
   %set/av v0x8d830a0, 8, 32;
t_80 ;
    %ix/getv 3, v0x8d7d240_0;
   %jmp/1 t_81, 4;
   %ix/load 1, 0, 0;
   %set/av v0x8d830f0, 1, 1;
t_81 ;
    %ix/getv 3, v0x8d7d240_0;
    %load/av 8, v0x8d832c8, 1;
    %load/v 9, v0x8d7d300_0, 4;
    %mov 13, 0, 1;
    %cmpi/u 9, 13, 5;
    %or 8, 4, 1;
    %jmp/0xz  T_128.5, 8;
    %load/v 8, v0x8d82dc8_0, 480;
    %set/v v0x8d82230_0, 8, 480;
    %load/v 8, v0x8d7d240_0, 32;
    %set/v v0x8d82290_0, 8, 4;
    %fork TD_CPU.RB.readDataBus, S_0x8d821b0;
    %join;
    %load/v  8, v0x8d822f0_0, 32;
    %ix/getv 3, v0x8d7d240_0;
   %jmp/1 t_82, 4;
   %ix/load 1, 0, 0;
   %set/av v0x8d83050, 8, 32;
t_82 ;
T_128.5 ;
    %load/v 8, v0x8d7d300_0, 4;
    %mov 12, 0, 1;
    %cmpi/u 8, 13, 5;
    %jmp/0xz  T_128.7, 4;
    %set/v v0x8d7d1d0_0, 1, 1;
    %load/v 8, v0x8d7d240_0, 32;
    %set/v v0x8d7d2a0_0, 8, 4;
T_128.7 ;
T_128.2 ;
    %load/v 8, v0x8d7d240_0, 32;
    %set/v v0x8d825f0_0, 8, 4;
    %fork TD_CPU.RB.inc, S_0x8d82500;
    %join;
    %load/v  8, v0x8d82580_0, 4;
    %set/v v0x8d7d240_0, 8, 4;
    %jmp T_128.0;
T_128.1 ;
    %load/v 8, v0x8d7d1d0_0, 1;
    %jmp/0xz  T_128.9, 8;
    %fork t_84, S_0x8d7d150;
    %jmp t_83;
    .scope S_0x8d7d150;
t_84 ;
    %ix/getv 3, v0x8d7d2a0_0;
    %load/av 8, v0x8d830a0, 32;
    %nor/r 8, 8, 32;
    %jmp/0xz  T_128.11, 8;
    %jmp T_128.12;
T_128.11 ;
    %load/v 8, v0x8d82dc8_0, 480;
    %set/v v0x8d83908_0, 8, 32;
    %load/v 8, v0x8d7d2a0_0, 4;
    %mov 12, 0, 28;
    %set/v v0x8d7d240_0, 8, 32;
T_128.13 ;
    %load/v 8, v0x8d7d240_0, 32;
    %load/v 72, v0x8d83c28_0, 4;
    %set/v v0x8d825f0_0, 72, 4;
    %fork TD_CPU.RB.inc, S_0x8d82500;
    %join;
    %load/v  72, v0x8d82580_0, 4;
    %mov 40, 72, 4;
    %mov 44, 0, 28;
    %cmp/u 8, 40, 32;
    %inv 4, 1;
    %jmp/0xz T_128.14, 4;
    %load/v 8, v0x8d83ab0_0, 11;
    %movi 19, 1, 11;
    %ix/getv 3, v0x8d7d240_0;
    %load/av 30, v0x8d83140, 4;
    %ix/get 0, 30, 4;
    %shiftl/i0  19, 11;
    %or 8, 19, 11;
    %set/v v0x8d83ab0_0, 8, 11;
    %ix/getv 3, v0x8d7d240_0;
   %jmp/1 t_85, 4;
   %ix/load 1, 0, 0;
   %set/av v0x8d83318, 0, 1;
t_85 ;
    %load/v 8, v0x8d83c28_0, 4;
    %set/v v0x8d825f0_0, 8, 4;
    %fork TD_CPU.RB.inc, S_0x8d82500;
    %join;
    %load/v  8, v0x8d82580_0, 4;
    %set/v v0x8d7d240_0, 8, 4;
    %jmp T_128.13;
T_128.14 ;
    %load/v 8, v0x8d7d2a0_0, 4;
    %set/v v0x8d828f0_0, 8, 4;
    %fork TD_CPU.RB.dec, S_0x8d82800;
    %join;
    %load/v  8, v0x8d82880_0, 4;
    %set/v v0x8d7d2a0_0, 8, 4;
    %load/v 8, v0x8d7d2a0_0, 4;
    %set/v v0x8d83c28_0, 8, 4;
    %load/v 8, v0x8d7d2a0_0, 4;
    %set/v v0x8d834b0_0, 8, 4;
    %delay 1, 0;
    %set/v v0x8d83ab0_0, 0, 11;
T_128.12 ;
    %end;
    .scope S_0x8d7d0d0;
t_83 %join;
T_128.9 ;
    %end;
    .scope S_0x8d7bf80;
t_78 %join;
    %jmp T_128;
    .thread T_128;
    .scope S_0x8d7bf80;
T_129 ;
    %wait E_0x8c7c8e8;
    %fork t_87, S_0x8d7cf50;
    %jmp t_86;
    .scope S_0x8d7cf50;
t_87 ;
    %load/v 9, v0x8d83710_0, 4;
    %set/v v0x8d825f0_0, 9, 4;
    %fork TD_CPU.RB.inc, S_0x8d82500;
    %join;
    %load/v  9, v0x8d82580_0, 4;
    %ix/get 3, 9, 4;
    %load/av 8, v0x8d83318, 1;
    %load/v 10, v0x8d83710_0, 4;
    %set/v v0x8d825f0_0, 10, 4;
    %fork TD_CPU.RB.inc, S_0x8d82500;
    %join;
    %load/v  10, v0x8d82580_0, 4;
    %ix/get 3, 10, 4;
    %load/av 9, v0x8d830f0, 1;
    %and 8, 9, 1;
    %jmp/0xz  T_129.0, 8;
    %load/v 8, v0x8d83710_0, 4;
    %set/v v0x8d825f0_0, 8, 4;
    %fork TD_CPU.RB.inc, S_0x8d82500;
    %join;
    %load/v  8, v0x8d82580_0, 4;
    %set/v v0x8d83710_0, 8, 4;
    %movi 13, 28, 6;
    %ix/getv 3, v0x8d83710_0;
    %jmp/1 T_129.2, 4;
    %ix/get/s 0, 13, 6;
T_129.2 ;
    %load/avx.p 13, v0x8d83278, 0;
    %load/avx.p 14, v0x8d83278, 0;
    %load/avx.p 15, v0x8d83278, 0;
    %load/avx.p 16, v0x8d83278, 0;
    %mov 8, 13, 4; Move signal select into place
    %mov 12, 0, 1;
    %cmpi/u 8, 13, 5;
    %jmp/0xz  T_129.3, 4;
    %ix/load 0, 1, 0;
    %assign/v0 v0x8d83d68_0, 0, 0;
    %ix/load 0, 1, 0;
    %assign/v0 v0x8d83f10_0, 0, 0;
    %ix/load 0, 1, 0;
    %assign/v0 v0x8d83ec0_0, 0, 0;
    %jmp T_129.4;
T_129.3 ;
    %ix/getv 3, v0x8d83710_0;
    %load/av 8, v0x8d832c8, 1;
    %inv 8, 1;
    %jmp/0xz  T_129.5, 8;
    %fork t_89, S_0x8d7d050;
    %jmp t_88;
    .scope S_0x8d7d050;
t_89 ;
    %set/v v0x8d83d68_0, 0, 1;
    %set/v v0x8d83f10_0, 1, 1;
    %ix/getv 3, v0x8d83710_0;
    %load/av 8, v0x8d830a0, 32;
    %set/v v0x8d83e10_0, 8, 32;
    %ix/getv 3, v0x8d83710_0;
    %load/av 8, v0x8d83000, 5;
    %set/v v0x8d84070_0, 8, 5;
    %set/v v0x8d83ec0_0, 1, 1;
    %movi 8, 15, 5;
    %set/v v0x8d83218_0, 8, 4;
    %ix/getv 3, v0x8d83710_0;
    %load/av 8, v0x8d83000, 5;
    %set/v v0x8d83410_0, 8, 5;
    %end;
    .scope S_0x8d7cf50;
t_88 %join;
    %jmp T_129.6;
T_129.5 ;
    %fork t_91, S_0x8d7cfd0;
    %jmp t_90;
    .scope S_0x8d7cfd0;
t_91 ;
    %set/v v0x8d83f10_0, 0, 1;
    %set/v v0x8d83ec0_0, 0, 1;
    %load/v 8, v0x8d83658_0, 1;
    %load/v 9, v0x8d83550_0, 32;
   %cmpi/u 9, 100, 32;
    %mov 9, 5, 1;
    %and 8, 9, 1;
    %jmp/0xz  T_129.7, 8;
    %movi 8, 100, 37;
    %load/v 45, v0x8d83550_0, 32;
    %movi 77, 0, 5;
    %sub 8, 45, 37;
    %muli 8, 10, 37;
    %ix/get 0, 8, 37;
    %delayx 0;
T_129.7 ;
    %set/v v0x8d83550_0, 0, 32;
    %set/v v0x8d83658_0, 0, 1;
    %set/v v0x8d83d68_0, 1, 1;
    %ix/getv 3, v0x8d83710_0;
    %load/av 8, v0x8d830a0, 32;
    %set/v v0x8d83c78_0, 8, 32;
    %ix/getv 3, v0x8d83710_0;
    %load/av 8, v0x8d83050, 32;
    %set/v v0x8d84020_0, 8, 32;
    %delay 6, 0;
    %load/v 8, v0x8d83780_0, 1;
    %inv 8, 1;
    %jmp/0xz  T_129.9, 8;
    %movi 8, 1, 32;
    %set/v v0x8d83550_0, 8, 32;
    %set/v v0x8d83658_0, 1, 1;
T_129.9 ;
    %end;
    .scope S_0x8d7cf50;
t_90 %join;
T_129.6 ;
T_129.4 ;
    %jmp T_129.1;
T_129.0 ;
    %ix/load 0, 1, 0;
    %assign/v0 v0x8d83d68_0, 0, 0;
    %ix/load 0, 1, 0;
    %assign/v0 v0x8d83f10_0, 0, 0;
    %ix/load 0, 1, 0;
    %assign/v0 v0x8d83ec0_0, 0, 0;
T_129.1 ;
    %end;
    .scope S_0x8d7bf80;
t_86 %join;
    %jmp T_129;
    .thread T_129;
    .scope S_0x8d7bf80;
T_130 ;
    %wait E_0x8c7c8e8;
    %fork t_93, S_0x8d7ced0;
    %jmp t_92;
    .scope S_0x8d7ced0;
t_93 ;
    %delay 1, 0;
    %load/v 8, v0x8d83ec0_0, 1;
    %load/v 9, v0x8d83e60_0, 1;
    %and 8, 9, 1;
    %load/v 9, v0x8d833b0_0, 5;
    %load/v 14, v0x8d83410_0, 5;
    %cmp/u 9, 14, 5;
    %mov 9, 6, 1;
    %and 8, 9, 1;
    %jmp/0xz  T_130.0, 8;
    %set/v v0x8d83ec0_0, 0, 1;
T_130.0 ;
    %end;
    .scope S_0x8d7bf80;
t_92 %join;
    %jmp T_130;
    .thread T_130;
    .scope S_0x8d3d850;
T_131 ;
    %delay 5, 0;
    %set/v v0x8d892c0_0, 0, 1;
    %delay 5, 0;
    %set/v v0x8d892c0_0, 1, 1;
    %jmp T_131;
    .thread T_131;
    .scope S_0x8d3d850;
T_132 ;
    %fork t_95, S_0x8d7bf00;
    %jmp t_94;
    .scope S_0x8d7bf00;
t_95 ;
    %vpi_call 2 114 "$dumpfile", "CPU2.vcd";
    %vpi_call 2 115 "$dumpvars";
    %vpi_call 2 123 "$monitor", $realtime, ": V:%b\012D:1:%g, 2:%g, 3:%g\012addr:1:%g, 2:%g, 3:%g", v0x8d88ff0_0, &PV<v0x8d88fa0_0, 32, 32>, &PV<v0x8d88fa0_0, 64, 32>, &PV<v0x8d88fa0_0, 96, 32>, &PV<v0x8d88f18_0, 32, 32>, &PV<v0x8d88f18_0, 64, 32>, &PV<v0x8d88f18_0, 96, 32>;
    %set/v v0x8d896f8_0, 1, 1;
    %delay 10, 0;
    %set/v v0x8d896f8_0, 0, 1;
    %delay 1200, 0;
    %vpi_call 2 164 "$finish";
    %end;
    .scope S_0x8d3d850;
t_94 %join;
    %jmp T_132;
    .thread T_132;
# The file index is used to find the file name in the following table.
:file_names 13;
    "N/A";
    "<interactive>";
    "CPU.v";
    "./parameters.v";
    "./reg_status.v";
    "./reg_file_RX.v";
    "./CDB_data_controller.v";
    "./reorder_buffer.v";
    "./inst_cache.v";
    "./inst_memory.v";
    "./ALU_RS.v";
    "./store_RS.v";
    "./def_param.v";
