#! /usr/bin/vvp
:ivl_version "0.9.6 " "(v0_9_6)";
:vpi_time_precision - 10;
:vpi_module "system";
:vpi_module "v2005_math";
:vpi_module "va_math";
S_0x8d4f4b8 .scope module, "CPU" "CPU" 2 9;
 .timescale -9 -10;
P_0x8d77cdc .param/l "ADDER_NUM" 3 36, +C4<011>;
P_0x8d77cf0 .param/l "ALU_ADD" 3 10, C4<0000>;
P_0x8d77d04 .param/l "ALU_MUL" 3 12, C4<0010>;
P_0x8d77d18 .param/l "ALU_SUB" 3 11, C4<0001>;
P_0x8d77d2c .param/l "BLOCK_SIZE" 3 6, +C4<010000>;
P_0x8d77d40 .param/l "CACHE_SIZE" 3 7, +C4<010000000000>;
P_0x8d77d54 .param/l "FU_INDEX" 3 41, +C4<0100>;
P_0x8d77d68 .param/l "FU_NUM" 3 40, +C4<01010>;
P_0x8d77d7c .param/l "IMM_START" 3 19, +C4<010001>;
P_0x8d77d90 .param/l "INST_ADD" 3 20, C4<0000>;
P_0x8d77da4 .param/l "INST_ADDI" 3 25, C4<0101>;
P_0x8d77db8 .param/l "INST_BGE" 3 33, C4<1101>;
P_0x8d77dcc .param/l "INST_J" 3 31, C4<1011>;
P_0x8d77de0 .param/l "INST_JR" 3 32, C4<1100>;
P_0x8d77df4 .param/l "INST_LI" 3 30, C4<1010>;
P_0x8d77e08 .param/l "INST_LW" 3 23, C4<0011>;
P_0x8d77e1c .param/l "INST_LWRR" 3 28, C4<1000>;
P_0x8d77e30 .param/l "INST_MUL" 3 22, C4<0010>;
P_0x8d77e44 .param/l "INST_MULI" 3 27, C4<0111>;
P_0x8d77e58 .param/l "INST_SUB" 3 21, C4<0001>;
P_0x8d77e6c .param/l "INST_SUBI" 3 26, C4<0110>;
P_0x8d77e80 .param/l "INST_SW" 3 24, C4<0100>;
P_0x8d77e94 .param/l "INST_SWRR" 3 29, C4<1001>;
P_0x8d77ea8 .param/l "LOADER_NUM" 3 38, +C4<011>;
P_0x8d77ebc .param/l "MEM_SIZE" 3 2, +C4<010000000000>;
P_0x8d77ed0 .param/l "MULTER_NUM" 3 37, +C4<010>;
P_0x8d77ee4 .param/l "MUL_STALL" 3 43, +C4<011>;
P_0x8d77ef8 .param/l "NULL" 3 49, +C4<01111>;
P_0x8d77f0c .param/l "OPCODE_WIDTH" 3 15, +C4<0100>;
P_0x8d77f20 .param/l "RB_INDEX" 3 47, +C4<0100>;
P_0x8d77f34 .param/l "RB_SIZE" 3 46, +C4<01111>;
P_0x8d77f48 .param/l "RD_START" 3 17, +C4<010110>;
P_0x8d77f5c .param/l "READY" 3 48, +C4<01111>;
P_0x8d77f70 .param/l "REG_FILE_SIZE" 3 4, +C4<0100000>;
P_0x8d77f84 .param/l "REG_INDEX" 3 3, +C4<0101>;
P_0x8d77f98 .param/l "RS_START" 3 16, +C4<011011>;
P_0x8d77fac .param/l "RT_START" 3 18, +C4<010001>;
P_0x8d77fc0 .param/l "STORER_NUM" 3 39, +C4<010>;
P_0x8d77fd4 .param/l "TAG_SIZE" 3 8, +C4<010010>;
P_0x8d77fe8 .param/l "WORD_SIZE" 3 1, +C4<0100000>;
L_0x8dead88 .functor BUFZ 32, L_0x8deae70, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>;
v0x8de7130_0 .net "CDB_data_addr", 479 0, v0x8de41e8_0; 1 drivers
v0x8de7190_0 .net "CDB_data_data", 479 0, v0x8de4258_0; 1 drivers
v0x8de71e0_0 .net "CDB_data_valid", 14 0, v0x8de42a8_0; 1 drivers
v0x8de7230_0 .net "CDB_inst_RBindex", 3 0, v0x8de74d0_0; 1 drivers
v0x8de7280_0 .net "CDB_inst_fu", 3 0, v0x8de7610_0; 1 drivers
v0x8de72d0_0 .net "CDB_inst_inst", 31 0, L_0x8dead88; 1 drivers
RS_0x8dacb8c/0/0 .resolv tri, L_0x8de86c8, L_0x8de8a48, L_0x8de8dc8, L_0x8de9160;
RS_0x8dacb8c/0/4 .resolv tri, L_0x8de0aa8, L_0x8de9bb8, L_0x8de9f38, L_0x8dea2d0;
RS_0x8dacb8c/0/8 .resolv tri, L_0x8dea7c0, L_0x8deac50, C4<zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz>, C4<zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz>;
RS_0x8dacb8c .resolv tri, RS_0x8dacb8c/0/0, RS_0x8dacb8c/0/4, RS_0x8dacb8c/0/8, C4<zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz>;
v0x8de7340_0 .net8 "FU_RB_index_bus", 39 0, RS_0x8dacb8c; 10 drivers
RS_0x8dacc64 .resolv tri, L_0x8dea4c0, L_0x8dea980, C4<zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz>, C4<zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz>;
v0x8de7390_0 .net8 "FU_addr_bus", 63 0, RS_0x8dacc64; 2 drivers
RS_0x8daccdc/0/0 .resolv tri, L_0x8de8548, L_0x8de8888, L_0x8de8c08, L_0x8de8fa0;
RS_0x8daccdc/0/4 .resolv tri, L_0x8de9338, L_0x8de0070, L_0x8de9d78, L_0x8dea110;
RS_0x8daccdc/0/8 .resolv tri, L_0x8dea6b0, L_0x8deab40, C4<zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz>, C4<zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz>;
RS_0x8daccdc .resolv tri, RS_0x8daccdc/0/0, RS_0x8daccdc/0/4, RS_0x8daccdc/0/8, C4<zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz>;
v0x8de73e0_0 .net8 "FU_data_bus", 319 0, RS_0x8daccdc; 10 drivers
RS_0x8dace2c/0/0 .resolv tri, L_0x8de8608, L_0x8de8968, L_0x8de8ce8, L_0x8de9080;
RS_0x8dace2c/0/4 .resolv tri, L_0x8de9510, L_0x8de9ad8, L_0x8de9e58, L_0x8dea1f0;
RS_0x8dace2c/0/8 .resolv tri, L_0x8dea5d0, L_0x8deaa60, C4<zzzzzzzzzz>, C4<zzzzzzzzzz>;
RS_0x8dace2c .resolv tri, RS_0x8dace2c/0/0, RS_0x8dace2c/0/4, RS_0x8dace2c/0/8, C4<zzzzzzzzzz>;
v0x8de7430_0 .net8 "FU_valid_bus", 9 0, RS_0x8dace2c; 10 drivers
v0x8de7480 .array "RB_wt_by_FU", 0 14, 3 0;
v0x8de74d0_0 .var "RBindex", 3 0;
v0x8de7520_0 .net *"_s18", 12 0, C4<0000000000000>; 1 drivers
RS_0x8dacc94/0/0 .resolv tri, L_0x8de8488, L_0x8de87a8, L_0x8de8b28, L_0x8de8ec0;
RS_0x8dacc94/0/4 .resolv tri, L_0x8de9258, L_0x8de9870, L_0x8de9c98, L_0x8dea030;
RS_0x8dacc94/0/8 .resolv tri, L_0x8dea3e0, L_0x8dea8a0, C4<zzzzzzzzzz>, C4<zzzzzzzzzz>;
RS_0x8dacc94 .resolv tri, RS_0x8dacc94/0/0, RS_0x8dacc94/0/4, RS_0x8dacc94/0/8, C4<zzzzzzzzzz>;
v0x8de7570_0 .net8 "busy", 9 0, RS_0x8dacc94; 10 drivers
v0x8de75c0_0 .var "clk", 0 0;
v0x8de7610_0 .var "fu", 3 0;
v0x8de76b8_0 .net "inst", 31 0, L_0x8deae70; 1 drivers
RS_0x8dacd9c .resolv tri, v0x8dce528_0, v0x8dd0c20_0, C4<zzzzz>, C4<zzzzz>;
v0x8de7718_0 .net8 "numi", 4 0, RS_0x8dacd9c; 2 drivers
RS_0x8dacdb4/0/0 .resolv tri, v0x8dce660_0, v0x8dd0d58_0, v0x8dd3208_0, v0x8dd5310_0;
RS_0x8dacdb4/0/4 .resolv tri, v0x8dd78d8_0, v0x8dd9a88_0, v0x8ddbca8_0, v0x8dddec8_0;
RS_0x8dacdb4/0/8 .resolv tri, v0x8de04d0_0, v0x8de29b8_0, C4<zzzzz>, C4<zzzzz>;
RS_0x8dacdb4 .resolv tri, RS_0x8dacdb4/0/0, RS_0x8dacdb4/0/4, RS_0x8dacdb4/0/8, C4<zzzzz>;
v0x8de7820_0 .net8 "numj", 4 0, RS_0x8dacdb4; 10 drivers
RS_0x8dacdcc/0/0 .resolv tri, v0x8dce5e8_0, v0x8dd0ce0_0, v0x8dd3290_0, v0x8dd5418_0;
RS_0x8dacdcc/0/4 .resolv tri, v0x8dd7b18_0, v0x8dd9b90_0, v0x8ddbdb0_0, v0x8dddfd0_0;
RS_0x8dacdcc/0/8 .resolv tri, v0x8dd7a48_0, v0x8de2ac0_0, C4<zzzzz>, C4<zzzzz>;
RS_0x8dacdcc .resolv tri, RS_0x8dacdcc/0/0, RS_0x8dacdcc/0/4, RS_0x8dacdcc/0/8, C4<zzzzz>;
v0x8de7870_0 .net8 "numk", 4 0, RS_0x8dacdcc; 10 drivers
v0x8de7768_0 .var "op", 3 0;
v0x8de7918_0 .net "qi", 3 0, L_0x8de8268; 1 drivers
v0x8de78c0_0 .net "qj", 3 0, L_0x8de8358; 1 drivers
v0x8de79c8_0 .net "qk", 3 0, L_0x8de8418; 1 drivers
v0x8de7968_0 .var "rd", 4 0;
v0x8de7a80_0 .var "reset", 0 0;
v0x8de7a18_0 .var "rs", 4 0;
v0x8de7b40_0 .var "rt", 4 0;
v0x8de7ad0_0 .net "vi", 31 0, L_0x8de7de0; 1 drivers
v0x8de7c70_0 .net "vj", 31 0, L_0x8de7f98; 1 drivers
v0x8de7b90_0 .net "vk", 31 0, L_0x8de81a8; 1 drivers
v0x8de7d40_0 .var "wd_reg", 31 0;
v0x8de7cc0_0 .var "wd_status", 3 0;
v0x8de7e18_0 .var "we_reg", 0 0;
v0x8de7d90_0 .var "we_status", 0 0;
v0x8de7ef8_0 .var "write", 9 0;
v0x8de7e68_0 .var "ws_reg", 4 0;
v0x8de7fe0_0 .var "ws_status", 4 0;
LS_0x8deae70_0_0 .concat [ 13 5 5 5], C4<0000000000000>, v0x8de7b40_0, v0x8de7968_0, v0x8de7a18_0;
LS_0x8deae70_0_4 .concat [ 4 0 0 0], v0x8de7768_0;
L_0x8deae70 .concat [ 28 4 0 0], LS_0x8deae70_0_0, LS_0x8deae70_0_4;
S_0x8de6ed0 .scope task, "setWrite" "setWrite" 2 159, 2 159, S_0x8d4f4b8;
 .timescale -9 -10;
v0x8de6f50_0 .var "data", 0 0;
v0x8de6fb0_0 .var "fu", 3 0;
v0x8de7010_0 .var "longData", 9 0;
v0x8de7070_0 .var "mask", 9 0;
v0x8de70d0_0 .var "write", 9 0;
TD_CPU.setWrite ;
    %movi 8, 1, 10;
    %ix/getv 0, v0x8de6fb0_0;
    %shiftl/i0  8, 10;
    %inv 8, 10;
    %set/v v0x8de7070_0, 8, 10;
    %load/v 8, v0x8de6f50_0, 1;
    %mov 9, 0, 9;
    %load/v 18, v0x8de6fb0_0, 4;
    %ix/get 0, 18, 4;
    %shiftl/i0  8, 10;
    %set/v v0x8de7010_0, 8, 10;
    %load/v 8, v0x8de70d0_0, 10;
    %load/v 18, v0x8de7070_0, 10;
    %and 8, 18, 10;
    %load/v 18, v0x8de7010_0, 10;
    %or 8, 18, 10;
    %set/v v0x8de70d0_0, 8, 10;
    %end;
S_0x8de6d60 .scope task, "setWriteBy" "setWriteBy" 2 146, 2 146, S_0x8d4f4b8;
 .timescale -9 -10;
v0x8de6de0_0 .var "fu", 3 0;
v0x8de6e30_0 .var "write", 9 0;
v0x8de6e80_0 .var "writeFU", 3 0;
TD_CPU.setWriteBy ;
    %load/v 8, v0x8de6e80_0, 4;
    %mov 12, 0, 2;
    %cmpi/u 8, 15, 6;
    %inv 4, 1;
    %jmp/0xz  T_1.0, 4;
    %load/v 8, v0x8de6e30_0, 10;
    %set/v v0x8de70d0_0, 8, 10;
    %load/v 8, v0x8de6e80_0, 4;
    %set/v v0x8de6fb0_0, 8, 4;
    %set/v v0x8de6f50_0, 0, 1;
    %fork TD_CPU.setWrite, S_0x8de6ed0;
    %join;
    %load/v 8, v0x8de70d0_0, 10;
    %set/v v0x8de6e30_0, 8, 10;
T_1.0 ;
    %load/v 8, v0x8de6e30_0, 10;
    %set/v v0x8de70d0_0, 8, 10;
    %load/v 8, v0x8de6de0_0, 4;
    %set/v v0x8de6fb0_0, 8, 4;
    %set/v v0x8de6f50_0, 1, 1;
    %fork TD_CPU.setWrite, S_0x8de6ed0;
    %join;
    %load/v 8, v0x8de70d0_0, 10;
    %set/v v0x8de6e30_0, 8, 10;
    %load/v 8, v0x8de6de0_0, 4;
    %set/v v0x8de6e80_0, 8, 4;
    %end;
S_0x8de4500 .scope module, "status" "reg_status" 2 56, 4 3, S_0x8d4f4b8;
 .timescale -9 -10;
P_0x8de4584 .param/l "ADDER_NUM" 3 36, +C4<011>;
P_0x8de4598 .param/l "ALU_ADD" 3 10, C4<0000>;
P_0x8de45ac .param/l "ALU_MUL" 3 12, C4<0010>;
P_0x8de45c0 .param/l "ALU_SUB" 3 11, C4<0001>;
P_0x8de45d4 .param/l "BLOCK_SIZE" 3 6, +C4<010000>;
P_0x8de45e8 .param/l "CACHE_SIZE" 3 7, +C4<010000000000>;
P_0x8de45fc .param/l "FU_INDEX" 3 41, +C4<0100>;
P_0x8de4610 .param/l "FU_NUM" 3 40, +C4<01010>;
P_0x8de4624 .param/l "IMM_START" 3 19, +C4<010001>;
P_0x8de4638 .param/l "INST_ADD" 3 20, C4<0000>;
P_0x8de464c .param/l "INST_ADDI" 3 25, C4<0101>;
P_0x8de4660 .param/l "INST_BGE" 3 33, C4<1101>;
P_0x8de4674 .param/l "INST_J" 3 31, C4<1011>;
P_0x8de4688 .param/l "INST_JR" 3 32, C4<1100>;
P_0x8de469c .param/l "INST_LI" 3 30, C4<1010>;
P_0x8de46b0 .param/l "INST_LW" 3 23, C4<0011>;
P_0x8de46c4 .param/l "INST_LWRR" 3 28, C4<1000>;
P_0x8de46d8 .param/l "INST_MUL" 3 22, C4<0010>;
P_0x8de46ec .param/l "INST_MULI" 3 27, C4<0111>;
P_0x8de4700 .param/l "INST_SUB" 3 21, C4<0001>;
P_0x8de4714 .param/l "INST_SUBI" 3 26, C4<0110>;
P_0x8de4728 .param/l "INST_SW" 3 24, C4<0100>;
P_0x8de473c .param/l "INST_SWRR" 3 29, C4<1001>;
P_0x8de4750 .param/l "LOADER_NUM" 3 38, +C4<011>;
P_0x8de4764 .param/l "MEM_SIZE" 3 2, +C4<010000000000>;
P_0x8de4778 .param/l "MULTER_NUM" 3 37, +C4<010>;
P_0x8de478c .param/l "MUL_STALL" 3 43, +C4<011>;
P_0x8de47a0 .param/l "NULL" 3 49, +C4<01111>;
P_0x8de47b4 .param/l "OPCODE_WIDTH" 3 15, +C4<0100>;
P_0x8de47c8 .param/l "RB_INDEX" 3 47, +C4<0100>;
P_0x8de47dc .param/l "RB_SIZE" 3 46, +C4<01111>;
P_0x8de47f0 .param/l "RD_START" 3 17, +C4<010110>;
P_0x8de4804 .param/l "READY" 3 48, +C4<01111>;
P_0x8de4818 .param/l "REG_FILE_SIZE" 3 4, +C4<0100000>;
P_0x8de482c .param/l "REG_INDEX" 3 3, +C4<0101>;
P_0x8de4840 .param/l "RS_START" 3 16, +C4<011011>;
P_0x8de4854 .param/l "RT_START" 3 18, +C4<010001>;
P_0x8de4868 .param/l "STORER_NUM" 3 39, +C4<010>;
P_0x8de487c .param/l "TAG_SIZE" 3 8, +C4<010010>;
P_0x8de4890 .param/l "WORD_SIZE" 3 1, +C4<0100000>;
L_0x8de8268 .functor BUFZ 4, L_0x8de8218, C4<0000>, C4<0000>, C4<0000>;
L_0x8de8358 .functor BUFZ 4, L_0x8de8308, C4<0000>, C4<0000>, C4<0000>;
L_0x8de8418 .functor BUFZ 4, L_0x8de83c8, C4<0000>, C4<0000>, C4<0000>;
v0x8de65b8_0 .net *"_s0", 3 0, L_0x8de8218; 1 drivers
v0x8de6628_0 .net *"_s4", 3 0, L_0x8de8308; 1 drivers
v0x8de6688_0 .net *"_s8", 3 0, L_0x8de83c8; 1 drivers
v0x8de66e8_0 .net "clk", 0 0, v0x8de75c0_0; 1 drivers
v0x8de6738_0 .alias "get_num1", 4 0, v0x8de7718_0;
v0x8de6788_0 .alias "get_num2", 4 0, v0x8de7820_0;
v0x8de67d8_0 .alias "get_num3", 4 0, v0x8de7870_0;
v0x8de6828_0 .net "reset", 0 0, v0x8de7a80_0; 1 drivers
v0x8de6878_0 .alias "status1", 3 0, v0x8de7918_0;
v0x8de68c8_0 .alias "status2", 3 0, v0x8de78c0_0;
v0x8de6918_0 .alias "status3", 3 0, v0x8de79c8_0;
v0x8de6968 .array "statuses", 0 31, 3 0;
v0x8de69f0_0 .alias "value1", 31 0, v0x8de7ad0_0;
v0x8de6a40_0 .alias "value2", 31 0, v0x8de7c70_0;
v0x8de6a90_0 .alias "value3", 31 0, v0x8de7b90_0;
v0x8de6ae0_0 .net "write_reg_data", 31 0, v0x8de7d40_0; 1 drivers
v0x8de6b78_0 .net "write_reg_enable", 0 0, v0x8de7e18_0; 1 drivers
v0x8de6bc8_0 .net "write_reg_src", 4 0, v0x8de7e68_0; 1 drivers
v0x8de6c68_0 .net "write_rs_enable", 0 0, v0x8de7d90_0; 1 drivers
v0x8de6cb8_0 .net "write_rs_src", 4 0, v0x8de7fe0_0; 1 drivers
v0x8de6c18_0 .net "write_rs_status", 3 0, v0x8de7cc0_0; 1 drivers
L_0x8de8218 .array/port v0x8de6968, RS_0x8dacd9c;
L_0x8de8308 .array/port v0x8de6968, RS_0x8dacdb4;
L_0x8de83c8 .array/port v0x8de6968, RS_0x8dacdcc;
S_0x8de5258 .scope module, "registers" "reg_file" 4 22, 5 1, S_0x8de4500;
 .timescale -9 -10;
P_0x8de52dc .param/l "ADDER_NUM" 3 36, +C4<011>;
P_0x8de52f0 .param/l "ALU_ADD" 3 10, C4<0000>;
P_0x8de5304 .param/l "ALU_MUL" 3 12, C4<0010>;
P_0x8de5318 .param/l "ALU_SUB" 3 11, C4<0001>;
P_0x8de532c .param/l "BLOCK_SIZE" 3 6, +C4<010000>;
P_0x8de5340 .param/l "CACHE_SIZE" 3 7, +C4<010000000000>;
P_0x8de5354 .param/l "FU_INDEX" 3 41, +C4<0100>;
P_0x8de5368 .param/l "FU_NUM" 3 40, +C4<01010>;
P_0x8de537c .param/l "IMM_START" 3 19, +C4<010001>;
P_0x8de5390 .param/l "INST_ADD" 3 20, C4<0000>;
P_0x8de53a4 .param/l "INST_ADDI" 3 25, C4<0101>;
P_0x8de53b8 .param/l "INST_BGE" 3 33, C4<1101>;
P_0x8de53cc .param/l "INST_J" 3 31, C4<1011>;
P_0x8de53e0 .param/l "INST_JR" 3 32, C4<1100>;
P_0x8de53f4 .param/l "INST_LI" 3 30, C4<1010>;
P_0x8de5408 .param/l "INST_LW" 3 23, C4<0011>;
P_0x8de541c .param/l "INST_LWRR" 3 28, C4<1000>;
P_0x8de5430 .param/l "INST_MUL" 3 22, C4<0010>;
P_0x8de5444 .param/l "INST_MULI" 3 27, C4<0111>;
P_0x8de5458 .param/l "INST_SUB" 3 21, C4<0001>;
P_0x8de546c .param/l "INST_SUBI" 3 26, C4<0110>;
P_0x8de5480 .param/l "INST_SW" 3 24, C4<0100>;
P_0x8de5494 .param/l "INST_SWRR" 3 29, C4<1001>;
P_0x8de54a8 .param/l "LOADER_NUM" 3 38, +C4<011>;
P_0x8de54bc .param/l "MEM_SIZE" 3 2, +C4<010000000000>;
P_0x8de54d0 .param/l "MULTER_NUM" 3 37, +C4<010>;
P_0x8de54e4 .param/l "MUL_STALL" 3 43, +C4<011>;
P_0x8de54f8 .param/l "NULL" 3 49, +C4<01111>;
P_0x8de550c .param/l "OPCODE_WIDTH" 3 15, +C4<0100>;
P_0x8de5520 .param/l "RB_INDEX" 3 47, +C4<0100>;
P_0x8de5534 .param/l "RB_SIZE" 3 46, +C4<01111>;
P_0x8de5548 .param/l "RD_START" 3 17, +C4<010110>;
P_0x8de555c .param/l "READY" 3 48, +C4<01111>;
P_0x8de5570 .param/l "REG_FILE_SIZE" 3 4, +C4<0100000>;
P_0x8de5584 .param/l "REG_INDEX" 3 3, +C4<0101>;
P_0x8de5598 .param/l "RS_START" 3 16, +C4<011011>;
P_0x8de55ac .param/l "RT_START" 3 18, +C4<010001>;
P_0x8de55c0 .param/l "STORER_NUM" 3 39, +C4<010>;
P_0x8de55d4 .param/l "TAG_SIZE" 3 8, +C4<010010>;
P_0x8de55e8 .param/l "WORD_SIZE" 3 1, +C4<0100000>;
L_0x8de7de0 .functor BUFZ 32, L_0x8de7f48, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>;
L_0x8de7f98 .functor BUFZ 32, L_0x8de80d0, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>;
L_0x8de81a8 .functor BUFZ 32, L_0x8de8158, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>;
v0x8de5ef8_0 .net *"_s0", 31 0, L_0x8de7f48; 1 drivers
v0x8de5f68_0 .net *"_s4", 31 0, L_0x8de80d0; 1 drivers
v0x8de5fc8_0 .net *"_s8", 31 0, L_0x8de8158; 1 drivers
v0x8de6028_0 .alias "clk", 0 0, v0x8de66e8_0;
v0x8de6078_0 .alias "get_num1", 4 0, v0x8de7718_0;
v0x8de60c8_0 .alias "get_num2", 4 0, v0x8de7820_0;
v0x8de6118_0 .alias "get_num3", 4 0, v0x8de7870_0;
v0x8de6168_0 .var "i", 5 0;
v0x8de61e0_0 .alias "out1", 31 0, v0x8de7ad0_0;
v0x8de6268_0 .alias "out2", 31 0, v0x8de7c70_0;
v0x8de62e8_0 .alias "out3", 31 0, v0x8de7b90_0;
v0x8de6338 .array "register", 0 31, 31 0;
v0x8de63c0_0 .alias "reset_enable", 0 0, v0x8de6828_0;
v0x8de6410_0 .alias "set_enable", 0 0, v0x8de6b78_0;
v0x8de64b0_0 .alias "set_num", 4 0, v0x8de6bc8_0;
v0x8de6510_0 .alias "set_val", 31 0, v0x8de6ae0_0;
L_0x8de7f48 .array/port v0x8de6338, RS_0x8dacd9c;
L_0x8de80d0 .array/port v0x8de6338, RS_0x8dacdb4;
L_0x8de8158 .array/port v0x8de6338, RS_0x8dacdcc;
S_0x8de5168 .scope begin, "rs" "rs" 4 30, 4 30, S_0x8de4500;
 .timescale -9 -10;
v0x8de51e8_0 .var "i", 31 0;
S_0x8de2e50 .scope module, "data_ctrl" "CDB_data_controller" 2 73, 6 1, S_0x8d4f4b8;
 .timescale -9 -10;
P_0x8de2ed4 .param/l "ADDER_NUM" 3 36, +C4<011>;
P_0x8de2ee8 .param/l "ALU_ADD" 3 10, C4<0000>;
P_0x8de2efc .param/l "ALU_MUL" 3 12, C4<0010>;
P_0x8de2f10 .param/l "ALU_SUB" 3 11, C4<0001>;
P_0x8de2f24 .param/l "BLOCK_SIZE" 3 6, +C4<010000>;
P_0x8de2f38 .param/l "CACHE_SIZE" 3 7, +C4<010000000000>;
P_0x8de2f4c .param/l "FU_INDEX" 3 41, +C4<0100>;
P_0x8de2f60 .param/l "FU_NUM" 3 40, +C4<01010>;
P_0x8de2f74 .param/l "IMM_START" 3 19, +C4<010001>;
P_0x8de2f88 .param/l "INST_ADD" 3 20, C4<0000>;
P_0x8de2f9c .param/l "INST_ADDI" 3 25, C4<0101>;
P_0x8de2fb0 .param/l "INST_BGE" 3 33, C4<1101>;
P_0x8de2fc4 .param/l "INST_J" 3 31, C4<1011>;
P_0x8de2fd8 .param/l "INST_JR" 3 32, C4<1100>;
P_0x8de2fec .param/l "INST_LI" 3 30, C4<1010>;
P_0x8de3000 .param/l "INST_LW" 3 23, C4<0011>;
P_0x8de3014 .param/l "INST_LWRR" 3 28, C4<1000>;
P_0x8de3028 .param/l "INST_MUL" 3 22, C4<0010>;
P_0x8de303c .param/l "INST_MULI" 3 27, C4<0111>;
P_0x8de3050 .param/l "INST_SUB" 3 21, C4<0001>;
P_0x8de3064 .param/l "INST_SUBI" 3 26, C4<0110>;
P_0x8de3078 .param/l "INST_SW" 3 24, C4<0100>;
P_0x8de308c .param/l "INST_SWRR" 3 29, C4<1001>;
P_0x8de30a0 .param/l "LOADER_NUM" 3 38, +C4<011>;
P_0x8de30b4 .param/l "MEM_SIZE" 3 2, +C4<010000000000>;
P_0x8de30c8 .param/l "MULTER_NUM" 3 37, +C4<010>;
P_0x8de30dc .param/l "MUL_STALL" 3 43, +C4<011>;
P_0x8de30f0 .param/l "NULL" 3 49, +C4<01111>;
P_0x8de3104 .param/l "OPCODE_WIDTH" 3 15, +C4<0100>;
P_0x8de3118 .param/l "RB_INDEX" 3 47, +C4<0100>;
P_0x8de312c .param/l "RB_SIZE" 3 46, +C4<01111>;
P_0x8de3140 .param/l "RD_START" 3 17, +C4<010110>;
P_0x8de3154 .param/l "READY" 3 48, +C4<01111>;
P_0x8de3168 .param/l "REG_FILE_SIZE" 3 4, +C4<0100000>;
P_0x8de317c .param/l "REG_INDEX" 3 3, +C4<0101>;
P_0x8de3190 .param/l "RS_START" 3 16, +C4<011011>;
P_0x8de31a4 .param/l "RT_START" 3 18, +C4<010001>;
P_0x8de31b8 .param/l "STORER_NUM" 3 39, +C4<010>;
P_0x8de31cc .param/l "TAG_SIZE" 3 8, +C4<010010>;
P_0x8de31e0 .param/l "WORD_SIZE" 3 1, +C4<0100000>;
v0x8de41e8_0 .var "CDB_data_addr", 479 0;
v0x8de4258_0 .var "CDB_data_data", 479 0;
v0x8de42a8_0 .var "CDB_data_valid", 14 0;
v0x8de42f8_0 .alias "RB_index_bus", 39 0, v0x8de7340_0;
v0x8de4348_0 .alias "addr_bus", 63 0, v0x8de7390_0;
v0x8de4398_0 .alias "clk", 0 0, v0x8de66e8_0;
v0x8de43e8_0 .alias "data_bus", 319 0, v0x8de73e0_0;
v0x8de4438_0 .alias "reset", 0 0, v0x8de6828_0;
v0x8de44b0_0 .alias "valid_bus", 9 0, v0x8de7430_0;
E_0x8de2388/0 .event negedge, v0x8dce228_0;
E_0x8de2388/1 .event posedge, v0x8dce730_0;
E_0x8de2388 .event/or E_0x8de2388/0, E_0x8de2388/1;
S_0x8de4038 .scope function, "readData" "readData" 6 69, 6 69, S_0x8de2e50;
 .timescale -9 -10;
v0x8de40b8_0 .var "data_bus", 319 0;
v0x8de4128_0 .var "fuindex", 31 0;
v0x8de4188_0 .var "readData", 31 0;
TD_CPU.data_ctrl.readData ;
    %load/v 8, v0x8de40b8_0, 320;
    %load/v 328, v0x8de4128_0, 32;
    %movi 360, 0, 7;
    %muli 328, 32, 39;
    %ix/get 0, 328, 39;
    %shiftr/i0  8, 320;
    %set/v v0x8de4188_0, 8, 32;
    %end;
S_0x8de3e88 .scope function, "readIndex" "readIndex" 6 61, 6 61, S_0x8de2e50;
 .timescale -9 -10;
v0x8de3f08_0 .var "RB_index_bus", 39 0;
v0x8de3f78_0 .var "fuindex", 31 0;
v0x8de3fd8_0 .var "readIndex", 3 0;
TD_CPU.data_ctrl.readIndex ;
    %load/v 8, v0x8de3f08_0, 40;
    %load/v 48, v0x8de3f78_0, 32;
    %mov 80, 0, 4;
    %muli 48, 4, 36;
    %ix/get 0, 48, 36;
    %shiftr/i0  8, 40;
    %set/v v0x8de3fd8_0, 8, 4;
    %end;
S_0x8de3cd8 .scope function, "readValid" "readValid" 6 77, 6 77, S_0x8de2e50;
 .timescale -9 -10;
v0x8de3d58_0 .var "fuindex", 31 0;
v0x8de3dc8_0 .var "readValid", 0 0;
v0x8de3e28_0 .var "valid_bus", 9 0;
TD_CPU.data_ctrl.readValid ;
    %load/v 8, v0x8de3e28_0, 10;
    %load/v 18, v0x8de3d58_0, 32;
    %ix/get 0, 18, 32;
    %shiftr/i0  8, 10;
    %set/v v0x8de3dc8_0, 8, 1;
    %end;
S_0x8de39f8 .scope begin, "setCDB" "setCDB" 6 22, 6 22, S_0x8de2e50;
 .timescale -9 -10;
v0x8de3a78_0 .var "data", 479 0;
v0x8de3ae8_0 .var "data_each", 479 0;
v0x8de3b48_0 .var "i", 31 0;
v0x8de3ba8_0 .var "index", 3 0;
v0x8de3bf8_0 .var "valid", 14 0;
v0x8de3c58_0 .var "valid_each", 14 0;
S_0x8de2dd0 .scope begin, "test" "test" 2 93, 2 93, S_0x8d4f4b8;
 .timescale -9 -10;
v0x8de2c88_0 .var "i", 31 0;
S_0x8de0d10 .scope module, "alu_rs[0]" "ALU_RS" 2 61, 7 1, S_0x8d4f4b8;
 .timescale -9 -10;
P_0x8de0d94 .param/l "ADDER_NUM" 3 36, +C4<011>;
P_0x8de0da8 .param/l "ALU_ADD" 3 10, C4<0000>;
P_0x8de0dbc .param/l "ALU_MUL" 3 12, C4<0010>;
P_0x8de0dd0 .param/l "ALU_SUB" 3 11, C4<0001>;
P_0x8de0de4 .param/l "BLOCK_SIZE" 3 6, +C4<010000>;
P_0x8de0df8 .param/l "CACHE_SIZE" 3 7, +C4<010000000000>;
P_0x8de0e0c .param/l "FU_INDEX" 3 41, +C4<0100>;
P_0x8de0e20 .param/l "FU_NUM" 3 40, +C4<01010>;
P_0x8de0e34 .param/l "IMM_START" 3 19, +C4<010001>;
P_0x8de0e48 .param/l "INST_ADD" 3 20, C4<0000>;
P_0x8de0e5c .param/l "INST_ADDI" 3 25, C4<0101>;
P_0x8de0e70 .param/l "INST_BGE" 3 33, C4<1101>;
P_0x8de0e84 .param/l "INST_J" 3 31, C4<1011>;
P_0x8de0e98 .param/l "INST_JR" 3 32, C4<1100>;
P_0x8de0eac .param/l "INST_LI" 3 30, C4<1010>;
P_0x8de0ec0 .param/l "INST_LW" 3 23, C4<0011>;
P_0x8de0ed4 .param/l "INST_LWRR" 3 28, C4<1000>;
P_0x8de0ee8 .param/l "INST_MUL" 3 22, C4<0010>;
P_0x8de0efc .param/l "INST_MULI" 3 27, C4<0111>;
P_0x8de0f10 .param/l "INST_SUB" 3 21, C4<0001>;
P_0x8de0f24 .param/l "INST_SUBI" 3 26, C4<0110>;
P_0x8de0f38 .param/l "INST_SW" 3 24, C4<0100>;
P_0x8de0f4c .param/l "INST_SWRR" 3 29, C4<1001>;
P_0x8de0f60 .param/l "LOADER_NUM" 3 38, +C4<011>;
P_0x8de0f74 .param/l "MEM_SIZE" 3 2, +C4<010000000000>;
P_0x8de0f88 .param/l "MULTER_NUM" 3 37, +C4<010>;
P_0x8de0f9c .param/l "MUL_STALL" 3 43, +C4<011>;
P_0x8de0fb0 .param/l "NULL" 3 49, +C4<01111>;
P_0x8de0fc4 .param/l "OPCODE_WIDTH" 3 15, +C4<0100>;
P_0x8de0fd8 .param/l "RB_INDEX" 3 47, +C4<0100>;
P_0x8de0fec .param/l "RB_SIZE" 3 46, +C4<01111>;
P_0x8de1000 .param/l "RD_START" 3 17, +C4<010110>;
P_0x8de1014 .param/l "READY" 3 48, +C4<01111>;
P_0x8de1028 .param/l "REG_FILE_SIZE" 3 4, +C4<0100000>;
P_0x8de103c .param/l "REG_INDEX" 3 3, +C4<0101>;
P_0x8de1050 .param/l "RS_START" 3 16, +C4<011011>;
P_0x8de1064 .param/l "RT_START" 3 18, +C4<010001>;
P_0x8de1078 .param/l "STORER_NUM" 3 39, +C4<010>;
P_0x8de108c .param/l "TAG_SIZE" 3 8, +C4<010010>;
P_0x8de10a0 .param/l "WORD_SIZE" 3 1, +C4<0100000>;
P_0x8de10b4 .param/l "fuindex" 7 6, +C4<0>;
v0x8de2188_0 .alias "CDB_data_data", 479 0, v0x8de7190_0;
v0x8de21e8_0 .alias "CDB_data_valid", 14 0, v0x8de71e0_0;
v0x8de2238_0 .var "Qj", 3 0;
v0x8de2298_0 .var "Qk", 3 0;
v0x8de22e8_0 .alias "RB_index", 3 0, v0x8de7230_0;
v0x8de2338_0 .alias "RB_index_bus", 39 0, v0x8de7340_0;
v0x8de23a8_0 .var "Vj", 31 0;
v0x8de2408_0 .var "Vk", 31 0;
v0x8de2490_0 .net *"_s11", 0 0, v0x8de2b10_0; 1 drivers
v0x8de24f0_0 .net *"_s15", 3 0, v0x8de2818_0; 1 drivers
v0x8de2580_0 .net *"_s3", 0 0, v0x8de2640_0; 1 drivers
v0x8de25e0_0 .net *"_s7", 31 0, v0x8de2b78_0; 1 drivers
v0x8de2640_0 .var "busy", 0 0;
v0x8de26a0_0 .alias "busy_out", 9 0, v0x8de7570_0;
v0x8de2730_0 .alias "clk", 0 0, v0x8de66e8_0;
v0x8de2780_0 .alias "data_bus", 319 0, v0x8de73e0_0;
v0x8de2818_0 .var "dest", 3 0;
v0x8de2878_0 .alias "fu", 3 0, v0x8de7280_0;
v0x8de2918_0 .alias "inst", 31 0, v0x8de72d0_0;
v0x8de2968_0 .var "op", 3 0;
v0x8de28c8_0 .alias "qj", 3 0, v0x8de78c0_0;
v0x8de2a10_0 .alias "qk", 3 0, v0x8de79c8_0;
v0x8de29b8_0 .var "reg_numj", 4 0;
v0x8de2ac0_0 .var "reg_numk", 4 0;
v0x8de2a60_0 .alias "reset", 0 0, v0x8de6828_0;
v0x8de2b78_0 .var "result", 31 0;
v0x8de2b10_0 .var "valid", 0 0;
v0x8de2c38_0 .alias "valid_bus", 9 0, v0x8de7430_0;
v0x8de2bc8_0 .alias "vj", 31 0, v0x8de7c70_0;
v0x8de2d00_0 .alias "vk", 31 0, v0x8de7b90_0;
L_0x8de8488 .part/pv v0x8de2640_0, 0, 1, 10;
L_0x8de8548 .part/pv v0x8de2b78_0, 0, 32, 320;
L_0x8de8608 .part/pv v0x8de2b10_0, 0, 1, 10;
L_0x8de86c8 .part/pv v0x8de2818_0, 0, 4, 40;
S_0x8de1ea8 .scope task, "checkAndGetData" "checkAndGetData" 7 142, 7 142, S_0x8de0d10;
 .timescale -9 -10;
v0x8de1f28_0 .var "Q", 3 0;
v0x8de1f98_0 .var "V", 31 0;
v0x8de1ff8_0 .var "dataBus", 479 0;
v0x8de2058_0 .var "ok", 0 0;
v0x8de20a8_0 .var "valid", 0 0;
v0x8de2108_0 .var "validBus", 14 0;
TD_CPU.alu_rs\x5B0\x5D.checkAndGetData ;
    %load/v 8, v0x8de1f28_0, 4;
    %mov 12, 0, 2;
    %cmpi/u 8, 15, 6;
    %jmp/0xz  T_5.2, 6;
    %jmp T_5.3;
T_5.2 ;
    %load/v 8, v0x8de2108_0, 15;
    %set/v v0x8de1908_0, 8, 15;
    %load/v 8, v0x8de1f28_0, 4;
    %set/v v0x8de1978_0, 8, 4;
    %fork TD_CPU.alu_rs\x5B0\x5D.readValidBus, S_0x8de1888;
    %join;
    %load/v  8, v0x8de19d8_0, 1;
    %set/v v0x8de20a8_0, 8, 1;
    %load/v 8, v0x8de20a8_0, 1;
    %jmp/0xz  T_5.4, 8;
    %movi 8, 15, 5;
    %set/v v0x8de1f28_0, 8, 4;
    %load/v 8, v0x8de1ff8_0, 480;
    %set/v v0x8de1ab8_0, 8, 480;
    %load/v 8, v0x8de1f28_0, 4;
    %set/v v0x8de1b28_0, 8, 4;
    %fork TD_CPU.alu_rs\x5B0\x5D.readDataBus, S_0x8de1a38;
    %join;
    %load/v  8, v0x8de1b88_0, 32;
    %set/v v0x8de1f98_0, 8, 32;
    %jmp T_5.5;
T_5.4 ;
    %set/v v0x8de2058_0, 0, 1;
T_5.5 ;
T_5.3 ;
    %end;
S_0x8de1be8 .scope task, "getData" "getData" 7 107, 7 107, S_0x8de0d10;
 .timescale -9 -10;
v0x8de1c68_0 .var "CDB_data_data", 479 0;
v0x8de1cd8_0 .var "CDB_data_valid", 14 0;
v0x8de1d38_0 .var "Q", 3 0;
v0x8de1d98_0 .var "V", 31 0;
v0x8de1de8_0 .var "q", 3 0;
v0x8de1e48_0 .var "v", 31 0;
TD_CPU.alu_rs\x5B0\x5D.getData ;
    %load/v 8, v0x8de1de8_0, 4;
    %mov 12, 0, 2;
    %cmpi/u 8, 15, 6;
    %jmp/0xz  T_6.6, 6;
    %load/v 8, v0x8de1e48_0, 32;
    %set/v v0x8de1d98_0, 8, 32;
    %movi 8, 15, 5;
    %set/v v0x8de1d38_0, 8, 4;
    %jmp T_6.7;
T_6.6 ;
    %load/v 8, v0x8de1cd8_0, 15;
    %set/v v0x8de1908_0, 8, 15;
    %load/v 8, v0x8de1de8_0, 4;
    %set/v v0x8de1978_0, 8, 4;
    %fork TD_CPU.alu_rs\x5B0\x5D.readValidBus, S_0x8de1888;
    %join;
    %load/v  8, v0x8de19d8_0, 1;
    %jmp/0xz  T_6.8, 8;
    %load/v 8, v0x8de1c68_0, 480;
    %set/v v0x8de1ab8_0, 8, 480;
    %load/v 8, v0x8de1de8_0, 4;
    %set/v v0x8de1b28_0, 8, 4;
    %fork TD_CPU.alu_rs\x5B0\x5D.readDataBus, S_0x8de1a38;
    %join;
    %load/v  8, v0x8de1b88_0, 32;
    %set/v v0x8de1d98_0, 8, 32;
    %movi 8, 15, 5;
    %set/v v0x8de1d38_0, 8, 4;
    %jmp T_6.9;
T_6.8 ;
    %load/v 8, v0x8de1de8_0, 4;
    %set/v v0x8de1d38_0, 8, 4;
T_6.9 ;
T_6.7 ;
    %end;
S_0x8de1a38 .scope function, "readDataBus" "readDataBus" 7 126, 7 126, S_0x8de0d10;
 .timescale -9 -10;
v0x8de1ab8_0 .var "CDB_data_data", 479 0;
v0x8de1b28_0 .var "index", 3 0;
v0x8de1b88_0 .var "readDataBus", 31 0;
TD_CPU.alu_rs\x5B0\x5D.readDataBus ;
    %load/v 8, v0x8de1ab8_0, 480;
    %load/v 488, v0x8de1b28_0, 4;
    %movi 492, 0, 7;
    %muli 488, 32, 11;
    %ix/get 0, 488, 11;
    %shiftr/i0  8, 480;
    %set/v v0x8de1b88_0, 8, 32;
    %end;
S_0x8de1888 .scope function, "readValidBus" "readValidBus" 7 134, 7 134, S_0x8de0d10;
 .timescale -9 -10;
v0x8de1908_0 .var "CDB_data_valid", 14 0;
v0x8de1978_0 .var "index", 3 0;
v0x8de19d8_0 .var "readValidBus", 0 0;
TD_CPU.alu_rs\x5B0\x5D.readValidBus ;
    %load/v 8, v0x8de1908_0, 15;
    %load/v 23, v0x8de1978_0, 4;
    %ix/get 0, 23, 4;
    %shiftr/i0  8, 15;
    %set/v v0x8de19d8_0, 8, 1;
    %end;
S_0x8de1808 .scope begin, "checkIssue" "checkIssue" 7 49, 7 49, S_0x8de0d10;
 .timescale -9 -10;
S_0x8de1728 .scope begin, "execute" "execute" 7 71, 7 71, S_0x8de0d10;
 .timescale -9 -10;
v0x8de17a8_0 .var "ok", 0 0;
S_0x8dde2e0 .scope module, "alu_rs[1]" "ALU_RS" 2 61, 7 1, S_0x8d4f4b8;
 .timescale -9 -10;
P_0x8dde364 .param/l "ADDER_NUM" 3 36, +C4<011>;
P_0x8dde378 .param/l "ALU_ADD" 3 10, C4<0000>;
P_0x8dde38c .param/l "ALU_MUL" 3 12, C4<0010>;
P_0x8dde3a0 .param/l "ALU_SUB" 3 11, C4<0001>;
P_0x8dde3b4 .param/l "BLOCK_SIZE" 3 6, +C4<010000>;
P_0x8dde3c8 .param/l "CACHE_SIZE" 3 7, +C4<010000000000>;
P_0x8dde3dc .param/l "FU_INDEX" 3 41, +C4<0100>;
P_0x8dde3f0 .param/l "FU_NUM" 3 40, +C4<01010>;
P_0x8dde404 .param/l "IMM_START" 3 19, +C4<010001>;
P_0x8dde418 .param/l "INST_ADD" 3 20, C4<0000>;
P_0x8dde42c .param/l "INST_ADDI" 3 25, C4<0101>;
P_0x8dde440 .param/l "INST_BGE" 3 33, C4<1101>;
P_0x8dde454 .param/l "INST_J" 3 31, C4<1011>;
P_0x8dde468 .param/l "INST_JR" 3 32, C4<1100>;
P_0x8dde47c .param/l "INST_LI" 3 30, C4<1010>;
P_0x8dde490 .param/l "INST_LW" 3 23, C4<0011>;
P_0x8dde4a4 .param/l "INST_LWRR" 3 28, C4<1000>;
P_0x8dde4b8 .param/l "INST_MUL" 3 22, C4<0010>;
P_0x8dde4cc .param/l "INST_MULI" 3 27, C4<0111>;
P_0x8dde4e0 .param/l "INST_SUB" 3 21, C4<0001>;
P_0x8dde4f4 .param/l "INST_SUBI" 3 26, C4<0110>;
P_0x8dde508 .param/l "INST_SW" 3 24, C4<0100>;
P_0x8dde51c .param/l "INST_SWRR" 3 29, C4<1001>;
P_0x8dde530 .param/l "LOADER_NUM" 3 38, +C4<011>;
P_0x8dde544 .param/l "MEM_SIZE" 3 2, +C4<010000000000>;
P_0x8dde558 .param/l "MULTER_NUM" 3 37, +C4<010>;
P_0x8dde56c .param/l "MUL_STALL" 3 43, +C4<011>;
P_0x8dde580 .param/l "NULL" 3 49, +C4<01111>;
P_0x8dde594 .param/l "OPCODE_WIDTH" 3 15, +C4<0100>;
P_0x8dde5a8 .param/l "RB_INDEX" 3 47, +C4<0100>;
P_0x8dde5bc .param/l "RB_SIZE" 3 46, +C4<01111>;
P_0x8dde5d0 .param/l "RD_START" 3 17, +C4<010110>;
P_0x8dde5e4 .param/l "READY" 3 48, +C4<01111>;
P_0x8dde5f8 .param/l "REG_FILE_SIZE" 3 4, +C4<0100000>;
P_0x8dde60c .param/l "REG_INDEX" 3 3, +C4<0101>;
P_0x8dde620 .param/l "RS_START" 3 16, +C4<011011>;
P_0x8dde634 .param/l "RT_START" 3 18, +C4<010001>;
P_0x8dde648 .param/l "STORER_NUM" 3 39, +C4<010>;
P_0x8dde65c .param/l "TAG_SIZE" 3 8, +C4<010010>;
P_0x8dde670 .param/l "WORD_SIZE" 3 1, +C4<0100000>;
P_0x8dde684 .param/l "fuindex" 7 6, +C4<01>;
v0x8ddf8b8_0 .alias "CDB_data_data", 479 0, v0x8de7190_0;
v0x8dd6d60_0 .alias "CDB_data_valid", 14 0, v0x8de71e0_0;
v0x8dd6e18_0 .var "Qj", 3 0;
v0x8ddfaa8_0 .var "Qk", 3 0;
v0x8ddfaf8_0 .alias "RB_index", 3 0, v0x8de7230_0;
v0x8dd6f80_0 .alias "RB_index_bus", 39 0, v0x8de7340_0;
v0x8dd7058_0 .var "Vj", 31 0;
v0x8ddfcf8_0 .var "Vk", 31 0;
v0x8ddfd70_0 .net *"_s11", 0 0, v0x8dd7c20_0; 1 drivers
v0x8ddfdc0_0 .net *"_s15", 3 0, v0x8dd7600_0; 1 drivers
v0x8ddfe50_0 .net *"_s3", 0 0, v0x8ddff10_0; 1 drivers
v0x8ddfeb0_0 .net *"_s7", 31 0, v0x8dd7bd0_0; 1 drivers
v0x8ddff10_0 .var "busy", 0 0;
v0x8ddff70_0 .alias "busy_out", 9 0, v0x8de7570_0;
v0x8dd7448_0 .alias "clk", 0 0, v0x8de66e8_0;
v0x8dd7500_0 .alias "data_bus", 319 0, v0x8de73e0_0;
v0x8dd7600_0 .var "dest", 3 0;
v0x8de02a0_0 .alias "fu", 3 0, v0x8de7280_0;
v0x8dd7768_0 .alias "inst", 31 0, v0x8de72d0_0;
v0x8dd7820_0 .var "op", 3 0;
v0x8de02f0_0 .alias "qj", 3 0, v0x8de78c0_0;
v0x8dd7930_0 .alias "qk", 3 0, v0x8de79c8_0;
v0x8de04d0_0 .var "reg_numj", 4 0;
v0x8dd7a48_0 .var "reg_numk", 4 0;
v0x8de05f0_0 .alias "reset", 0 0, v0x8de6828_0;
v0x8dd7bd0_0 .var "result", 31 0;
v0x8dd7c20_0 .var "valid", 0 0;
v0x8de0970_0 .alias "valid_bus", 9 0, v0x8de7430_0;
v0x8dd7a98_0 .alias "vj", 31 0, v0x8de7c70_0;
v0x8dd7e78_0 .alias "vk", 31 0, v0x8de7b90_0;
L_0x8de87a8 .part/pv v0x8ddff10_0, 1, 1, 10;
L_0x8de8888 .part/pv v0x8dd7bd0_0, 32, 32, 320;
L_0x8de8968 .part/pv v0x8dd7c20_0, 1, 1, 10;
L_0x8de8a48 .part/pv v0x8dd7600_0, 4, 4, 40;
S_0x8ddf5d8 .scope task, "checkAndGetData" "checkAndGetData" 7 142, 7 142, S_0x8dde2e0;
 .timescale -9 -10;
v0x8ddf658_0 .var "Q", 3 0;
v0x8ddf6c8_0 .var "V", 31 0;
v0x8ddf728_0 .var "dataBus", 479 0;
v0x8ddf788_0 .var "ok", 0 0;
v0x8ddf7d8_0 .var "valid", 0 0;
v0x8ddf838_0 .var "validBus", 14 0;
TD_CPU.alu_rs\x5B1\x5D.checkAndGetData ;
    %load/v 8, v0x8ddf658_0, 4;
    %mov 12, 0, 2;
    %cmpi/u 8, 15, 6;
    %jmp/0xz  T_9.10, 6;
    %jmp T_9.11;
T_9.10 ;
    %load/v 8, v0x8ddf838_0, 15;
    %set/v v0x8ddf038_0, 8, 15;
    %load/v 8, v0x8ddf658_0, 4;
    %set/v v0x8ddf0a8_0, 8, 4;
    %fork TD_CPU.alu_rs\x5B1\x5D.readValidBus, S_0x8ddefb8;
    %join;
    %load/v  8, v0x8ddf108_0, 1;
    %set/v v0x8ddf7d8_0, 8, 1;
    %load/v 8, v0x8ddf7d8_0, 1;
    %jmp/0xz  T_9.12, 8;
    %movi 8, 15, 5;
    %set/v v0x8ddf658_0, 8, 4;
    %load/v 8, v0x8ddf728_0, 480;
    %set/v v0x8ddf1e8_0, 8, 480;
    %load/v 8, v0x8ddf658_0, 4;
    %set/v v0x8ddf258_0, 8, 4;
    %fork TD_CPU.alu_rs\x5B1\x5D.readDataBus, S_0x8ddf168;
    %join;
    %load/v  8, v0x8ddf2b8_0, 32;
    %set/v v0x8ddf6c8_0, 8, 32;
    %jmp T_9.13;
T_9.12 ;
    %set/v v0x8ddf788_0, 0, 1;
T_9.13 ;
T_9.11 ;
    %end;
S_0x8ddf318 .scope task, "getData" "getData" 7 107, 7 107, S_0x8dde2e0;
 .timescale -9 -10;
v0x8ddf398_0 .var "CDB_data_data", 479 0;
v0x8ddf408_0 .var "CDB_data_valid", 14 0;
v0x8ddf468_0 .var "Q", 3 0;
v0x8ddf4c8_0 .var "V", 31 0;
v0x8ddf518_0 .var "q", 3 0;
v0x8ddf578_0 .var "v", 31 0;
TD_CPU.alu_rs\x5B1\x5D.getData ;
    %load/v 8, v0x8ddf518_0, 4;
    %mov 12, 0, 2;
    %cmpi/u 8, 15, 6;
    %jmp/0xz  T_10.14, 6;
    %load/v 8, v0x8ddf578_0, 32;
    %set/v v0x8ddf4c8_0, 8, 32;
    %movi 8, 15, 5;
    %set/v v0x8ddf468_0, 8, 4;
    %jmp T_10.15;
T_10.14 ;
    %load/v 8, v0x8ddf408_0, 15;
    %set/v v0x8ddf038_0, 8, 15;
    %load/v 8, v0x8ddf518_0, 4;
    %set/v v0x8ddf0a8_0, 8, 4;
    %fork TD_CPU.alu_rs\x5B1\x5D.readValidBus, S_0x8ddefb8;
    %join;
    %load/v  8, v0x8ddf108_0, 1;
    %jmp/0xz  T_10.16, 8;
    %load/v 8, v0x8ddf398_0, 480;
    %set/v v0x8ddf1e8_0, 8, 480;
    %load/v 8, v0x8ddf518_0, 4;
    %set/v v0x8ddf258_0, 8, 4;
    %fork TD_CPU.alu_rs\x5B1\x5D.readDataBus, S_0x8ddf168;
    %join;
    %load/v  8, v0x8ddf2b8_0, 32;
    %set/v v0x8ddf4c8_0, 8, 32;
    %movi 8, 15, 5;
    %set/v v0x8ddf468_0, 8, 4;
    %jmp T_10.17;
T_10.16 ;
    %load/v 8, v0x8ddf518_0, 4;
    %set/v v0x8ddf468_0, 8, 4;
T_10.17 ;
T_10.15 ;
    %end;
S_0x8ddf168 .scope function, "readDataBus" "readDataBus" 7 126, 7 126, S_0x8dde2e0;
 .timescale -9 -10;
v0x8ddf1e8_0 .var "CDB_data_data", 479 0;
v0x8ddf258_0 .var "index", 3 0;
v0x8ddf2b8_0 .var "readDataBus", 31 0;
TD_CPU.alu_rs\x5B1\x5D.readDataBus ;
    %load/v 8, v0x8ddf1e8_0, 480;
    %load/v 488, v0x8ddf258_0, 4;
    %movi 492, 0, 7;
    %muli 488, 32, 11;
    %ix/get 0, 488, 11;
    %shiftr/i0  8, 480;
    %set/v v0x8ddf2b8_0, 8, 32;
    %end;
S_0x8ddefb8 .scope function, "readValidBus" "readValidBus" 7 134, 7 134, S_0x8dde2e0;
 .timescale -9 -10;
v0x8ddf038_0 .var "CDB_data_valid", 14 0;
v0x8ddf0a8_0 .var "index", 3 0;
v0x8ddf108_0 .var "readValidBus", 0 0;
TD_CPU.alu_rs\x5B1\x5D.readValidBus ;
    %load/v 8, v0x8ddf038_0, 15;
    %load/v 23, v0x8ddf0a8_0, 4;
    %ix/get 0, 23, 4;
    %shiftr/i0  8, 15;
    %set/v v0x8ddf108_0, 8, 1;
    %end;
S_0x8ddef38 .scope begin, "checkIssue" "checkIssue" 7 49, 7 49, S_0x8dde2e0;
 .timescale -9 -10;
S_0x8ddee58 .scope begin, "execute" "execute" 7 71, 7 71, S_0x8dde2e0;
 .timescale -9 -10;
v0x8ddeed8_0 .var "ok", 0 0;
S_0x8ddc0c0 .scope module, "alu_rs[2]" "ALU_RS" 2 61, 7 1, S_0x8d4f4b8;
 .timescale -9 -10;
P_0x8ddc144 .param/l "ADDER_NUM" 3 36, +C4<011>;
P_0x8ddc158 .param/l "ALU_ADD" 3 10, C4<0000>;
P_0x8ddc16c .param/l "ALU_MUL" 3 12, C4<0010>;
P_0x8ddc180 .param/l "ALU_SUB" 3 11, C4<0001>;
P_0x8ddc194 .param/l "BLOCK_SIZE" 3 6, +C4<010000>;
P_0x8ddc1a8 .param/l "CACHE_SIZE" 3 7, +C4<010000000000>;
P_0x8ddc1bc .param/l "FU_INDEX" 3 41, +C4<0100>;
P_0x8ddc1d0 .param/l "FU_NUM" 3 40, +C4<01010>;
P_0x8ddc1e4 .param/l "IMM_START" 3 19, +C4<010001>;
P_0x8ddc1f8 .param/l "INST_ADD" 3 20, C4<0000>;
P_0x8ddc20c .param/l "INST_ADDI" 3 25, C4<0101>;
P_0x8ddc220 .param/l "INST_BGE" 3 33, C4<1101>;
P_0x8ddc234 .param/l "INST_J" 3 31, C4<1011>;
P_0x8ddc248 .param/l "INST_JR" 3 32, C4<1100>;
P_0x8ddc25c .param/l "INST_LI" 3 30, C4<1010>;
P_0x8ddc270 .param/l "INST_LW" 3 23, C4<0011>;
P_0x8ddc284 .param/l "INST_LWRR" 3 28, C4<1000>;
P_0x8ddc298 .param/l "INST_MUL" 3 22, C4<0010>;
P_0x8ddc2ac .param/l "INST_MULI" 3 27, C4<0111>;
P_0x8ddc2c0 .param/l "INST_SUB" 3 21, C4<0001>;
P_0x8ddc2d4 .param/l "INST_SUBI" 3 26, C4<0110>;
P_0x8ddc2e8 .param/l "INST_SW" 3 24, C4<0100>;
P_0x8ddc2fc .param/l "INST_SWRR" 3 29, C4<1001>;
P_0x8ddc310 .param/l "LOADER_NUM" 3 38, +C4<011>;
P_0x8ddc324 .param/l "MEM_SIZE" 3 2, +C4<010000000000>;
P_0x8ddc338 .param/l "MULTER_NUM" 3 37, +C4<010>;
P_0x8ddc34c .param/l "MUL_STALL" 3 43, +C4<011>;
P_0x8ddc360 .param/l "NULL" 3 49, +C4<01111>;
P_0x8ddc374 .param/l "OPCODE_WIDTH" 3 15, +C4<0100>;
P_0x8ddc388 .param/l "RB_INDEX" 3 47, +C4<0100>;
P_0x8ddc39c .param/l "RB_SIZE" 3 46, +C4<01111>;
P_0x8ddc3b0 .param/l "RD_START" 3 17, +C4<010110>;
P_0x8ddc3c4 .param/l "READY" 3 48, +C4<01111>;
P_0x8ddc3d8 .param/l "REG_FILE_SIZE" 3 4, +C4<0100000>;
P_0x8ddc3ec .param/l "REG_INDEX" 3 3, +C4<0101>;
P_0x8ddc400 .param/l "RS_START" 3 16, +C4<011011>;
P_0x8ddc414 .param/l "RT_START" 3 18, +C4<010001>;
P_0x8ddc428 .param/l "STORER_NUM" 3 39, +C4<010>;
P_0x8ddc43c .param/l "TAG_SIZE" 3 8, +C4<010010>;
P_0x8ddc450 .param/l "WORD_SIZE" 3 1, +C4<0100000>;
P_0x8ddc464 .param/l "fuindex" 7 6, +C4<010>;
v0x8ddd698_0 .alias "CDB_data_data", 479 0, v0x8de7190_0;
v0x8ddd6f8_0 .alias "CDB_data_valid", 14 0, v0x8de71e0_0;
v0x8ddd748_0 .var "Qj", 3 0;
v0x8ddd7a8_0 .var "Qk", 3 0;
v0x8ddd7f8_0 .alias "RB_index", 3 0, v0x8de7230_0;
v0x8ddd848_0 .alias "RB_index_bus", 39 0, v0x8de7340_0;
v0x8ddd8b8_0 .var "Vj", 31 0;
v0x8ddd918_0 .var "Vk", 31 0;
v0x8ddd9a0_0 .net *"_s11", 0 0, v0x8dde020_0; 1 drivers
v0x8ddda00_0 .net *"_s15", 3 0, v0x8dddd28_0; 1 drivers
v0x8ddda90_0 .net *"_s3", 0 0, v0x8dddb50_0; 1 drivers
v0x8dddaf0_0 .net *"_s7", 31 0, v0x8dde088_0; 1 drivers
v0x8dddb50_0 .var "busy", 0 0;
v0x8dddbb0_0 .alias "busy_out", 9 0, v0x8de7570_0;
v0x8dddc40_0 .alias "clk", 0 0, v0x8de66e8_0;
v0x8dddc90_0 .alias "data_bus", 319 0, v0x8de73e0_0;
v0x8dddd28_0 .var "dest", 3 0;
v0x8dddd88_0 .alias "fu", 3 0, v0x8de7280_0;
v0x8ddde28_0 .alias "inst", 31 0, v0x8de72d0_0;
v0x8ddde78_0 .var "op", 3 0;
v0x8ddddd8_0 .alias "qj", 3 0, v0x8de78c0_0;
v0x8dddf20_0 .alias "qk", 3 0, v0x8de79c8_0;
v0x8dddec8_0 .var "reg_numj", 4 0;
v0x8dddfd0_0 .var "reg_numk", 4 0;
v0x8dddf70_0 .alias "reset", 0 0, v0x8de6828_0;
v0x8dde088_0 .var "result", 31 0;
v0x8dde020_0 .var "valid", 0 0;
v0x8dde148_0 .alias "valid_bus", 9 0, v0x8de7430_0;
v0x8dde0d8_0 .alias "vj", 31 0, v0x8de7c70_0;
v0x8dde210_0 .alias "vk", 31 0, v0x8de7b90_0;
L_0x8de8b28 .part/pv v0x8dddb50_0, 2, 1, 10;
L_0x8de8c08 .part/pv v0x8dde088_0, 64, 32, 320;
L_0x8de8ce8 .part/pv v0x8dde020_0, 2, 1, 10;
L_0x8de8dc8 .part/pv v0x8dddd28_0, 8, 4, 40;
S_0x8ddd3b8 .scope task, "checkAndGetData" "checkAndGetData" 7 142, 7 142, S_0x8ddc0c0;
 .timescale -9 -10;
v0x8ddd438_0 .var "Q", 3 0;
v0x8ddd4a8_0 .var "V", 31 0;
v0x8ddd508_0 .var "dataBus", 479 0;
v0x8ddd568_0 .var "ok", 0 0;
v0x8ddd5b8_0 .var "valid", 0 0;
v0x8ddd618_0 .var "validBus", 14 0;
TD_CPU.alu_rs\x5B2\x5D.checkAndGetData ;
    %load/v 8, v0x8ddd438_0, 4;
    %mov 12, 0, 2;
    %cmpi/u 8, 15, 6;
    %jmp/0xz  T_13.18, 6;
    %jmp T_13.19;
T_13.18 ;
    %load/v 8, v0x8ddd618_0, 15;
    %set/v v0x8ddce18_0, 8, 15;
    %load/v 8, v0x8ddd438_0, 4;
    %set/v v0x8ddce88_0, 8, 4;
    %fork TD_CPU.alu_rs\x5B2\x5D.readValidBus, S_0x8ddcd98;
    %join;
    %load/v  8, v0x8ddcee8_0, 1;
    %set/v v0x8ddd5b8_0, 8, 1;
    %load/v 8, v0x8ddd5b8_0, 1;
    %jmp/0xz  T_13.20, 8;
    %movi 8, 15, 5;
    %set/v v0x8ddd438_0, 8, 4;
    %load/v 8, v0x8ddd508_0, 480;
    %set/v v0x8ddcfc8_0, 8, 480;
    %load/v 8, v0x8ddd438_0, 4;
    %set/v v0x8ddd038_0, 8, 4;
    %fork TD_CPU.alu_rs\x5B2\x5D.readDataBus, S_0x8ddcf48;
    %join;
    %load/v  8, v0x8ddd098_0, 32;
    %set/v v0x8ddd4a8_0, 8, 32;
    %jmp T_13.21;
T_13.20 ;
    %set/v v0x8ddd568_0, 0, 1;
T_13.21 ;
T_13.19 ;
    %end;
S_0x8ddd0f8 .scope task, "getData" "getData" 7 107, 7 107, S_0x8ddc0c0;
 .timescale -9 -10;
v0x8ddd178_0 .var "CDB_data_data", 479 0;
v0x8ddd1e8_0 .var "CDB_data_valid", 14 0;
v0x8ddd248_0 .var "Q", 3 0;
v0x8ddd2a8_0 .var "V", 31 0;
v0x8ddd2f8_0 .var "q", 3 0;
v0x8ddd358_0 .var "v", 31 0;
TD_CPU.alu_rs\x5B2\x5D.getData ;
    %load/v 8, v0x8ddd2f8_0, 4;
    %mov 12, 0, 2;
    %cmpi/u 8, 15, 6;
    %jmp/0xz  T_14.22, 6;
    %load/v 8, v0x8ddd358_0, 32;
    %set/v v0x8ddd2a8_0, 8, 32;
    %movi 8, 15, 5;
    %set/v v0x8ddd248_0, 8, 4;
    %jmp T_14.23;
T_14.22 ;
    %load/v 8, v0x8ddd1e8_0, 15;
    %set/v v0x8ddce18_0, 8, 15;
    %load/v 8, v0x8ddd2f8_0, 4;
    %set/v v0x8ddce88_0, 8, 4;
    %fork TD_CPU.alu_rs\x5B2\x5D.readValidBus, S_0x8ddcd98;
    %join;
    %load/v  8, v0x8ddcee8_0, 1;
    %jmp/0xz  T_14.24, 8;
    %load/v 8, v0x8ddd178_0, 480;
    %set/v v0x8ddcfc8_0, 8, 480;
    %load/v 8, v0x8ddd2f8_0, 4;
    %set/v v0x8ddd038_0, 8, 4;
    %fork TD_CPU.alu_rs\x5B2\x5D.readDataBus, S_0x8ddcf48;
    %join;
    %load/v  8, v0x8ddd098_0, 32;
    %set/v v0x8ddd2a8_0, 8, 32;
    %movi 8, 15, 5;
    %set/v v0x8ddd248_0, 8, 4;
    %jmp T_14.25;
T_14.24 ;
    %load/v 8, v0x8ddd2f8_0, 4;
    %set/v v0x8ddd248_0, 8, 4;
T_14.25 ;
T_14.23 ;
    %end;
S_0x8ddcf48 .scope function, "readDataBus" "readDataBus" 7 126, 7 126, S_0x8ddc0c0;
 .timescale -9 -10;
v0x8ddcfc8_0 .var "CDB_data_data", 479 0;
v0x8ddd038_0 .var "index", 3 0;
v0x8ddd098_0 .var "readDataBus", 31 0;
TD_CPU.alu_rs\x5B2\x5D.readDataBus ;
    %load/v 8, v0x8ddcfc8_0, 480;
    %load/v 488, v0x8ddd038_0, 4;
    %movi 492, 0, 7;
    %muli 488, 32, 11;
    %ix/get 0, 488, 11;
    %shiftr/i0  8, 480;
    %set/v v0x8ddd098_0, 8, 32;
    %end;
S_0x8ddcd98 .scope function, "readValidBus" "readValidBus" 7 134, 7 134, S_0x8ddc0c0;
 .timescale -9 -10;
v0x8ddce18_0 .var "CDB_data_valid", 14 0;
v0x8ddce88_0 .var "index", 3 0;
v0x8ddcee8_0 .var "readValidBus", 0 0;
TD_CPU.alu_rs\x5B2\x5D.readValidBus ;
    %load/v 8, v0x8ddce18_0, 15;
    %load/v 23, v0x8ddce88_0, 4;
    %ix/get 0, 23, 4;
    %shiftr/i0  8, 15;
    %set/v v0x8ddcee8_0, 8, 1;
    %end;
S_0x8ddcd18 .scope begin, "checkIssue" "checkIssue" 7 49, 7 49, S_0x8ddc0c0;
 .timescale -9 -10;
S_0x8ddcc38 .scope begin, "execute" "execute" 7 71, 7 71, S_0x8ddc0c0;
 .timescale -9 -10;
v0x8ddccb8_0 .var "ok", 0 0;
S_0x8dd9ea0 .scope module, "alu_rs[3]" "ALU_RS" 2 61, 7 1, S_0x8d4f4b8;
 .timescale -9 -10;
P_0x8dd9f24 .param/l "ADDER_NUM" 3 36, +C4<011>;
P_0x8dd9f38 .param/l "ALU_ADD" 3 10, C4<0000>;
P_0x8dd9f4c .param/l "ALU_MUL" 3 12, C4<0010>;
P_0x8dd9f60 .param/l "ALU_SUB" 3 11, C4<0001>;
P_0x8dd9f74 .param/l "BLOCK_SIZE" 3 6, +C4<010000>;
P_0x8dd9f88 .param/l "CACHE_SIZE" 3 7, +C4<010000000000>;
P_0x8dd9f9c .param/l "FU_INDEX" 3 41, +C4<0100>;
P_0x8dd9fb0 .param/l "FU_NUM" 3 40, +C4<01010>;
P_0x8dd9fc4 .param/l "IMM_START" 3 19, +C4<010001>;
P_0x8dd9fd8 .param/l "INST_ADD" 3 20, C4<0000>;
P_0x8dd9fec .param/l "INST_ADDI" 3 25, C4<0101>;
P_0x8dda000 .param/l "INST_BGE" 3 33, C4<1101>;
P_0x8dda014 .param/l "INST_J" 3 31, C4<1011>;
P_0x8dda028 .param/l "INST_JR" 3 32, C4<1100>;
P_0x8dda03c .param/l "INST_LI" 3 30, C4<1010>;
P_0x8dda050 .param/l "INST_LW" 3 23, C4<0011>;
P_0x8dda064 .param/l "INST_LWRR" 3 28, C4<1000>;
P_0x8dda078 .param/l "INST_MUL" 3 22, C4<0010>;
P_0x8dda08c .param/l "INST_MULI" 3 27, C4<0111>;
P_0x8dda0a0 .param/l "INST_SUB" 3 21, C4<0001>;
P_0x8dda0b4 .param/l "INST_SUBI" 3 26, C4<0110>;
P_0x8dda0c8 .param/l "INST_SW" 3 24, C4<0100>;
P_0x8dda0dc .param/l "INST_SWRR" 3 29, C4<1001>;
P_0x8dda0f0 .param/l "LOADER_NUM" 3 38, +C4<011>;
P_0x8dda104 .param/l "MEM_SIZE" 3 2, +C4<010000000000>;
P_0x8dda118 .param/l "MULTER_NUM" 3 37, +C4<010>;
P_0x8dda12c .param/l "MUL_STALL" 3 43, +C4<011>;
P_0x8dda140 .param/l "NULL" 3 49, +C4<01111>;
P_0x8dda154 .param/l "OPCODE_WIDTH" 3 15, +C4<0100>;
P_0x8dda168 .param/l "RB_INDEX" 3 47, +C4<0100>;
P_0x8dda17c .param/l "RB_SIZE" 3 46, +C4<01111>;
P_0x8dda190 .param/l "RD_START" 3 17, +C4<010110>;
P_0x8dda1a4 .param/l "READY" 3 48, +C4<01111>;
P_0x8dda1b8 .param/l "REG_FILE_SIZE" 3 4, +C4<0100000>;
P_0x8dda1cc .param/l "REG_INDEX" 3 3, +C4<0101>;
P_0x8dda1e0 .param/l "RS_START" 3 16, +C4<011011>;
P_0x8dda1f4 .param/l "RT_START" 3 18, +C4<010001>;
P_0x8dda208 .param/l "STORER_NUM" 3 39, +C4<010>;
P_0x8dda21c .param/l "TAG_SIZE" 3 8, +C4<010010>;
P_0x8dda230 .param/l "WORD_SIZE" 3 1, +C4<0100000>;
P_0x8dda244 .param/l "fuindex" 7 6, +C4<011>;
v0x8ddb478_0 .alias "CDB_data_data", 479 0, v0x8de7190_0;
v0x8ddb4d8_0 .alias "CDB_data_valid", 14 0, v0x8de71e0_0;
v0x8ddb528_0 .var "Qj", 3 0;
v0x8ddb588_0 .var "Qk", 3 0;
v0x8ddb5d8_0 .alias "RB_index", 3 0, v0x8de7230_0;
v0x8ddb628_0 .alias "RB_index_bus", 39 0, v0x8de7340_0;
v0x8ddb698_0 .var "Vj", 31 0;
v0x8ddb6f8_0 .var "Vk", 31 0;
v0x8ddb780_0 .net *"_s11", 0 0, v0x8ddbe00_0; 1 drivers
v0x8ddb7e0_0 .net *"_s15", 3 0, v0x8ddbb08_0; 1 drivers
v0x8ddb870_0 .net *"_s3", 0 0, v0x8ddb930_0; 1 drivers
v0x8ddb8d0_0 .net *"_s7", 31 0, v0x8ddbe68_0; 1 drivers
v0x8ddb930_0 .var "busy", 0 0;
v0x8ddb990_0 .alias "busy_out", 9 0, v0x8de7570_0;
v0x8ddba20_0 .alias "clk", 0 0, v0x8de66e8_0;
v0x8ddba70_0 .alias "data_bus", 319 0, v0x8de73e0_0;
v0x8ddbb08_0 .var "dest", 3 0;
v0x8ddbb68_0 .alias "fu", 3 0, v0x8de7280_0;
v0x8ddbc08_0 .alias "inst", 31 0, v0x8de72d0_0;
v0x8ddbc58_0 .var "op", 3 0;
v0x8ddbbb8_0 .alias "qj", 3 0, v0x8de78c0_0;
v0x8ddbd00_0 .alias "qk", 3 0, v0x8de79c8_0;
v0x8ddbca8_0 .var "reg_numj", 4 0;
v0x8ddbdb0_0 .var "reg_numk", 4 0;
v0x8ddbd50_0 .alias "reset", 0 0, v0x8de6828_0;
v0x8ddbe68_0 .var "result", 31 0;
v0x8ddbe00_0 .var "valid", 0 0;
v0x8ddbf28_0 .alias "valid_bus", 9 0, v0x8de7430_0;
v0x8ddbeb8_0 .alias "vj", 31 0, v0x8de7c70_0;
v0x8ddbff0_0 .alias "vk", 31 0, v0x8de7b90_0;
L_0x8de8ec0 .part/pv v0x8ddb930_0, 3, 1, 10;
L_0x8de8fa0 .part/pv v0x8ddbe68_0, 96, 32, 320;
L_0x8de9080 .part/pv v0x8ddbe00_0, 3, 1, 10;
L_0x8de9160 .part/pv v0x8ddbb08_0, 12, 4, 40;
S_0x8ddb198 .scope task, "checkAndGetData" "checkAndGetData" 7 142, 7 142, S_0x8dd9ea0;
 .timescale -9 -10;
v0x8ddb218_0 .var "Q", 3 0;
v0x8ddb288_0 .var "V", 31 0;
v0x8ddb2e8_0 .var "dataBus", 479 0;
v0x8ddb348_0 .var "ok", 0 0;
v0x8ddb398_0 .var "valid", 0 0;
v0x8ddb3f8_0 .var "validBus", 14 0;
TD_CPU.alu_rs\x5B3\x5D.checkAndGetData ;
    %load/v 8, v0x8ddb218_0, 4;
    %mov 12, 0, 2;
    %cmpi/u 8, 15, 6;
    %jmp/0xz  T_17.26, 6;
    %jmp T_17.27;
T_17.26 ;
    %load/v 8, v0x8ddb3f8_0, 15;
    %set/v v0x8ddabf8_0, 8, 15;
    %load/v 8, v0x8ddb218_0, 4;
    %set/v v0x8ddac68_0, 8, 4;
    %fork TD_CPU.alu_rs\x5B3\x5D.readValidBus, S_0x8ddab78;
    %join;
    %load/v  8, v0x8ddacc8_0, 1;
    %set/v v0x8ddb398_0, 8, 1;
    %load/v 8, v0x8ddb398_0, 1;
    %jmp/0xz  T_17.28, 8;
    %movi 8, 15, 5;
    %set/v v0x8ddb218_0, 8, 4;
    %load/v 8, v0x8ddb2e8_0, 480;
    %set/v v0x8ddada8_0, 8, 480;
    %load/v 8, v0x8ddb218_0, 4;
    %set/v v0x8ddae18_0, 8, 4;
    %fork TD_CPU.alu_rs\x5B3\x5D.readDataBus, S_0x8ddad28;
    %join;
    %load/v  8, v0x8ddae78_0, 32;
    %set/v v0x8ddb288_0, 8, 32;
    %jmp T_17.29;
T_17.28 ;
    %set/v v0x8ddb348_0, 0, 1;
T_17.29 ;
T_17.27 ;
    %end;
S_0x8ddaed8 .scope task, "getData" "getData" 7 107, 7 107, S_0x8dd9ea0;
 .timescale -9 -10;
v0x8ddaf58_0 .var "CDB_data_data", 479 0;
v0x8ddafc8_0 .var "CDB_data_valid", 14 0;
v0x8ddb028_0 .var "Q", 3 0;
v0x8ddb088_0 .var "V", 31 0;
v0x8ddb0d8_0 .var "q", 3 0;
v0x8ddb138_0 .var "v", 31 0;
TD_CPU.alu_rs\x5B3\x5D.getData ;
    %load/v 8, v0x8ddb0d8_0, 4;
    %mov 12, 0, 2;
    %cmpi/u 8, 15, 6;
    %jmp/0xz  T_18.30, 6;
    %load/v 8, v0x8ddb138_0, 32;
    %set/v v0x8ddb088_0, 8, 32;
    %movi 8, 15, 5;
    %set/v v0x8ddb028_0, 8, 4;
    %jmp T_18.31;
T_18.30 ;
    %load/v 8, v0x8ddafc8_0, 15;
    %set/v v0x8ddabf8_0, 8, 15;
    %load/v 8, v0x8ddb0d8_0, 4;
    %set/v v0x8ddac68_0, 8, 4;
    %fork TD_CPU.alu_rs\x5B3\x5D.readValidBus, S_0x8ddab78;
    %join;
    %load/v  8, v0x8ddacc8_0, 1;
    %jmp/0xz  T_18.32, 8;
    %load/v 8, v0x8ddaf58_0, 480;
    %set/v v0x8ddada8_0, 8, 480;
    %load/v 8, v0x8ddb0d8_0, 4;
    %set/v v0x8ddae18_0, 8, 4;
    %fork TD_CPU.alu_rs\x5B3\x5D.readDataBus, S_0x8ddad28;
    %join;
    %load/v  8, v0x8ddae78_0, 32;
    %set/v v0x8ddb088_0, 8, 32;
    %movi 8, 15, 5;
    %set/v v0x8ddb028_0, 8, 4;
    %jmp T_18.33;
T_18.32 ;
    %load/v 8, v0x8ddb0d8_0, 4;
    %set/v v0x8ddb028_0, 8, 4;
T_18.33 ;
T_18.31 ;
    %end;
S_0x8ddad28 .scope function, "readDataBus" "readDataBus" 7 126, 7 126, S_0x8dd9ea0;
 .timescale -9 -10;
v0x8ddada8_0 .var "CDB_data_data", 479 0;
v0x8ddae18_0 .var "index", 3 0;
v0x8ddae78_0 .var "readDataBus", 31 0;
TD_CPU.alu_rs\x5B3\x5D.readDataBus ;
    %load/v 8, v0x8ddada8_0, 480;
    %load/v 488, v0x8ddae18_0, 4;
    %movi 492, 0, 7;
    %muli 488, 32, 11;
    %ix/get 0, 488, 11;
    %shiftr/i0  8, 480;
    %set/v v0x8ddae78_0, 8, 32;
    %end;
S_0x8ddab78 .scope function, "readValidBus" "readValidBus" 7 134, 7 134, S_0x8dd9ea0;
 .timescale -9 -10;
v0x8ddabf8_0 .var "CDB_data_valid", 14 0;
v0x8ddac68_0 .var "index", 3 0;
v0x8ddacc8_0 .var "readValidBus", 0 0;
TD_CPU.alu_rs\x5B3\x5D.readValidBus ;
    %load/v 8, v0x8ddabf8_0, 15;
    %load/v 23, v0x8ddac68_0, 4;
    %ix/get 0, 23, 4;
    %shiftr/i0  8, 15;
    %set/v v0x8ddacc8_0, 8, 1;
    %end;
S_0x8ddaaf8 .scope begin, "checkIssue" "checkIssue" 7 49, 7 49, S_0x8dd9ea0;
 .timescale -9 -10;
S_0x8ddaa18 .scope begin, "execute" "execute" 7 71, 7 71, S_0x8dd9ea0;
 .timescale -9 -10;
v0x8ddaa98_0 .var "ok", 0 0;
S_0x8dd7fb0 .scope module, "alu_rs[4]" "ALU_RS" 2 61, 7 1, S_0x8d4f4b8;
 .timescale -9 -10;
P_0x8dd8034 .param/l "ADDER_NUM" 3 36, +C4<011>;
P_0x8dd8048 .param/l "ALU_ADD" 3 10, C4<0000>;
P_0x8dd805c .param/l "ALU_MUL" 3 12, C4<0010>;
P_0x8dd8070 .param/l "ALU_SUB" 3 11, C4<0001>;
P_0x8dd8084 .param/l "BLOCK_SIZE" 3 6, +C4<010000>;
P_0x8dd8098 .param/l "CACHE_SIZE" 3 7, +C4<010000000000>;
P_0x8dd80ac .param/l "FU_INDEX" 3 41, +C4<0100>;
P_0x8dd80c0 .param/l "FU_NUM" 3 40, +C4<01010>;
P_0x8dd80d4 .param/l "IMM_START" 3 19, +C4<010001>;
P_0x8dd80e8 .param/l "INST_ADD" 3 20, C4<0000>;
P_0x8dd80fc .param/l "INST_ADDI" 3 25, C4<0101>;
P_0x8dd8110 .param/l "INST_BGE" 3 33, C4<1101>;
P_0x8dd8124 .param/l "INST_J" 3 31, C4<1011>;
P_0x8dd8138 .param/l "INST_JR" 3 32, C4<1100>;
P_0x8dd814c .param/l "INST_LI" 3 30, C4<1010>;
P_0x8dd8160 .param/l "INST_LW" 3 23, C4<0011>;
P_0x8dd8174 .param/l "INST_LWRR" 3 28, C4<1000>;
P_0x8dd8188 .param/l "INST_MUL" 3 22, C4<0010>;
P_0x8dd819c .param/l "INST_MULI" 3 27, C4<0111>;
P_0x8dd81b0 .param/l "INST_SUB" 3 21, C4<0001>;
P_0x8dd81c4 .param/l "INST_SUBI" 3 26, C4<0110>;
P_0x8dd81d8 .param/l "INST_SW" 3 24, C4<0100>;
P_0x8dd81ec .param/l "INST_SWRR" 3 29, C4<1001>;
P_0x8dd8200 .param/l "LOADER_NUM" 3 38, +C4<011>;
P_0x8dd8214 .param/l "MEM_SIZE" 3 2, +C4<010000000000>;
P_0x8dd8228 .param/l "MULTER_NUM" 3 37, +C4<010>;
P_0x8dd823c .param/l "MUL_STALL" 3 43, +C4<011>;
P_0x8dd8250 .param/l "NULL" 3 49, +C4<01111>;
P_0x8dd8264 .param/l "OPCODE_WIDTH" 3 15, +C4<0100>;
P_0x8dd8278 .param/l "RB_INDEX" 3 47, +C4<0100>;
P_0x8dd828c .param/l "RB_SIZE" 3 46, +C4<01111>;
P_0x8dd82a0 .param/l "RD_START" 3 17, +C4<010110>;
P_0x8dd82b4 .param/l "READY" 3 48, +C4<01111>;
P_0x8dd82c8 .param/l "REG_FILE_SIZE" 3 4, +C4<0100000>;
P_0x8dd82dc .param/l "REG_INDEX" 3 3, +C4<0101>;
P_0x8dd82f0 .param/l "RS_START" 3 16, +C4<011011>;
P_0x8dd8304 .param/l "RT_START" 3 18, +C4<010001>;
P_0x8dd8318 .param/l "STORER_NUM" 3 39, +C4<010>;
P_0x8dd832c .param/l "TAG_SIZE" 3 8, +C4<010010>;
P_0x8dd8340 .param/l "WORD_SIZE" 3 1, +C4<0100000>;
P_0x8dd8354 .param/l "fuindex" 7 6, +C4<0100>;
v0x8dd9258_0 .alias "CDB_data_data", 479 0, v0x8de7190_0;
v0x8dd92b8_0 .alias "CDB_data_valid", 14 0, v0x8de71e0_0;
v0x8dd9308_0 .var "Qj", 3 0;
v0x8dd9368_0 .var "Qk", 3 0;
v0x8dd93b8_0 .alias "RB_index", 3 0, v0x8de7230_0;
v0x8dd9408_0 .alias "RB_index_bus", 39 0, v0x8de7340_0;
v0x8dd9478_0 .var "Vj", 31 0;
v0x8dd94d8_0 .var "Vk", 31 0;
v0x8dd9560_0 .net *"_s11", 0 0, v0x8dd9be0_0; 1 drivers
v0x8dd95c0_0 .net *"_s15", 3 0, v0x8dd98e8_0; 1 drivers
v0x8dd9650_0 .net *"_s3", 0 0, v0x8dd9710_0; 1 drivers
v0x8dd96b0_0 .net *"_s7", 31 0, v0x8dd9c48_0; 1 drivers
v0x8dd9710_0 .var "busy", 0 0;
v0x8dd9770_0 .alias "busy_out", 9 0, v0x8de7570_0;
v0x8dd9800_0 .alias "clk", 0 0, v0x8de66e8_0;
v0x8dd9850_0 .alias "data_bus", 319 0, v0x8de73e0_0;
v0x8dd98e8_0 .var "dest", 3 0;
v0x8dd9948_0 .alias "fu", 3 0, v0x8de7280_0;
v0x8dd99e8_0 .alias "inst", 31 0, v0x8de72d0_0;
v0x8dd9a38_0 .var "op", 3 0;
v0x8dd9998_0 .alias "qj", 3 0, v0x8de78c0_0;
v0x8dd9ae0_0 .alias "qk", 3 0, v0x8de79c8_0;
v0x8dd9a88_0 .var "reg_numj", 4 0;
v0x8dd9b90_0 .var "reg_numk", 4 0;
v0x8dd9b30_0 .alias "reset", 0 0, v0x8de6828_0;
v0x8dd9c48_0 .var "result", 31 0;
v0x8dd9be0_0 .var "valid", 0 0;
v0x8dd9d08_0 .alias "valid_bus", 9 0, v0x8de7430_0;
v0x8dd9c98_0 .alias "vj", 31 0, v0x8de7c70_0;
v0x8dd9dd0_0 .alias "vk", 31 0, v0x8de7b90_0;
L_0x8de9258 .part/pv v0x8dd9710_0, 4, 1, 10;
L_0x8de9338 .part/pv v0x8dd9c48_0, 128, 32, 320;
L_0x8de9510 .part/pv v0x8dd9be0_0, 4, 1, 10;
L_0x8de0aa8 .part/pv v0x8dd98e8_0, 16, 4, 40;
S_0x8dd8f78 .scope task, "checkAndGetData" "checkAndGetData" 7 142, 7 142, S_0x8dd7fb0;
 .timescale -9 -10;
v0x8dd8ff8_0 .var "Q", 3 0;
v0x8dd9068_0 .var "V", 31 0;
v0x8dd90c8_0 .var "dataBus", 479 0;
v0x8dd9128_0 .var "ok", 0 0;
v0x8dd9178_0 .var "valid", 0 0;
v0x8dd91d8_0 .var "validBus", 14 0;
TD_CPU.alu_rs\x5B4\x5D.checkAndGetData ;
    %load/v 8, v0x8dd8ff8_0, 4;
    %mov 12, 0, 2;
    %cmpi/u 8, 15, 6;
    %jmp/0xz  T_21.34, 6;
    %jmp T_21.35;
T_21.34 ;
    %load/v 8, v0x8dd91d8_0, 15;
    %set/v v0x8dd89d8_0, 8, 15;
    %load/v 8, v0x8dd8ff8_0, 4;
    %set/v v0x8dd8a48_0, 8, 4;
    %fork TD_CPU.alu_rs\x5B4\x5D.readValidBus, S_0x8dd8958;
    %join;
    %load/v  8, v0x8dd8aa8_0, 1;
    %set/v v0x8dd9178_0, 8, 1;
    %load/v 8, v0x8dd9178_0, 1;
    %jmp/0xz  T_21.36, 8;
    %movi 8, 15, 5;
    %set/v v0x8dd8ff8_0, 8, 4;
    %load/v 8, v0x8dd90c8_0, 480;
    %set/v v0x8dd8b88_0, 8, 480;
    %load/v 8, v0x8dd8ff8_0, 4;
    %set/v v0x8dd8bf8_0, 8, 4;
    %fork TD_CPU.alu_rs\x5B4\x5D.readDataBus, S_0x8dd8b08;
    %join;
    %load/v  8, v0x8dd8c58_0, 32;
    %set/v v0x8dd9068_0, 8, 32;
    %jmp T_21.37;
T_21.36 ;
    %set/v v0x8dd9128_0, 0, 1;
T_21.37 ;
T_21.35 ;
    %end;
S_0x8dd8cb8 .scope task, "getData" "getData" 7 107, 7 107, S_0x8dd7fb0;
 .timescale -9 -10;
v0x8dd8d38_0 .var "CDB_data_data", 479 0;
v0x8dd8da8_0 .var "CDB_data_valid", 14 0;
v0x8dd8e08_0 .var "Q", 3 0;
v0x8dd8e68_0 .var "V", 31 0;
v0x8dd8eb8_0 .var "q", 3 0;
v0x8dd8f18_0 .var "v", 31 0;
TD_CPU.alu_rs\x5B4\x5D.getData ;
    %load/v 8, v0x8dd8eb8_0, 4;
    %mov 12, 0, 2;
    %cmpi/u 8, 15, 6;
    %jmp/0xz  T_22.38, 6;
    %load/v 8, v0x8dd8f18_0, 32;
    %set/v v0x8dd8e68_0, 8, 32;
    %movi 8, 15, 5;
    %set/v v0x8dd8e08_0, 8, 4;
    %jmp T_22.39;
T_22.38 ;
    %load/v 8, v0x8dd8da8_0, 15;
    %set/v v0x8dd89d8_0, 8, 15;
    %load/v 8, v0x8dd8eb8_0, 4;
    %set/v v0x8dd8a48_0, 8, 4;
    %fork TD_CPU.alu_rs\x5B4\x5D.readValidBus, S_0x8dd8958;
    %join;
    %load/v  8, v0x8dd8aa8_0, 1;
    %jmp/0xz  T_22.40, 8;
    %load/v 8, v0x8dd8d38_0, 480;
    %set/v v0x8dd8b88_0, 8, 480;
    %load/v 8, v0x8dd8eb8_0, 4;
    %set/v v0x8dd8bf8_0, 8, 4;
    %fork TD_CPU.alu_rs\x5B4\x5D.readDataBus, S_0x8dd8b08;
    %join;
    %load/v  8, v0x8dd8c58_0, 32;
    %set/v v0x8dd8e68_0, 8, 32;
    %movi 8, 15, 5;
    %set/v v0x8dd8e08_0, 8, 4;
    %jmp T_22.41;
T_22.40 ;
    %load/v 8, v0x8dd8eb8_0, 4;
    %set/v v0x8dd8e08_0, 8, 4;
T_22.41 ;
T_22.39 ;
    %end;
S_0x8dd8b08 .scope function, "readDataBus" "readDataBus" 7 126, 7 126, S_0x8dd7fb0;
 .timescale -9 -10;
v0x8dd8b88_0 .var "CDB_data_data", 479 0;
v0x8dd8bf8_0 .var "index", 3 0;
v0x8dd8c58_0 .var "readDataBus", 31 0;
TD_CPU.alu_rs\x5B4\x5D.readDataBus ;
    %load/v 8, v0x8dd8b88_0, 480;
    %load/v 488, v0x8dd8bf8_0, 4;
    %movi 492, 0, 7;
    %muli 488, 32, 11;
    %ix/get 0, 488, 11;
    %shiftr/i0  8, 480;
    %set/v v0x8dd8c58_0, 8, 32;
    %end;
S_0x8dd8958 .scope function, "readValidBus" "readValidBus" 7 134, 7 134, S_0x8dd7fb0;
 .timescale -9 -10;
v0x8dd89d8_0 .var "CDB_data_valid", 14 0;
v0x8dd8a48_0 .var "index", 3 0;
v0x8dd8aa8_0 .var "readValidBus", 0 0;
TD_CPU.alu_rs\x5B4\x5D.readValidBus ;
    %load/v 8, v0x8dd89d8_0, 15;
    %load/v 23, v0x8dd8a48_0, 4;
    %ix/get 0, 23, 4;
    %shiftr/i0  8, 15;
    %set/v v0x8dd8aa8_0, 8, 1;
    %end;
S_0x8dd88d8 .scope begin, "checkIssue" "checkIssue" 7 49, 7 49, S_0x8dd7fb0;
 .timescale -9 -10;
S_0x8dd87e8 .scope begin, "execute" "execute" 7 71, 7 71, S_0x8dd7fb0;
 .timescale -9 -10;
v0x8dd8868_0 .var "ok", 0 0;
S_0x8dd5728 .scope module, "alu_rs[5]" "ALU_RS" 2 61, 7 1, S_0x8d4f4b8;
 .timescale -9 -10;
P_0x8dd57ac .param/l "ADDER_NUM" 3 36, +C4<011>;
P_0x8dd57c0 .param/l "ALU_ADD" 3 10, C4<0000>;
P_0x8dd57d4 .param/l "ALU_MUL" 3 12, C4<0010>;
P_0x8dd57e8 .param/l "ALU_SUB" 3 11, C4<0001>;
P_0x8dd57fc .param/l "BLOCK_SIZE" 3 6, +C4<010000>;
P_0x8dd5810 .param/l "CACHE_SIZE" 3 7, +C4<010000000000>;
P_0x8dd5824 .param/l "FU_INDEX" 3 41, +C4<0100>;
P_0x8dd5838 .param/l "FU_NUM" 3 40, +C4<01010>;
P_0x8dd584c .param/l "IMM_START" 3 19, +C4<010001>;
P_0x8dd5860 .param/l "INST_ADD" 3 20, C4<0000>;
P_0x8dd5874 .param/l "INST_ADDI" 3 25, C4<0101>;
P_0x8dd5888 .param/l "INST_BGE" 3 33, C4<1101>;
P_0x8dd589c .param/l "INST_J" 3 31, C4<1011>;
P_0x8dd58b0 .param/l "INST_JR" 3 32, C4<1100>;
P_0x8dd58c4 .param/l "INST_LI" 3 30, C4<1010>;
P_0x8dd58d8 .param/l "INST_LW" 3 23, C4<0011>;
P_0x8dd58ec .param/l "INST_LWRR" 3 28, C4<1000>;
P_0x8dd5900 .param/l "INST_MUL" 3 22, C4<0010>;
P_0x8dd5914 .param/l "INST_MULI" 3 27, C4<0111>;
P_0x8dd5928 .param/l "INST_SUB" 3 21, C4<0001>;
P_0x8dd593c .param/l "INST_SUBI" 3 26, C4<0110>;
P_0x8dd5950 .param/l "INST_SW" 3 24, C4<0100>;
P_0x8dd5964 .param/l "INST_SWRR" 3 29, C4<1001>;
P_0x8dd5978 .param/l "LOADER_NUM" 3 38, +C4<011>;
P_0x8dd598c .param/l "MEM_SIZE" 3 2, +C4<010000000000>;
P_0x8dd59a0 .param/l "MULTER_NUM" 3 37, +C4<010>;
P_0x8dd59b4 .param/l "MUL_STALL" 3 43, +C4<011>;
P_0x8dd59c8 .param/l "NULL" 3 49, +C4<01111>;
P_0x8dd59dc .param/l "OPCODE_WIDTH" 3 15, +C4<0100>;
P_0x8dd59f0 .param/l "RB_INDEX" 3 47, +C4<0100>;
P_0x8dd5a04 .param/l "RB_SIZE" 3 46, +C4<01111>;
P_0x8dd5a18 .param/l "RD_START" 3 17, +C4<010110>;
P_0x8dd5a2c .param/l "READY" 3 48, +C4<01111>;
P_0x8dd5a40 .param/l "REG_FILE_SIZE" 3 4, +C4<0100000>;
P_0x8dd5a54 .param/l "REG_INDEX" 3 3, +C4<0101>;
P_0x8dd5a68 .param/l "RS_START" 3 16, +C4<011011>;
P_0x8dd5a7c .param/l "RT_START" 3 18, +C4<010001>;
P_0x8dd5a90 .param/l "STORER_NUM" 3 39, +C4<010>;
P_0x8dd5aa4 .param/l "TAG_SIZE" 3 8, +C4<010010>;
P_0x8dd5ab8 .param/l "WORD_SIZE" 3 1, +C4<0100000>;
P_0x8dd5acc .param/l "fuindex" 7 6, +C4<0101>;
v0x8dd6d00_0 .alias "CDB_data_data", 479 0, v0x8de7190_0;
v0x8dd6dc8_0 .alias "CDB_data_valid", 14 0, v0x8de71e0_0;
v0x8dd6e80_0 .var "Qj", 3 0;
v0x8dd6ee0_0 .var "Qk", 3 0;
v0x8dd6f30_0 .alias "RB_index", 3 0, v0x8de7230_0;
v0x8dd6fe8_0 .alias "RB_index_bus", 39 0, v0x8de7340_0;
v0x8dd70c0_0 .var "Vj", 31 0;
v0x8dd7120_0 .var "Vk", 31 0;
v0x8dd71a8_0 .net *"_s11", 0 0, v0x8dd7b68_0; 1 drivers
v0x8dd7208_0 .net *"_s15", 3 0, v0x8dd7668_0; 1 drivers
v0x8dd7298_0 .net *"_s3", 0 0, v0x8dd7358_0; 1 drivers
v0x8dd72f8_0 .net *"_s7", 31 0, v0x8dd7ca0_0; 1 drivers
v0x8dd7358_0 .var "busy", 0 0;
v0x8dd73b8_0 .alias "busy_out", 9 0, v0x8de7570_0;
v0x8dd74b0_0 .alias "clk", 0 0, v0x8de66e8_0;
v0x8dd7568_0 .alias "data_bus", 319 0, v0x8de73e0_0;
v0x8dd7668_0 .var "dest", 3 0;
v0x8dd76c8_0 .alias "fu", 3 0, v0x8de7280_0;
v0x8dd77d0_0 .alias "inst", 31 0, v0x8de72d0_0;
v0x8dd7888_0 .var "op", 3 0;
v0x8dd7718_0 .alias "qj", 3 0, v0x8de78c0_0;
v0x8dd7998_0 .alias "qk", 3 0, v0x8de79c8_0;
v0x8dd78d8_0 .var "reg_numj", 4 0;
v0x8dd7b18_0 .var "reg_numk", 4 0;
v0x8dd79e8_0 .alias "reset", 0 0, v0x8de6828_0;
v0x8dd7ca0_0 .var "result", 31 0;
v0x8dd7b68_0 .var "valid", 0 0;
v0x8dd7d60_0 .alias "valid_bus", 9 0, v0x8de7430_0;
v0x8dd7e28_0 .alias "vj", 31 0, v0x8de7c70_0;
v0x8dd7ee0_0 .alias "vk", 31 0, v0x8de7b90_0;
L_0x8de9870 .part/pv v0x8dd7358_0, 5, 1, 10;
L_0x8de0070 .part/pv v0x8dd7ca0_0, 160, 32, 320;
L_0x8de9ad8 .part/pv v0x8dd7b68_0, 5, 1, 10;
L_0x8de9bb8 .part/pv v0x8dd7668_0, 20, 4, 40;
S_0x8dd6a20 .scope task, "checkAndGetData" "checkAndGetData" 7 142, 7 142, S_0x8dd5728;
 .timescale -9 -10;
v0x8dd6aa0_0 .var "Q", 3 0;
v0x8dd6b10_0 .var "V", 31 0;
v0x8dd6b70_0 .var "dataBus", 479 0;
v0x8dd6bd0_0 .var "ok", 0 0;
v0x8dd6c20_0 .var "valid", 0 0;
v0x8dd6c80_0 .var "validBus", 14 0;
TD_CPU.alu_rs\x5B5\x5D.checkAndGetData ;
    %load/v 8, v0x8dd6aa0_0, 4;
    %mov 12, 0, 2;
    %cmpi/u 8, 15, 6;
    %jmp/0xz  T_25.42, 6;
    %jmp T_25.43;
T_25.42 ;
    %load/v 8, v0x8dd6c80_0, 15;
    %set/v v0x8dd6480_0, 8, 15;
    %load/v 8, v0x8dd6aa0_0, 4;
    %set/v v0x8dd64f0_0, 8, 4;
    %fork TD_CPU.alu_rs\x5B5\x5D.readValidBus, S_0x8dd6400;
    %join;
    %load/v  8, v0x8dd6550_0, 1;
    %set/v v0x8dd6c20_0, 8, 1;
    %load/v 8, v0x8dd6c20_0, 1;
    %jmp/0xz  T_25.44, 8;
    %movi 8, 15, 5;
    %set/v v0x8dd6aa0_0, 8, 4;
    %load/v 8, v0x8dd6b70_0, 480;
    %set/v v0x8dd6630_0, 8, 480;
    %load/v 8, v0x8dd6aa0_0, 4;
    %set/v v0x8dd66a0_0, 8, 4;
    %fork TD_CPU.alu_rs\x5B5\x5D.readDataBus, S_0x8dd65b0;
    %join;
    %load/v  8, v0x8dd6700_0, 32;
    %set/v v0x8dd6b10_0, 8, 32;
    %jmp T_25.45;
T_25.44 ;
    %set/v v0x8dd6bd0_0, 0, 1;
T_25.45 ;
T_25.43 ;
    %end;
S_0x8dd6760 .scope task, "getData" "getData" 7 107, 7 107, S_0x8dd5728;
 .timescale -9 -10;
v0x8dd67e0_0 .var "CDB_data_data", 479 0;
v0x8dd6850_0 .var "CDB_data_valid", 14 0;
v0x8dd68b0_0 .var "Q", 3 0;
v0x8dd6910_0 .var "V", 31 0;
v0x8dd6960_0 .var "q", 3 0;
v0x8dd69c0_0 .var "v", 31 0;
TD_CPU.alu_rs\x5B5\x5D.getData ;
    %load/v 8, v0x8dd6960_0, 4;
    %mov 12, 0, 2;
    %cmpi/u 8, 15, 6;
    %jmp/0xz  T_26.46, 6;
    %load/v 8, v0x8dd69c0_0, 32;
    %set/v v0x8dd6910_0, 8, 32;
    %movi 8, 15, 5;
    %set/v v0x8dd68b0_0, 8, 4;
    %jmp T_26.47;
T_26.46 ;
    %load/v 8, v0x8dd6850_0, 15;
    %set/v v0x8dd6480_0, 8, 15;
    %load/v 8, v0x8dd6960_0, 4;
    %set/v v0x8dd64f0_0, 8, 4;
    %fork TD_CPU.alu_rs\x5B5\x5D.readValidBus, S_0x8dd6400;
    %join;
    %load/v  8, v0x8dd6550_0, 1;
    %jmp/0xz  T_26.48, 8;
    %load/v 8, v0x8dd67e0_0, 480;
    %set/v v0x8dd6630_0, 8, 480;
    %load/v 8, v0x8dd6960_0, 4;
    %set/v v0x8dd66a0_0, 8, 4;
    %fork TD_CPU.alu_rs\x5B5\x5D.readDataBus, S_0x8dd65b0;
    %join;
    %load/v  8, v0x8dd6700_0, 32;
    %set/v v0x8dd6910_0, 8, 32;
    %movi 8, 15, 5;
    %set/v v0x8dd68b0_0, 8, 4;
    %jmp T_26.49;
T_26.48 ;
    %load/v 8, v0x8dd6960_0, 4;
    %set/v v0x8dd68b0_0, 8, 4;
T_26.49 ;
T_26.47 ;
    %end;
S_0x8dd65b0 .scope function, "readDataBus" "readDataBus" 7 126, 7 126, S_0x8dd5728;
 .timescale -9 -10;
v0x8dd6630_0 .var "CDB_data_data", 479 0;
v0x8dd66a0_0 .var "index", 3 0;
v0x8dd6700_0 .var "readDataBus", 31 0;
TD_CPU.alu_rs\x5B5\x5D.readDataBus ;
    %load/v 8, v0x8dd6630_0, 480;
    %load/v 488, v0x8dd66a0_0, 4;
    %movi 492, 0, 7;
    %muli 488, 32, 11;
    %ix/get 0, 488, 11;
    %shiftr/i0  8, 480;
    %set/v v0x8dd6700_0, 8, 32;
    %end;
S_0x8dd6400 .scope function, "readValidBus" "readValidBus" 7 134, 7 134, S_0x8dd5728;
 .timescale -9 -10;
v0x8dd6480_0 .var "CDB_data_valid", 14 0;
v0x8dd64f0_0 .var "index", 3 0;
v0x8dd6550_0 .var "readValidBus", 0 0;
TD_CPU.alu_rs\x5B5\x5D.readValidBus ;
    %load/v 8, v0x8dd6480_0, 15;
    %load/v 23, v0x8dd64f0_0, 4;
    %ix/get 0, 23, 4;
    %shiftr/i0  8, 15;
    %set/v v0x8dd6550_0, 8, 1;
    %end;
S_0x8dd6380 .scope begin, "checkIssue" "checkIssue" 7 49, 7 49, S_0x8dd5728;
 .timescale -9 -10;
S_0x8dd6290 .scope begin, "execute" "execute" 7 71, 7 71, S_0x8dd5728;
 .timescale -9 -10;
v0x8dd6310_0 .var "ok", 0 0;
S_0x8dd3678 .scope module, "alu_rs[6]" "ALU_RS" 2 61, 7 1, S_0x8d4f4b8;
 .timescale -9 -10;
P_0x8dd36fc .param/l "ADDER_NUM" 3 36, +C4<011>;
P_0x8dd3710 .param/l "ALU_ADD" 3 10, C4<0000>;
P_0x8dd3724 .param/l "ALU_MUL" 3 12, C4<0010>;
P_0x8dd3738 .param/l "ALU_SUB" 3 11, C4<0001>;
P_0x8dd374c .param/l "BLOCK_SIZE" 3 6, +C4<010000>;
P_0x8dd3760 .param/l "CACHE_SIZE" 3 7, +C4<010000000000>;
P_0x8dd3774 .param/l "FU_INDEX" 3 41, +C4<0100>;
P_0x8dd3788 .param/l "FU_NUM" 3 40, +C4<01010>;
P_0x8dd379c .param/l "IMM_START" 3 19, +C4<010001>;
P_0x8dd37b0 .param/l "INST_ADD" 3 20, C4<0000>;
P_0x8dd37c4 .param/l "INST_ADDI" 3 25, C4<0101>;
P_0x8dd37d8 .param/l "INST_BGE" 3 33, C4<1101>;
P_0x8dd37ec .param/l "INST_J" 3 31, C4<1011>;
P_0x8dd3800 .param/l "INST_JR" 3 32, C4<1100>;
P_0x8dd3814 .param/l "INST_LI" 3 30, C4<1010>;
P_0x8dd3828 .param/l "INST_LW" 3 23, C4<0011>;
P_0x8dd383c .param/l "INST_LWRR" 3 28, C4<1000>;
P_0x8dd3850 .param/l "INST_MUL" 3 22, C4<0010>;
P_0x8dd3864 .param/l "INST_MULI" 3 27, C4<0111>;
P_0x8dd3878 .param/l "INST_SUB" 3 21, C4<0001>;
P_0x8dd388c .param/l "INST_SUBI" 3 26, C4<0110>;
P_0x8dd38a0 .param/l "INST_SW" 3 24, C4<0100>;
P_0x8dd38b4 .param/l "INST_SWRR" 3 29, C4<1001>;
P_0x8dd38c8 .param/l "LOADER_NUM" 3 38, +C4<011>;
P_0x8dd38dc .param/l "MEM_SIZE" 3 2, +C4<010000000000>;
P_0x8dd38f0 .param/l "MULTER_NUM" 3 37, +C4<010>;
P_0x8dd3904 .param/l "MUL_STALL" 3 43, +C4<011>;
P_0x8dd3918 .param/l "NULL" 3 49, +C4<01111>;
P_0x8dd392c .param/l "OPCODE_WIDTH" 3 15, +C4<0100>;
P_0x8dd3940 .param/l "RB_INDEX" 3 47, +C4<0100>;
P_0x8dd3954 .param/l "RB_SIZE" 3 46, +C4<01111>;
P_0x8dd3968 .param/l "RD_START" 3 17, +C4<010110>;
P_0x8dd397c .param/l "READY" 3 48, +C4<01111>;
P_0x8dd3990 .param/l "REG_FILE_SIZE" 3 4, +C4<0100000>;
P_0x8dd39a4 .param/l "REG_INDEX" 3 3, +C4<0101>;
P_0x8dd39b8 .param/l "RS_START" 3 16, +C4<011011>;
P_0x8dd39cc .param/l "RT_START" 3 18, +C4<010001>;
P_0x8dd39e0 .param/l "STORER_NUM" 3 39, +C4<010>;
P_0x8dd39f4 .param/l "TAG_SIZE" 3 8, +C4<010010>;
P_0x8dd3a08 .param/l "WORD_SIZE" 3 1, +C4<0100000>;
P_0x8dd3a1c .param/l "fuindex" 7 6, +C4<0110>;
v0x8dd4ae0_0 .alias "CDB_data_data", 479 0, v0x8de7190_0;
v0x8dd4b40_0 .alias "CDB_data_valid", 14 0, v0x8de71e0_0;
v0x8dd4b90_0 .var "Qj", 3 0;
v0x8dd4bf0_0 .var "Qk", 3 0;
v0x8dd4c40_0 .alias "RB_index", 3 0, v0x8de7230_0;
v0x8dd4c90_0 .alias "RB_index_bus", 39 0, v0x8de7340_0;
v0x8dd4d00_0 .var "Vj", 31 0;
v0x8dd4d60_0 .var "Vk", 31 0;
v0x8dd4de8_0 .net *"_s11", 0 0, v0x8dd5468_0; 1 drivers
v0x8dd4e48_0 .net *"_s15", 3 0, v0x8dd5170_0; 1 drivers
v0x8dd4ed8_0 .net *"_s3", 0 0, v0x8dd4f98_0; 1 drivers
v0x8dd4f38_0 .net *"_s7", 31 0, v0x8dd54d0_0; 1 drivers
v0x8dd4f98_0 .var "busy", 0 0;
v0x8dd4ff8_0 .alias "busy_out", 9 0, v0x8de7570_0;
v0x8dd5088_0 .alias "clk", 0 0, v0x8de66e8_0;
v0x8dd50d8_0 .alias "data_bus", 319 0, v0x8de73e0_0;
v0x8dd5170_0 .var "dest", 3 0;
v0x8dd51d0_0 .alias "fu", 3 0, v0x8de7280_0;
v0x8dd5270_0 .alias "inst", 31 0, v0x8de72d0_0;
v0x8dd52c0_0 .var "op", 3 0;
v0x8dd5220_0 .alias "qj", 3 0, v0x8de78c0_0;
v0x8dd5368_0 .alias "qk", 3 0, v0x8de79c8_0;
v0x8dd5310_0 .var "reg_numj", 4 0;
v0x8dd5418_0 .var "reg_numk", 4 0;
v0x8dd53b8_0 .alias "reset", 0 0, v0x8de6828_0;
v0x8dd54d0_0 .var "result", 31 0;
v0x8dd5468_0 .var "valid", 0 0;
v0x8dd5590_0 .alias "valid_bus", 9 0, v0x8de7430_0;
v0x8dd5520_0 .alias "vj", 31 0, v0x8de7c70_0;
v0x8dd5658_0 .alias "vk", 31 0, v0x8de7b90_0;
L_0x8de9c98 .part/pv v0x8dd4f98_0, 6, 1, 10;
L_0x8de9d78 .part/pv v0x8dd54d0_0, 192, 32, 320;
L_0x8de9e58 .part/pv v0x8dd5468_0, 6, 1, 10;
L_0x8de9f38 .part/pv v0x8dd5170_0, 24, 4, 40;
S_0x8dd4800 .scope task, "checkAndGetData" "checkAndGetData" 7 142, 7 142, S_0x8dd3678;
 .timescale -9 -10;
v0x8dd4880_0 .var "Q", 3 0;
v0x8dd48f0_0 .var "V", 31 0;
v0x8dd4950_0 .var "dataBus", 479 0;
v0x8dd49b0_0 .var "ok", 0 0;
v0x8dd4a00_0 .var "valid", 0 0;
v0x8dd4a60_0 .var "validBus", 14 0;
TD_CPU.alu_rs\x5B6\x5D.checkAndGetData ;
    %load/v 8, v0x8dd4880_0, 4;
    %mov 12, 0, 2;
    %cmpi/u 8, 15, 6;
    %jmp/0xz  T_29.50, 6;
    %jmp T_29.51;
T_29.50 ;
    %load/v 8, v0x8dd4a60_0, 15;
    %set/v v0x8dd4260_0, 8, 15;
    %load/v 8, v0x8dd4880_0, 4;
    %set/v v0x8dd42d0_0, 8, 4;
    %fork TD_CPU.alu_rs\x5B6\x5D.readValidBus, S_0x8dd41e0;
    %join;
    %load/v  8, v0x8dd4330_0, 1;
    %set/v v0x8dd4a00_0, 8, 1;
    %load/v 8, v0x8dd4a00_0, 1;
    %jmp/0xz  T_29.52, 8;
    %movi 8, 15, 5;
    %set/v v0x8dd4880_0, 8, 4;
    %load/v 8, v0x8dd4950_0, 480;
    %set/v v0x8dd4410_0, 8, 480;
    %load/v 8, v0x8dd4880_0, 4;
    %set/v v0x8dd4480_0, 8, 4;
    %fork TD_CPU.alu_rs\x5B6\x5D.readDataBus, S_0x8dd4390;
    %join;
    %load/v  8, v0x8dd44e0_0, 32;
    %set/v v0x8dd48f0_0, 8, 32;
    %jmp T_29.53;
T_29.52 ;
    %set/v v0x8dd49b0_0, 0, 1;
T_29.53 ;
T_29.51 ;
    %end;
S_0x8dd4540 .scope task, "getData" "getData" 7 107, 7 107, S_0x8dd3678;
 .timescale -9 -10;
v0x8dd45c0_0 .var "CDB_data_data", 479 0;
v0x8dd4630_0 .var "CDB_data_valid", 14 0;
v0x8dd4690_0 .var "Q", 3 0;
v0x8dd46f0_0 .var "V", 31 0;
v0x8dd4740_0 .var "q", 3 0;
v0x8dd47a0_0 .var "v", 31 0;
TD_CPU.alu_rs\x5B6\x5D.getData ;
    %load/v 8, v0x8dd4740_0, 4;
    %mov 12, 0, 2;
    %cmpi/u 8, 15, 6;
    %jmp/0xz  T_30.54, 6;
    %load/v 8, v0x8dd47a0_0, 32;
    %set/v v0x8dd46f0_0, 8, 32;
    %movi 8, 15, 5;
    %set/v v0x8dd4690_0, 8, 4;
    %jmp T_30.55;
T_30.54 ;
    %load/v 8, v0x8dd4630_0, 15;
    %set/v v0x8dd4260_0, 8, 15;
    %load/v 8, v0x8dd4740_0, 4;
    %set/v v0x8dd42d0_0, 8, 4;
    %fork TD_CPU.alu_rs\x5B6\x5D.readValidBus, S_0x8dd41e0;
    %join;
    %load/v  8, v0x8dd4330_0, 1;
    %jmp/0xz  T_30.56, 8;
    %load/v 8, v0x8dd45c0_0, 480;
    %set/v v0x8dd4410_0, 8, 480;
    %load/v 8, v0x8dd4740_0, 4;
    %set/v v0x8dd4480_0, 8, 4;
    %fork TD_CPU.alu_rs\x5B6\x5D.readDataBus, S_0x8dd4390;
    %join;
    %load/v  8, v0x8dd44e0_0, 32;
    %set/v v0x8dd46f0_0, 8, 32;
    %movi 8, 15, 5;
    %set/v v0x8dd4690_0, 8, 4;
    %jmp T_30.57;
T_30.56 ;
    %load/v 8, v0x8dd4740_0, 4;
    %set/v v0x8dd4690_0, 8, 4;
T_30.57 ;
T_30.55 ;
    %end;
S_0x8dd4390 .scope function, "readDataBus" "readDataBus" 7 126, 7 126, S_0x8dd3678;
 .timescale -9 -10;
v0x8dd4410_0 .var "CDB_data_data", 479 0;
v0x8dd4480_0 .var "index", 3 0;
v0x8dd44e0_0 .var "readDataBus", 31 0;
TD_CPU.alu_rs\x5B6\x5D.readDataBus ;
    %load/v 8, v0x8dd4410_0, 480;
    %load/v 488, v0x8dd4480_0, 4;
    %movi 492, 0, 7;
    %muli 488, 32, 11;
    %ix/get 0, 488, 11;
    %shiftr/i0  8, 480;
    %set/v v0x8dd44e0_0, 8, 32;
    %end;
S_0x8dd41e0 .scope function, "readValidBus" "readValidBus" 7 134, 7 134, S_0x8dd3678;
 .timescale -9 -10;
v0x8dd4260_0 .var "CDB_data_valid", 14 0;
v0x8dd42d0_0 .var "index", 3 0;
v0x8dd4330_0 .var "readValidBus", 0 0;
TD_CPU.alu_rs\x5B6\x5D.readValidBus ;
    %load/v 8, v0x8dd4260_0, 15;
    %load/v 23, v0x8dd42d0_0, 4;
    %ix/get 0, 23, 4;
    %shiftr/i0  8, 15;
    %set/v v0x8dd4330_0, 8, 1;
    %end;
S_0x8dd4160 .scope begin, "checkIssue" "checkIssue" 7 49, 7 49, S_0x8dd3678;
 .timescale -9 -10;
S_0x8dd4070 .scope begin, "execute" "execute" 7 71, 7 71, S_0x8dd3678;
 .timescale -9 -10;
v0x8dd40f0_0 .var "ok", 0 0;
S_0x8dd11d8 .scope module, "alu_rs[7]" "ALU_RS" 2 61, 7 1, S_0x8d4f4b8;
 .timescale -9 -10;
P_0x8dd125c .param/l "ADDER_NUM" 3 36, +C4<011>;
P_0x8dd1270 .param/l "ALU_ADD" 3 10, C4<0000>;
P_0x8dd1284 .param/l "ALU_MUL" 3 12, C4<0010>;
P_0x8dd1298 .param/l "ALU_SUB" 3 11, C4<0001>;
P_0x8dd12ac .param/l "BLOCK_SIZE" 3 6, +C4<010000>;
P_0x8dd12c0 .param/l "CACHE_SIZE" 3 7, +C4<010000000000>;
P_0x8dd12d4 .param/l "FU_INDEX" 3 41, +C4<0100>;
P_0x8dd12e8 .param/l "FU_NUM" 3 40, +C4<01010>;
P_0x8dd12fc .param/l "IMM_START" 3 19, +C4<010001>;
P_0x8dd1310 .param/l "INST_ADD" 3 20, C4<0000>;
P_0x8dd1324 .param/l "INST_ADDI" 3 25, C4<0101>;
P_0x8dd1338 .param/l "INST_BGE" 3 33, C4<1101>;
P_0x8dd134c .param/l "INST_J" 3 31, C4<1011>;
P_0x8dd1360 .param/l "INST_JR" 3 32, C4<1100>;
P_0x8dd1374 .param/l "INST_LI" 3 30, C4<1010>;
P_0x8dd1388 .param/l "INST_LW" 3 23, C4<0011>;
P_0x8dd139c .param/l "INST_LWRR" 3 28, C4<1000>;
P_0x8dd13b0 .param/l "INST_MUL" 3 22, C4<0010>;
P_0x8dd13c4 .param/l "INST_MULI" 3 27, C4<0111>;
P_0x8dd13d8 .param/l "INST_SUB" 3 21, C4<0001>;
P_0x8dd13ec .param/l "INST_SUBI" 3 26, C4<0110>;
P_0x8dd1400 .param/l "INST_SW" 3 24, C4<0100>;
P_0x8dd1414 .param/l "INST_SWRR" 3 29, C4<1001>;
P_0x8dd1428 .param/l "LOADER_NUM" 3 38, +C4<011>;
P_0x8dd143c .param/l "MEM_SIZE" 3 2, +C4<010000000000>;
P_0x8dd1450 .param/l "MULTER_NUM" 3 37, +C4<010>;
P_0x8dd1464 .param/l "MUL_STALL" 3 43, +C4<011>;
P_0x8dd1478 .param/l "NULL" 3 49, +C4<01111>;
P_0x8dd148c .param/l "OPCODE_WIDTH" 3 15, +C4<0100>;
P_0x8dd14a0 .param/l "RB_INDEX" 3 47, +C4<0100>;
P_0x8dd14b4 .param/l "RB_SIZE" 3 46, +C4<01111>;
P_0x8dd14c8 .param/l "RD_START" 3 17, +C4<010110>;
P_0x8dd14dc .param/l "READY" 3 48, +C4<01111>;
P_0x8dd14f0 .param/l "REG_FILE_SIZE" 3 4, +C4<0100000>;
P_0x8dd1504 .param/l "REG_INDEX" 3 3, +C4<0101>;
P_0x8dd1518 .param/l "RS_START" 3 16, +C4<011011>;
P_0x8dd152c .param/l "RT_START" 3 18, +C4<010001>;
P_0x8dd1540 .param/l "STORER_NUM" 3 39, +C4<010>;
P_0x8dd1554 .param/l "TAG_SIZE" 3 8, +C4<010010>;
P_0x8dd1568 .param/l "WORD_SIZE" 3 1, +C4<0100000>;
P_0x8dd157c .param/l "fuindex" 7 6, +C4<0111>;
v0x8dd2730_0 .alias "CDB_data_data", 479 0, v0x8de7190_0;
v0x8dd2790_0 .alias "CDB_data_valid", 14 0, v0x8de71e0_0;
v0x8dd2818_0 .var "Qj", 3 0;
v0x8dd2878_0 .var "Qk", 3 0;
v0x8dd28c8_0 .alias "RB_index", 3 0, v0x8de7230_0;
v0x8dd2950_0 .alias "RB_index_bus", 39 0, v0x8de7340_0;
v0x8dd29d8_0 .var "Vj", 31 0;
v0x8dd2a38_0 .var "Vk", 31 0;
v0x8dd2ac0_0 .net *"_s11", 0 0, v0x8dd32e0_0; 1 drivers
v0x8dd2b20_0 .net *"_s15", 3 0, v0x8dd2ef0_0; 1 drivers
v0x8dd2bb0_0 .net *"_s3", 0 0, v0x8dd2ca8_0; 1 drivers
v0x8dd2c10_0 .net *"_s7", 31 0, v0x8dd33d0_0; 1 drivers
v0x8dd2ca8_0 .var "busy", 0 0;
v0x8dd2d08_0 .alias "busy_out", 9 0, v0x8de7570_0;
v0x8dd2d98_0 .alias "clk", 0 0, v0x8de66e8_0;
v0x8dd2e20_0 .alias "data_bus", 319 0, v0x8de73e0_0;
v0x8dd2ef0_0 .var "dest", 3 0;
v0x8dd2f50_0 .alias "fu", 3 0, v0x8de7280_0;
v0x8dd2ff0_0 .alias "inst", 31 0, v0x8de72d0_0;
v0x8dd3078_0 .var "op", 3 0;
v0x8dd2fa0_0 .alias "qj", 3 0, v0x8de78c0_0;
v0x8dd3158_0 .alias "qk", 3 0, v0x8de79c8_0;
v0x8dd3208_0 .var "reg_numj", 4 0;
v0x8dd3290_0 .var "reg_numk", 4 0;
v0x8dd3348_0 .alias "reset", 0 0, v0x8de6828_0;
v0x8dd33d0_0 .var "result", 31 0;
v0x8dd32e0_0 .var "valid", 0 0;
v0x8dd3490_0 .alias "valid_bus", 9 0, v0x8de7430_0;
v0x8dd3558_0 .alias "vj", 31 0, v0x8de7c70_0;
v0x8dd35a8_0 .alias "vk", 31 0, v0x8de7b90_0;
L_0x8dea030 .part/pv v0x8dd2ca8_0, 7, 1, 10;
L_0x8dea110 .part/pv v0x8dd33d0_0, 224, 32, 320;
L_0x8dea1f0 .part/pv v0x8dd32e0_0, 7, 1, 10;
L_0x8dea2d0 .part/pv v0x8dd2ef0_0, 28, 4, 40;
S_0x8dd2450 .scope task, "checkAndGetData" "checkAndGetData" 7 142, 7 142, S_0x8dd11d8;
 .timescale -9 -10;
v0x8dd24d0_0 .var "Q", 3 0;
v0x8dd2540_0 .var "V", 31 0;
v0x8dd25a0_0 .var "dataBus", 479 0;
v0x8dd2600_0 .var "ok", 0 0;
v0x8dd2650_0 .var "valid", 0 0;
v0x8dd26b0_0 .var "validBus", 14 0;
TD_CPU.alu_rs\x5B7\x5D.checkAndGetData ;
    %load/v 8, v0x8dd24d0_0, 4;
    %mov 12, 0, 2;
    %cmpi/u 8, 15, 6;
    %jmp/0xz  T_33.58, 6;
    %jmp T_33.59;
T_33.58 ;
    %load/v 8, v0x8dd26b0_0, 15;
    %set/v v0x8dd1eb0_0, 8, 15;
    %load/v 8, v0x8dd24d0_0, 4;
    %set/v v0x8dd1f20_0, 8, 4;
    %fork TD_CPU.alu_rs\x5B7\x5D.readValidBus, S_0x8dd1e30;
    %join;
    %load/v  8, v0x8dd1f80_0, 1;
    %set/v v0x8dd2650_0, 8, 1;
    %load/v 8, v0x8dd2650_0, 1;
    %jmp/0xz  T_33.60, 8;
    %movi 8, 15, 5;
    %set/v v0x8dd24d0_0, 8, 4;
    %load/v 8, v0x8dd25a0_0, 480;
    %set/v v0x8dd2060_0, 8, 480;
    %load/v 8, v0x8dd24d0_0, 4;
    %set/v v0x8dd20d0_0, 8, 4;
    %fork TD_CPU.alu_rs\x5B7\x5D.readDataBus, S_0x8dd1fe0;
    %join;
    %load/v  8, v0x8dd2130_0, 32;
    %set/v v0x8dd2540_0, 8, 32;
    %jmp T_33.61;
T_33.60 ;
    %set/v v0x8dd2600_0, 0, 1;
T_33.61 ;
T_33.59 ;
    %end;
S_0x8dd2190 .scope task, "getData" "getData" 7 107, 7 107, S_0x8dd11d8;
 .timescale -9 -10;
v0x8dd2210_0 .var "CDB_data_data", 479 0;
v0x8dd2280_0 .var "CDB_data_valid", 14 0;
v0x8dd22e0_0 .var "Q", 3 0;
v0x8dd2340_0 .var "V", 31 0;
v0x8dd2390_0 .var "q", 3 0;
v0x8dd23f0_0 .var "v", 31 0;
TD_CPU.alu_rs\x5B7\x5D.getData ;
    %load/v 8, v0x8dd2390_0, 4;
    %mov 12, 0, 2;
    %cmpi/u 8, 15, 6;
    %jmp/0xz  T_34.62, 6;
    %load/v 8, v0x8dd23f0_0, 32;
    %set/v v0x8dd2340_0, 8, 32;
    %movi 8, 15, 5;
    %set/v v0x8dd22e0_0, 8, 4;
    %jmp T_34.63;
T_34.62 ;
    %load/v 8, v0x8dd2280_0, 15;
    %set/v v0x8dd1eb0_0, 8, 15;
    %load/v 8, v0x8dd2390_0, 4;
    %set/v v0x8dd1f20_0, 8, 4;
    %fork TD_CPU.alu_rs\x5B7\x5D.readValidBus, S_0x8dd1e30;
    %join;
    %load/v  8, v0x8dd1f80_0, 1;
    %jmp/0xz  T_34.64, 8;
    %load/v 8, v0x8dd2210_0, 480;
    %set/v v0x8dd2060_0, 8, 480;
    %load/v 8, v0x8dd2390_0, 4;
    %set/v v0x8dd20d0_0, 8, 4;
    %fork TD_CPU.alu_rs\x5B7\x5D.readDataBus, S_0x8dd1fe0;
    %join;
    %load/v  8, v0x8dd2130_0, 32;
    %set/v v0x8dd2340_0, 8, 32;
    %movi 8, 15, 5;
    %set/v v0x8dd22e0_0, 8, 4;
    %jmp T_34.65;
T_34.64 ;
    %load/v 8, v0x8dd2390_0, 4;
    %set/v v0x8dd22e0_0, 8, 4;
T_34.65 ;
T_34.63 ;
    %end;
S_0x8dd1fe0 .scope function, "readDataBus" "readDataBus" 7 126, 7 126, S_0x8dd11d8;
 .timescale -9 -10;
v0x8dd2060_0 .var "CDB_data_data", 479 0;
v0x8dd20d0_0 .var "index", 3 0;
v0x8dd2130_0 .var "readDataBus", 31 0;
TD_CPU.alu_rs\x5B7\x5D.readDataBus ;
    %load/v 8, v0x8dd2060_0, 480;
    %load/v 488, v0x8dd20d0_0, 4;
    %movi 492, 0, 7;
    %muli 488, 32, 11;
    %ix/get 0, 488, 11;
    %shiftr/i0  8, 480;
    %set/v v0x8dd2130_0, 8, 32;
    %end;
S_0x8dd1e30 .scope function, "readValidBus" "readValidBus" 7 134, 7 134, S_0x8dd11d8;
 .timescale -9 -10;
v0x8dd1eb0_0 .var "CDB_data_valid", 14 0;
v0x8dd1f20_0 .var "index", 3 0;
v0x8dd1f80_0 .var "readValidBus", 0 0;
TD_CPU.alu_rs\x5B7\x5D.readValidBus ;
    %load/v 8, v0x8dd1eb0_0, 15;
    %load/v 23, v0x8dd1f20_0, 4;
    %ix/get 0, 23, 4;
    %shiftr/i0  8, 15;
    %set/v v0x8dd1f80_0, 8, 1;
    %end;
S_0x8dd1db0 .scope begin, "checkIssue" "checkIssue" 7 49, 7 49, S_0x8dd11d8;
 .timescale -9 -10;
S_0x8dd1cc0 .scope begin, "execute" "execute" 7 71, 7 71, S_0x8dd11d8;
 .timescale -9 -10;
v0x8dd1d40_0 .var "ok", 0 0;
S_0x8dce938 .scope module, "store_rs[0]" "store_RS" 2 66, 8 1, S_0x8d4f4b8;
 .timescale -9 -10;
P_0x8dceac4 .param/l "ADDER_NUM" 3 36, +C4<011>;
P_0x8dcead8 .param/l "ALU_ADD" 3 10, C4<0000>;
P_0x8dceaec .param/l "ALU_MUL" 3 12, C4<0010>;
P_0x8dceb00 .param/l "ALU_SUB" 3 11, C4<0001>;
P_0x8dceb14 .param/l "BLOCK_SIZE" 3 6, +C4<010000>;
P_0x8dceb28 .param/l "CACHE_SIZE" 3 7, +C4<010000000000>;
P_0x8dceb3c .param/l "FU_INDEX" 3 41, +C4<0100>;
P_0x8dceb50 .param/l "FU_NUM" 3 40, +C4<01010>;
P_0x8dceb64 .param/l "IMM_START" 3 19, +C4<010001>;
P_0x8dceb78 .param/l "INST_ADD" 3 20, C4<0000>;
P_0x8dceb8c .param/l "INST_ADDI" 3 25, C4<0101>;
P_0x8dceba0 .param/l "INST_BGE" 3 33, C4<1101>;
P_0x8dcebb4 .param/l "INST_J" 3 31, C4<1011>;
P_0x8dcebc8 .param/l "INST_JR" 3 32, C4<1100>;
P_0x8dcebdc .param/l "INST_LI" 3 30, C4<1010>;
P_0x8dcebf0 .param/l "INST_LW" 3 23, C4<0011>;
P_0x8dcec04 .param/l "INST_LWRR" 3 28, C4<1000>;
P_0x8dcec18 .param/l "INST_MUL" 3 22, C4<0010>;
P_0x8dcec2c .param/l "INST_MULI" 3 27, C4<0111>;
P_0x8dcec40 .param/l "INST_SUB" 3 21, C4<0001>;
P_0x8dcec54 .param/l "INST_SUBI" 3 26, C4<0110>;
P_0x8dcec68 .param/l "INST_SW" 3 24, C4<0100>;
P_0x8dcec7c .param/l "INST_SWRR" 3 29, C4<1001>;
P_0x8dcec90 .param/l "LOADER_NUM" 3 38, +C4<011>;
P_0x8dceca4 .param/l "MEM_SIZE" 3 2, +C4<010000000000>;
P_0x8dcecb8 .param/l "MULTER_NUM" 3 37, +C4<010>;
P_0x8dceccc .param/l "MUL_STALL" 3 43, +C4<011>;
P_0x8dcece0 .param/l "NULL" 3 49, +C4<01111>;
P_0x8dcecf4 .param/l "OPCODE_WIDTH" 3 15, +C4<0100>;
P_0x8dced08 .param/l "RB_INDEX" 3 47, +C4<0100>;
P_0x8dced1c .param/l "RB_SIZE" 3 46, +C4<01111>;
P_0x8dced30 .param/l "RD_START" 3 17, +C4<010110>;
P_0x8dced44 .param/l "READY" 3 48, +C4<01111>;
P_0x8dced58 .param/l "REG_FILE_SIZE" 3 4, +C4<0100000>;
P_0x8dced6c .param/l "REG_INDEX" 3 3, +C4<0101>;
P_0x8dced80 .param/l "RS_START" 3 16, +C4<011011>;
P_0x8dced94 .param/l "RT_START" 3 18, +C4<010001>;
P_0x8dceda8 .param/l "STORER_NUM" 3 39, +C4<010>;
P_0x8dcedbc .param/l "StorerIndex" 8 6, +C4<0>;
P_0x8dcedd0 .param/l "TAG_SIZE" 3 8, +C4<010010>;
P_0x8dcede4 .param/l "WORD_SIZE" 3 1, +C4<0100000>;
P_0x8dcedf8 .param/l "fuindex" 8 6, +C4<01000>;
v0x8dd00e0_0 .alias "CDB_data_data", 479 0, v0x8de7190_0;
v0x8dd0160_0 .alias "CDB_data_valid", 14 0, v0x8de71e0_0;
v0x8dd01d0_0 .var "Qi", 3 0;
v0x8dd0220_0 .var "Qj", 3 0;
v0x8dd0270_0 .var "Qk", 3 0;
v0x8dd02c0_0 .alias "RB_index", 3 0, v0x8de7230_0;
v0x8dd0350_0 .alias "RB_index_bus", 39 0, v0x8de7340_0;
v0x8dd03c0_0 .var "Vi", 31 0;
v0x8dd0438_0 .var "Vj", 31 0;
v0x8dd0488_0 .var "Vk", 31 0;
v0x8dd0518_0 .net *"_s11", 0 0, v0x8dd0f20_0; 1 drivers
v0x8dd0578_0 .net *"_s15", 31 0, v0x8dd0910_0; 1 drivers
v0x8dd05d8_0 .net *"_s19", 3 0, v0x8dd09d8_0; 1 drivers
v0x8dd0638_0 .net *"_s3", 0 0, v0x8dd07d0_0; 1 drivers
v0x8dd06d8_0 .net *"_s7", 31 0, v0x8dd0dc8_0; 1 drivers
v0x8dd0738_0 .alias "addr_bus", 63 0, v0x8de7390_0;
v0x8dd07d0_0 .var "busy", 0 0;
v0x8dd0820_0 .alias "busy_out", 9 0, v0x8de7570_0;
v0x8dd08c0_0 .alias "clk", 0 0, v0x8de66e8_0;
v0x8dd0910_0 .var "data", 31 0;
v0x8dd0870_0 .alias "data_bus", 319 0, v0x8de73e0_0;
v0x8dd09d8_0 .var "dest", 3 0;
v0x8dd0960_0 .alias "fu", 3 0, v0x8de7280_0;
v0x8dd0aa8_0 .alias "inst", 31 0, v0x8de72d0_0;
v0x8dd0b60_0 .var "op", 3 0;
v0x8dd0bb0_0 .alias "qi", 3 0, v0x8de7918_0;
v0x8dd0af8_0 .alias "qj", 3 0, v0x8de78c0_0;
v0x8dd0c70_0 .alias "qk", 3 0, v0x8de79c8_0;
v0x8dd0c20_0 .var "reg_numi", 4 0;
v0x8dd0d58_0 .var "reg_numj", 4 0;
v0x8dd0ce0_0 .var "reg_numk", 4 0;
v0x8dd0e48_0 .alias "reset", 0 0, v0x8de6828_0;
v0x8dd0dc8_0 .var "result", 31 0;
v0x8dd0f20_0 .var "valid", 0 0;
v0x8dd0e98_0 .alias "valid_bus", 9 0, v0x8de7430_0;
v0x8dd1000_0 .alias "vi", 31 0, v0x8de7ad0_0;
v0x8dd0f90_0 .alias "vj", 31 0, v0x8de7c70_0;
v0x8dd10e8_0 .alias "vk", 31 0, v0x8de7b90_0;
L_0x8dea3e0 .part/pv v0x8dd07d0_0, 8, 1, 10;
L_0x8dea4c0 .part/pv v0x8dd0dc8_0, 0, 32, 64;
L_0x8dea5d0 .part/pv v0x8dd0f20_0, 8, 1, 10;
L_0x8dea6b0 .part/pv v0x8dd0910_0, 256, 32, 320;
L_0x8dea7c0 .part/pv v0x8dd09d8_0, 32, 4, 40;
S_0x8dcfe00 .scope task, "checkAndGetData" "checkAndGetData" 8 133, 8 133, S_0x8dce938;
 .timescale -9 -10;
v0x8dcfe80_0 .var "Q", 3 0;
v0x8dcfef0_0 .var "V", 31 0;
v0x8dcff50_0 .var "dataBus", 479 0;
v0x8dcffb0_0 .var "ok", 0 0;
v0x8dd0000_0 .var "valid", 0 0;
v0x8dd0060_0 .var "validBus", 14 0;
TD_CPU.store_rs\x5B0\x5D.checkAndGetData ;
    %load/v 8, v0x8dcfe80_0, 4;
    %mov 12, 0, 2;
    %cmpi/u 8, 15, 6;
    %jmp/0xz  T_37.66, 6;
    %jmp T_37.67;
T_37.66 ;
    %load/v 8, v0x8dd0060_0, 15;
    %set/v v0x8dcf860_0, 8, 15;
    %load/v 8, v0x8dcfe80_0, 4;
    %set/v v0x8dcf8d0_0, 8, 4;
    %fork TD_CPU.store_rs\x5B0\x5D.readValidBus, S_0x8dcf7e0;
    %join;
    %load/v  8, v0x8dcf930_0, 1;
    %set/v v0x8dd0000_0, 8, 1;
    %load/v 8, v0x8dd0000_0, 1;
    %jmp/0xz  T_37.68, 8;
    %movi 8, 15, 5;
    %set/v v0x8dcfe80_0, 8, 4;
    %load/v 8, v0x8dcff50_0, 480;
    %set/v v0x8dcfa10_0, 8, 480;
    %load/v 8, v0x8dcfe80_0, 4;
    %set/v v0x8dcfa80_0, 8, 4;
    %fork TD_CPU.store_rs\x5B0\x5D.readDataBus, S_0x8dcf990;
    %join;
    %load/v  8, v0x8dcfae0_0, 32;
    %set/v v0x8dcfef0_0, 8, 32;
    %jmp T_37.69;
T_37.68 ;
    %set/v v0x8dcffb0_0, 0, 1;
T_37.69 ;
T_37.67 ;
    %end;
S_0x8dcfb40 .scope task, "getData" "getData" 8 98, 8 98, S_0x8dce938;
 .timescale -9 -10;
v0x8dcfbc0_0 .var "CDB_data_data", 479 0;
v0x8dcfc30_0 .var "CDB_data_valid", 14 0;
v0x8dcfc90_0 .var "Q", 3 0;
v0x8dcfcf0_0 .var "V", 31 0;
v0x8dcfd40_0 .var "q", 3 0;
v0x8dcfda0_0 .var "v", 31 0;
TD_CPU.store_rs\x5B0\x5D.getData ;
    %load/v 8, v0x8dcfd40_0, 4;
    %mov 12, 0, 2;
    %cmpi/u 8, 15, 6;
    %jmp/0xz  T_38.70, 6;
    %load/v 8, v0x8dcfda0_0, 32;
    %set/v v0x8dcfcf0_0, 8, 32;
    %movi 8, 15, 5;
    %set/v v0x8dcfc90_0, 8, 4;
    %jmp T_38.71;
T_38.70 ;
    %load/v 8, v0x8dcfc30_0, 15;
    %set/v v0x8dcf860_0, 8, 15;
    %load/v 8, v0x8dcfd40_0, 4;
    %set/v v0x8dcf8d0_0, 8, 4;
    %fork TD_CPU.store_rs\x5B0\x5D.readValidBus, S_0x8dcf7e0;
    %join;
    %load/v  8, v0x8dcf930_0, 1;
    %jmp/0xz  T_38.72, 8;
    %load/v 8, v0x8dcfbc0_0, 480;
    %set/v v0x8dcfa10_0, 8, 480;
    %load/v 8, v0x8dcfd40_0, 4;
    %set/v v0x8dcfa80_0, 8, 4;
    %fork TD_CPU.store_rs\x5B0\x5D.readDataBus, S_0x8dcf990;
    %join;
    %load/v  8, v0x8dcfae0_0, 32;
    %set/v v0x8dcfcf0_0, 8, 32;
    %movi 8, 15, 5;
    %set/v v0x8dcfc90_0, 8, 4;
    %jmp T_38.73;
T_38.72 ;
    %load/v 8, v0x8dcfd40_0, 4;
    %set/v v0x8dcfc90_0, 8, 4;
T_38.73 ;
T_38.71 ;
    %end;
S_0x8dcf990 .scope function, "readDataBus" "readDataBus" 8 117, 8 117, S_0x8dce938;
 .timescale -9 -10;
v0x8dcfa10_0 .var "CDB_data_data", 479 0;
v0x8dcfa80_0 .var "index", 3 0;
v0x8dcfae0_0 .var "readDataBus", 31 0;
TD_CPU.store_rs\x5B0\x5D.readDataBus ;
    %load/v 8, v0x8dcfa10_0, 480;
    %load/v 488, v0x8dcfa80_0, 4;
    %movi 492, 0, 7;
    %muli 488, 32, 11;
    %ix/get 0, 488, 11;
    %shiftr/i0  8, 480;
    %set/v v0x8dcfae0_0, 8, 32;
    %end;
S_0x8dcf7e0 .scope function, "readValidBus" "readValidBus" 8 125, 8 125, S_0x8dce938;
 .timescale -9 -10;
v0x8dcf860_0 .var "CDB_data_valid", 14 0;
v0x8dcf8d0_0 .var "index", 3 0;
v0x8dcf930_0 .var "readValidBus", 0 0;
TD_CPU.store_rs\x5B0\x5D.readValidBus ;
    %load/v 8, v0x8dcf860_0, 15;
    %load/v 23, v0x8dcf8d0_0, 4;
    %ix/get 0, 23, 4;
    %shiftr/i0  8, 15;
    %set/v v0x8dcf930_0, 8, 1;
    %end;
S_0x8dcf760 .scope begin, "checkIssue" "checkIssue" 8 52, 8 52, S_0x8dce938;
 .timescale -9 -10;
S_0x8dcf670 .scope begin, "execute" "execute" 8 80, 8 80, S_0x8dce938;
 .timescale -9 -10;
v0x8dcf6f0_0 .var "ok", 0 0;
S_0x8d76db8 .scope module, "store_rs[1]" "store_RS" 2 66, 8 1, S_0x8d4f4b8;
 .timescale -9 -10;
P_0x8d78004 .param/l "ADDER_NUM" 3 36, +C4<011>;
P_0x8d78018 .param/l "ALU_ADD" 3 10, C4<0000>;
P_0x8d7802c .param/l "ALU_MUL" 3 12, C4<0010>;
P_0x8d78040 .param/l "ALU_SUB" 3 11, C4<0001>;
P_0x8d78054 .param/l "BLOCK_SIZE" 3 6, +C4<010000>;
P_0x8d78068 .param/l "CACHE_SIZE" 3 7, +C4<010000000000>;
P_0x8d7807c .param/l "FU_INDEX" 3 41, +C4<0100>;
P_0x8d78090 .param/l "FU_NUM" 3 40, +C4<01010>;
P_0x8d780a4 .param/l "IMM_START" 3 19, +C4<010001>;
P_0x8d780b8 .param/l "INST_ADD" 3 20, C4<0000>;
P_0x8d780cc .param/l "INST_ADDI" 3 25, C4<0101>;
P_0x8d780e0 .param/l "INST_BGE" 3 33, C4<1101>;
P_0x8d780f4 .param/l "INST_J" 3 31, C4<1011>;
P_0x8d78108 .param/l "INST_JR" 3 32, C4<1100>;
P_0x8d7811c .param/l "INST_LI" 3 30, C4<1010>;
P_0x8d78130 .param/l "INST_LW" 3 23, C4<0011>;
P_0x8d78144 .param/l "INST_LWRR" 3 28, C4<1000>;
P_0x8d78158 .param/l "INST_MUL" 3 22, C4<0010>;
P_0x8d7816c .param/l "INST_MULI" 3 27, C4<0111>;
P_0x8d78180 .param/l "INST_SUB" 3 21, C4<0001>;
P_0x8d78194 .param/l "INST_SUBI" 3 26, C4<0110>;
P_0x8d781a8 .param/l "INST_SW" 3 24, C4<0100>;
P_0x8d781bc .param/l "INST_SWRR" 3 29, C4<1001>;
P_0x8d781d0 .param/l "LOADER_NUM" 3 38, +C4<011>;
P_0x8d781e4 .param/l "MEM_SIZE" 3 2, +C4<010000000000>;
P_0x8d781f8 .param/l "MULTER_NUM" 3 37, +C4<010>;
P_0x8d7820c .param/l "MUL_STALL" 3 43, +C4<011>;
P_0x8d78220 .param/l "NULL" 3 49, +C4<01111>;
P_0x8d78234 .param/l "OPCODE_WIDTH" 3 15, +C4<0100>;
P_0x8d78248 .param/l "RB_INDEX" 3 47, +C4<0100>;
P_0x8d7825c .param/l "RB_SIZE" 3 46, +C4<01111>;
P_0x8d78270 .param/l "RD_START" 3 17, +C4<010110>;
P_0x8d78284 .param/l "READY" 3 48, +C4<01111>;
P_0x8d78298 .param/l "REG_FILE_SIZE" 3 4, +C4<0100000>;
P_0x8d782ac .param/l "REG_INDEX" 3 3, +C4<0101>;
P_0x8d782c0 .param/l "RS_START" 3 16, +C4<011011>;
P_0x8d782d4 .param/l "RT_START" 3 18, +C4<010001>;
P_0x8d782e8 .param/l "STORER_NUM" 3 39, +C4<010>;
P_0x8d782fc .param/l "StorerIndex" 8 6, +C4<01>;
P_0x8d78310 .param/l "TAG_SIZE" 3 8, +C4<010010>;
P_0x8d78324 .param/l "WORD_SIZE" 3 1, +C4<0100000>;
P_0x8d78338 .param/l "fuindex" 8 6, +C4<01001>;
v0x8dcd9f0_0 .alias "CDB_data_data", 479 0, v0x8de7190_0;
v0x8dcda60_0 .alias "CDB_data_valid", 14 0, v0x8de71e0_0;
v0x8dcdac0_0 .var "Qi", 3 0;
v0x8dcdb20_0 .var "Qj", 3 0;
v0x8dcdb70_0 .var "Qk", 3 0;
v0x8dcdbd0_0 .alias "RB_index", 3 0, v0x8de7230_0;
v0x8dcdc50_0 .alias "RB_index_bus", 39 0, v0x8de7340_0;
v0x8dcdcb0_0 .var "Vi", 31 0;
v0x8dcdd38_0 .var "Vj", 31 0;
v0x8dcdd98_0 .var "Vk", 31 0;
v0x8dcde28_0 .net *"_s11", 0 0, v0x8dce808_0; 1 drivers
v0x8dcde88_0 .net *"_s15", 31 0, v0x8dce278_0; 1 drivers
v0x8dcdf20_0 .net *"_s19", 3 0, v0x8dce320_0; 1 drivers
v0x8dcdf80_0 .net *"_s3", 0 0, v0x8dce128_0; 1 drivers
v0x8dce020_0 .net *"_s7", 31 0, v0x8dce6b0_0; 1 drivers
v0x8dce080_0 .alias "addr_bus", 63 0, v0x8de7390_0;
v0x8dce128_0 .var "busy", 0 0;
v0x8dce188_0 .alias "busy_out", 9 0, v0x8de7570_0;
v0x8dce228_0 .alias "clk", 0 0, v0x8de66e8_0;
v0x8dce278_0 .var "data", 31 0;
v0x8dce1d8_0 .alias "data_bus", 319 0, v0x8de73e0_0;
v0x8dce320_0 .var "dest", 3 0;
v0x8dce3d0_0 .alias "fu", 3 0, v0x8de7280_0;
v0x8dce420_0 .alias "inst", 31 0, v0x8de72d0_0;
v0x8dce370_0 .var "op", 3 0;
v0x8dce4d8_0 .alias "qi", 3 0, v0x8de7918_0;
v0x8dce470_0 .alias "qj", 3 0, v0x8de78c0_0;
v0x8dce598_0 .alias "qk", 3 0, v0x8de79c8_0;
v0x8dce528_0 .var "reg_numi", 4 0;
v0x8dce660_0 .var "reg_numj", 4 0;
v0x8dce5e8_0 .var "reg_numk", 4 0;
v0x8dce730_0 .alias "reset", 0 0, v0x8de6828_0;
v0x8dce6b0_0 .var "result", 31 0;
v0x8dce808_0 .var "valid", 0 0;
v0x8dce780_0 .alias "valid_bus", 9 0, v0x8de7430_0;
v0x8dce8e8_0 .alias "vi", 31 0, v0x8de7ad0_0;
v0x8dce858_0 .alias "vj", 31 0, v0x8de7c70_0;
v0x8dce9d0_0 .alias "vk", 31 0, v0x8de7b90_0;
E_0x8d39190 .event posedge, v0x8dce730_0, v0x8dce228_0;
L_0x8dea8a0 .part/pv v0x8dce128_0, 9, 1, 10;
L_0x8dea980 .part/pv v0x8dce6b0_0, 32, 32, 64;
L_0x8deaa60 .part/pv v0x8dce808_0, 9, 1, 10;
L_0x8deab40 .part/pv v0x8dce278_0, 288, 32, 320;
L_0x8deac50 .part/pv v0x8dce320_0, 36, 4, 40;
S_0x8dcd710 .scope task, "checkAndGetData" "checkAndGetData" 8 133, 8 133, S_0x8d76db8;
 .timescale -9 -10;
v0x8dcd790_0 .var "Q", 3 0;
v0x8dcd800_0 .var "V", 31 0;
v0x8dcd860_0 .var "dataBus", 479 0;
v0x8dcd8c0_0 .var "ok", 0 0;
v0x8dcd910_0 .var "valid", 0 0;
v0x8dcd970_0 .var "validBus", 14 0;
TD_CPU.store_rs\x5B1\x5D.checkAndGetData ;
    %load/v 8, v0x8dcd790_0, 4;
    %mov 12, 0, 2;
    %cmpi/u 8, 15, 6;
    %jmp/0xz  T_41.74, 6;
    %jmp T_41.75;
T_41.74 ;
    %load/v 8, v0x8dcd970_0, 15;
    %set/v v0x8dcd138_0, 8, 15;
    %load/v 8, v0x8dcd790_0, 4;
    %set/v v0x8dcd1a8_0, 8, 4;
    %fork TD_CPU.store_rs\x5B1\x5D.readValidBus, S_0x8dcd0b8;
    %join;
    %load/v  8, v0x8dcd208_0, 1;
    %set/v v0x8dcd910_0, 8, 1;
    %load/v 8, v0x8dcd910_0, 1;
    %jmp/0xz  T_41.76, 8;
    %movi 8, 15, 5;
    %set/v v0x8dcd790_0, 8, 4;
    %load/v 8, v0x8dcd860_0, 480;
    %set/v v0x8dcd2e8_0, 8, 480;
    %load/v 8, v0x8dcd790_0, 4;
    %set/v v0x8dcd358_0, 8, 4;
    %fork TD_CPU.store_rs\x5B1\x5D.readDataBus, S_0x8dcd268;
    %join;
    %load/v  8, v0x8dcd3b8_0, 32;
    %set/v v0x8dcd800_0, 8, 32;
    %jmp T_41.77;
T_41.76 ;
    %set/v v0x8dcd8c0_0, 0, 1;
T_41.77 ;
T_41.75 ;
    %end;
S_0x8dcd418 .scope task, "getData" "getData" 8 98, 8 98, S_0x8d76db8;
 .timescale -9 -10;
v0x8dcd498_0 .var "CDB_data_data", 479 0;
v0x8dcd508_0 .var "CDB_data_valid", 14 0;
v0x8dcd568_0 .var "Q", 3 0;
v0x8dcd5c8_0 .var "V", 31 0;
v0x8dcd630_0 .var "q", 3 0;
v0x8dcd690_0 .var "v", 31 0;
TD_CPU.store_rs\x5B1\x5D.getData ;
    %load/v 8, v0x8dcd630_0, 4;
    %mov 12, 0, 2;
    %cmpi/u 8, 15, 6;
    %jmp/0xz  T_42.78, 6;
    %load/v 8, v0x8dcd690_0, 32;
    %set/v v0x8dcd5c8_0, 8, 32;
    %movi 8, 15, 5;
    %set/v v0x8dcd568_0, 8, 4;
    %jmp T_42.79;
T_42.78 ;
    %load/v 8, v0x8dcd508_0, 15;
    %set/v v0x8dcd138_0, 8, 15;
    %load/v 8, v0x8dcd630_0, 4;
    %set/v v0x8dcd1a8_0, 8, 4;
    %fork TD_CPU.store_rs\x5B1\x5D.readValidBus, S_0x8dcd0b8;
    %join;
    %load/v  8, v0x8dcd208_0, 1;
    %jmp/0xz  T_42.80, 8;
    %load/v 8, v0x8dcd498_0, 480;
    %set/v v0x8dcd2e8_0, 8, 480;
    %load/v 8, v0x8dcd630_0, 4;
    %set/v v0x8dcd358_0, 8, 4;
    %fork TD_CPU.store_rs\x5B1\x5D.readDataBus, S_0x8dcd268;
    %join;
    %load/v  8, v0x8dcd3b8_0, 32;
    %set/v v0x8dcd5c8_0, 8, 32;
    %movi 8, 15, 5;
    %set/v v0x8dcd568_0, 8, 4;
    %jmp T_42.81;
T_42.80 ;
    %load/v 8, v0x8dcd630_0, 4;
    %set/v v0x8dcd568_0, 8, 4;
T_42.81 ;
T_42.79 ;
    %end;
S_0x8dcd268 .scope function, "readDataBus" "readDataBus" 8 117, 8 117, S_0x8d76db8;
 .timescale -9 -10;
v0x8dcd2e8_0 .var "CDB_data_data", 479 0;
v0x8dcd358_0 .var "index", 3 0;
v0x8dcd3b8_0 .var "readDataBus", 31 0;
TD_CPU.store_rs\x5B1\x5D.readDataBus ;
    %load/v 8, v0x8dcd2e8_0, 480;
    %load/v 488, v0x8dcd358_0, 4;
    %movi 492, 0, 7;
    %muli 488, 32, 11;
    %ix/get 0, 488, 11;
    %shiftr/i0  8, 480;
    %set/v v0x8dcd3b8_0, 8, 32;
    %end;
S_0x8dcd0b8 .scope function, "readValidBus" "readValidBus" 8 125, 8 125, S_0x8d76db8;
 .timescale -9 -10;
v0x8dcd138_0 .var "CDB_data_valid", 14 0;
v0x8dcd1a8_0 .var "index", 3 0;
v0x8dcd208_0 .var "readValidBus", 0 0;
TD_CPU.store_rs\x5B1\x5D.readValidBus ;
    %load/v 8, v0x8dcd138_0, 15;
    %load/v 23, v0x8dcd1a8_0, 4;
    %ix/get 0, 23, 4;
    %shiftr/i0  8, 15;
    %set/v v0x8dcd208_0, 8, 1;
    %end;
S_0x8dcd038 .scope begin, "checkIssue" "checkIssue" 8 52, 8 52, S_0x8d76db8;
 .timescale -9 -10;
S_0x8da9810 .scope begin, "execute" "execute" 8 80, 8 80, S_0x8d76db8;
 .timescale -9 -10;
v0x8d36078_0 .var "ok", 0 0;
S_0x8d351f0 .scope module, "def_param" "def_param" 9 1;
 .timescale -9 -10;
    .scope S_0x8de5258;
T_45 ;
    %wait E_0x8de2388;
    %load/v 8, v0x8de63c0_0, 1;
    %jmp/0xz  T_45.0, 8;
    %set/v v0x8de6168_0, 0, 6;
T_45.2 ;
    %load/v 8, v0x8de6168_0, 6;
    %mov 14, 0, 2;
   %cmpi/u 8, 32, 8;
    %jmp/0xz T_45.3, 5;
    %ix/getv 3, v0x8de6168_0;
    %jmp/1 t_0, 4;
    %ix/load 0, 32, 0; word width
    %ix/load 1, 0, 0; part off
    %assign/av v0x8de6338, 0, 0;
t_0 ;
    %load/v 8, v0x8de6168_0, 6;
    %mov 14, 0, 26;
    %addi 8, 1, 32;
    %set/v v0x8de6168_0, 8, 6;
    %jmp T_45.2;
T_45.3 ;
    %jmp T_45.1;
T_45.0 ;
    %load/v 8, v0x8de6410_0, 1;
    %jmp/0xz  T_45.4, 8;
    %load/v 8, v0x8de6510_0, 32;
    %ix/getv 3, v0x8de64b0_0;
    %jmp/1 t_1, 4;
    %ix/load 0, 32, 0; word width
    %ix/load 1, 0, 0; part off
    %assign/av v0x8de6338, 0, 8;
t_1 ;
T_45.4 ;
T_45.1 ;
    %jmp T_45;
    .thread T_45;
    .scope S_0x8de4500;
T_46 ;
    %wait E_0x8d39190;
    %fork t_3, S_0x8de5168;
    %jmp t_2;
    .scope S_0x8de5168;
t_3 ;
    %load/v 8, v0x8de6828_0, 1;
    %jmp/0xz  T_46.0, 8;
    %set/v v0x8de51e8_0, 0, 32;
T_46.2 ;
    %load/v 8, v0x8de51e8_0, 32;
   %cmpi/u 8, 32, 32;
    %jmp/0xz T_46.3, 5;
    %movi 8, 15, 5;
    %ix/getv 3, v0x8de51e8_0;
   %jmp/1 t_4, 4;
   %ix/load 1, 0, 0;
   %set/av v0x8de6968, 8, 4;
t_4 ;
    %ix/load 0, 1, 0;
    %load/vp0 8, v0x8de51e8_0, 32;
    %set/v v0x8de51e8_0, 8, 32;
    %jmp T_46.2;
T_46.3 ;
    %jmp T_46.1;
T_46.0 ;
    %load/v 8, v0x8de6c68_0, 1;
    %jmp/0xz  T_46.4, 8;
    %load/v 8, v0x8de6c18_0, 4;
    %ix/getv 3, v0x8de6cb8_0;
    %jmp/1 t_5, 4;
    %ix/load 0, 4, 0; word width
    %ix/load 1, 0, 0; part off
    %assign/av v0x8de6968, 0, 8;
t_5 ;
T_46.4 ;
T_46.1 ;
    %end;
    .scope S_0x8de4500;
t_2 %join;
    %jmp T_46;
    .thread T_46;
    .scope S_0x8de0d10;
T_47 ;
    %set/v v0x8de29b8_0, 3, 5;
    %end;
    .thread T_47;
    .scope S_0x8de0d10;
T_48 ;
    %set/v v0x8de2ac0_0, 3, 5;
    %end;
    .thread T_48;
    .scope S_0x8de0d10;
T_49 ;
    %wait E_0x8d39190;
    %load/v 8, v0x8de2a60_0, 1;
    %jmp/0xz  T_49.0, 8;
    %ix/load 0, 1, 0;
    %assign/v0 v0x8de2640_0, 0, 0;
    %movi 8, 15, 5;
    %ix/load 0, 4, 0;
    %assign/v0 v0x8de2818_0, 0, 8;
    %ix/load 0, 1, 0;
    %assign/v0 v0x8de2b10_0, 0, 0;
    %ix/load 0, 32, 0;
    %assign/v0 v0x8de2b78_0, 0, 0;
    %jmp T_49.1;
T_49.0 ;
    %load/v 8, v0x8de2640_0, 1;
    %inv 8, 1;
    %jmp/0xz  T_49.2, 8;
    %fork t_7, S_0x8de1808;
    %jmp t_6;
    .scope S_0x8de1808;
t_7 ;
    %delay 1, 0;
    %load/v 8, v0x8de2878_0, 4;
    %mov 12, 0, 1;
    %cmpi/u 8, 0, 5;
    %jmp/0xz  T_49.4, 4;
    %vpi_call 7 51 "$display", $realtime, ": %d receive inst:%b", P_0x8de10b4, v0x8de2918_0;
    %ix/load 1, 28, 0;
    %mov 4, 0, 1;
    %jmp/1 T_49.6, 4;
    %load/x1p 8, v0x8de2918_0, 4;
    %jmp T_49.7;
T_49.6 ;
    %mov 8, 2, 4;
T_49.7 ;
; Save base=8 wid=4 in lookaside.
    %set/v v0x8de2968_0, 8, 4;
    %ix/load 0, 1, 0;
    %assign/v0 v0x8de2640_0, 0, 1;
    %load/v 8, v0x8de22e8_0, 4;
    %ix/load 0, 4, 0;
    %assign/v0 v0x8de2818_0, 0, 8;
    %ix/load 1, 23, 0;
    %mov 4, 0, 1;
    %jmp/1 T_49.8, 4;
    %load/x1p 8, v0x8de2918_0, 5;
    %jmp T_49.9;
T_49.8 ;
    %mov 8, 2, 5;
T_49.9 ;
; Save base=8 wid=5 in lookaside.
    %set/v v0x8de29b8_0, 8, 5;
    %load/v 8, v0x8de2bc8_0, 32;
    %set/v v0x8de1e48_0, 8, 32;
    %load/v 8, v0x8de28c8_0, 4;
    %set/v v0x8de1de8_0, 8, 4;
    %load/v 8, v0x8de2188_0, 480;
    %set/v v0x8de1c68_0, 8, 480;
    %load/v 8, v0x8de21e8_0, 15;
    %set/v v0x8de1cd8_0, 8, 15;
    %fork TD_CPU.alu_rs\x5B0\x5D.getData, S_0x8de1be8;
    %join;
    %load/v 8, v0x8de1d98_0, 32;
    %set/v v0x8de23a8_0, 8, 32;
    %load/v 8, v0x8de1d38_0, 4;
    %set/v v0x8de2238_0, 8, 4;
    %load/v 8, v0x8de2968_0, 4;
    %mov 12, 0, 1;
    %cmpi/u 8, 0, 5;
    %mov 8, 4, 1;
    %load/v 9, v0x8de2968_0, 4;
    %mov 13, 0, 1;
    %cmpi/u 9, 1, 5;
    %or 8, 4, 1;
    %load/v 9, v0x8de2968_0, 4;
    %mov 13, 0, 1;
    %cmpi/u 9, 2, 5;
    %or 8, 4, 1;
    %jmp/0xz  T_49.10, 8;
    %ix/load 1, 13, 0;
    %mov 4, 0, 1;
    %jmp/1 T_49.12, 4;
    %load/x1p 8, v0x8de2918_0, 5;
    %jmp T_49.13;
T_49.12 ;
    %mov 8, 2, 5;
T_49.13 ;
; Save base=8 wid=5 in lookaside.
    %set/v v0x8de2ac0_0, 8, 5;
    %load/v 8, v0x8de2d00_0, 32;
    %set/v v0x8de1e48_0, 8, 32;
    %load/v 8, v0x8de2a10_0, 4;
    %set/v v0x8de1de8_0, 8, 4;
    %load/v 8, v0x8de2188_0, 480;
    %set/v v0x8de1c68_0, 8, 480;
    %load/v 8, v0x8de21e8_0, 15;
    %set/v v0x8de1cd8_0, 8, 15;
    %fork TD_CPU.alu_rs\x5B0\x5D.getData, S_0x8de1be8;
    %join;
    %load/v 8, v0x8de1d98_0, 32;
    %set/v v0x8de2408_0, 8, 32;
    %load/v 8, v0x8de1d38_0, 4;
    %set/v v0x8de2298_0, 8, 4;
    %jmp T_49.11;
T_49.10 ;
    %load/v 8, v0x8de2918_0, 18; Select 18 out of 32 bits
    %mov 26, 0, 14;
    %set/v v0x8de2408_0, 8, 32;
    %movi 8, 15, 5;
    %set/v v0x8de2298_0, 8, 4;
T_49.11 ;
    %delay 1, 0;
    %set/v v0x8de29b8_0, 3, 5;
    %set/v v0x8de2ac0_0, 3, 5;
    %ix/load 0, 1, 0;
    %assign/v0 v0x8de2b10_0, 0, 0;
T_49.4 ;
    %end;
    .scope S_0x8de0d10;
t_6 %join;
    %jmp T_49.3;
T_49.2 ;
    %fork t_9, S_0x8de1728;
    %jmp t_8;
    .scope S_0x8de1728;
t_9 ;
    %set/v v0x8de17a8_0, 1, 1;
    %load/v 8, v0x8de2238_0, 4;
    %set/v v0x8de1f28_0, 8, 4;
    %load/v 8, v0x8de23a8_0, 32;
    %set/v v0x8de1f98_0, 8, 32;
    %load/v 8, v0x8de2188_0, 480;
    %set/v v0x8de1ff8_0, 8, 480;
    %load/v 8, v0x8de21e8_0, 15;
    %set/v v0x8de2108_0, 8, 15;
    %load/v 8, v0x8de17a8_0, 1;
    %set/v v0x8de2058_0, 8, 1;
    %fork TD_CPU.alu_rs\x5B0\x5D.checkAndGetData, S_0x8de1ea8;
    %join;
    %load/v 8, v0x8de1f28_0, 4;
    %set/v v0x8de2238_0, 8, 4;
    %load/v 8, v0x8de1f98_0, 32;
    %set/v v0x8de23a8_0, 8, 32;
    %load/v 8, v0x8de2058_0, 1;
    %set/v v0x8de17a8_0, 8, 1;
    %load/v 8, v0x8de2298_0, 4;
    %set/v v0x8de1f28_0, 8, 4;
    %load/v 8, v0x8de2408_0, 32;
    %set/v v0x8de1f98_0, 8, 32;
    %load/v 8, v0x8de2188_0, 480;
    %set/v v0x8de1ff8_0, 8, 480;
    %load/v 8, v0x8de21e8_0, 15;
    %set/v v0x8de2108_0, 8, 15;
    %load/v 8, v0x8de17a8_0, 1;
    %set/v v0x8de2058_0, 8, 1;
    %fork TD_CPU.alu_rs\x5B0\x5D.checkAndGetData, S_0x8de1ea8;
    %join;
    %load/v 8, v0x8de1f28_0, 4;
    %set/v v0x8de2298_0, 8, 4;
    %load/v 8, v0x8de1f98_0, 32;
    %set/v v0x8de2408_0, 8, 32;
    %load/v 8, v0x8de2058_0, 1;
    %set/v v0x8de17a8_0, 8, 1;
    %load/v 8, v0x8de17a8_0, 1;
    %jmp/0xz  T_49.14, 8;
    %load/v 8, v0x8de2968_0, 4;
    %cmpi/u 8, 1, 4;
    %jmp/1 T_49.16, 6;
    %cmpi/u 8, 6, 4;
    %jmp/1 T_49.17, 6;
    %cmpi/u 8, 0, 4;
    %jmp/1 T_49.18, 6;
    %cmpi/u 8, 5, 4;
    %jmp/1 T_49.19, 6;
    %cmpi/u 8, 2, 4;
    %jmp/1 T_49.20, 6;
    %cmpi/u 8, 7, 4;
    %jmp/1 T_49.21, 6;
    %jmp T_49.23;
T_49.16 ;
    %delay 1, 0;
    %load/v 8, v0x8de23a8_0, 32;
    %load/v 40, v0x8de2408_0, 32;
    %sub 8, 40, 32;
    %set/v v0x8de2b78_0, 8, 32;
    %jmp T_49.23;
T_49.17 ;
    %delay 1, 0;
    %load/v 8, v0x8de23a8_0, 32;
    %load/v 40, v0x8de2408_0, 32;
    %sub 8, 40, 32;
    %set/v v0x8de2b78_0, 8, 32;
    %jmp T_49.23;
T_49.18 ;
    %delay 1, 0;
    %load/v 8, v0x8de23a8_0, 32;
    %load/v 40, v0x8de2408_0, 32;
    %add 8, 40, 32;
    %set/v v0x8de2b78_0, 8, 32;
    %jmp T_49.23;
T_49.19 ;
    %delay 1, 0;
    %load/v 8, v0x8de23a8_0, 32;
    %load/v 40, v0x8de2408_0, 32;
    %add 8, 40, 32;
    %set/v v0x8de2b78_0, 8, 32;
    %jmp T_49.23;
T_49.20 ;
    %delay 31, 0;
    %load/v 8, v0x8de23a8_0, 32;
    %load/v 40, v0x8de2408_0, 32;
    %mul 8, 40, 32;
    %set/v v0x8de2b78_0, 8, 32;
    %jmp T_49.23;
T_49.21 ;
    %delay 31, 0;
    %load/v 8, v0x8de23a8_0, 32;
    %load/v 40, v0x8de2408_0, 32;
    %mul 8, 40, 32;
    %set/v v0x8de2b78_0, 8, 32;
    %jmp T_49.23;
T_49.23 ;
    %set/v v0x8de2b10_0, 1, 1;
    %set/v v0x8de2640_0, 0, 1;
    %delay 13, 0;
    %set/v v0x8de2b10_0, 0, 1;
    %movi 8, 15, 5;
    %set/v v0x8de2818_0, 8, 4;
T_49.14 ;
    %end;
    .scope S_0x8de0d10;
t_8 %join;
T_49.3 ;
T_49.1 ;
    %jmp T_49;
    .thread T_49;
    .scope S_0x8dde2e0;
T_50 ;
    %set/v v0x8de04d0_0, 3, 5;
    %end;
    .thread T_50;
    .scope S_0x8dde2e0;
T_51 ;
    %set/v v0x8dd7a48_0, 3, 5;
    %end;
    .thread T_51;
    .scope S_0x8dde2e0;
T_52 ;
    %wait E_0x8d39190;
    %load/v 8, v0x8de05f0_0, 1;
    %jmp/0xz  T_52.0, 8;
    %ix/load 0, 1, 0;
    %assign/v0 v0x8ddff10_0, 0, 0;
    %movi 8, 15, 5;
    %ix/load 0, 4, 0;
    %assign/v0 v0x8dd7600_0, 0, 8;
    %ix/load 0, 1, 0;
    %assign/v0 v0x8dd7c20_0, 0, 0;
    %ix/load 0, 32, 0;
    %assign/v0 v0x8dd7bd0_0, 0, 0;
    %jmp T_52.1;
T_52.0 ;
    %load/v 8, v0x8ddff10_0, 1;
    %inv 8, 1;
    %jmp/0xz  T_52.2, 8;
    %fork t_11, S_0x8ddef38;
    %jmp t_10;
    .scope S_0x8ddef38;
t_11 ;
    %delay 1, 0;
    %load/v 8, v0x8de02a0_0, 4;
    %mov 12, 0, 1;
    %cmpi/u 8, 1, 5;
    %jmp/0xz  T_52.4, 4;
    %vpi_call 7 51 "$display", $realtime, ": %d receive inst:%b", P_0x8dde684, v0x8dd7768_0;
    %ix/load 1, 28, 0;
    %mov 4, 0, 1;
    %jmp/1 T_52.6, 4;
    %load/x1p 8, v0x8dd7768_0, 4;
    %jmp T_52.7;
T_52.6 ;
    %mov 8, 2, 4;
T_52.7 ;
; Save base=8 wid=4 in lookaside.
    %set/v v0x8dd7820_0, 8, 4;
    %ix/load 0, 1, 0;
    %assign/v0 v0x8ddff10_0, 0, 1;
    %load/v 8, v0x8ddfaf8_0, 4;
    %ix/load 0, 4, 0;
    %assign/v0 v0x8dd7600_0, 0, 8;
    %ix/load 1, 23, 0;
    %mov 4, 0, 1;
    %jmp/1 T_52.8, 4;
    %load/x1p 8, v0x8dd7768_0, 5;
    %jmp T_52.9;
T_52.8 ;
    %mov 8, 2, 5;
T_52.9 ;
; Save base=8 wid=5 in lookaside.
    %set/v v0x8de04d0_0, 8, 5;
    %load/v 8, v0x8dd7a98_0, 32;
    %set/v v0x8ddf578_0, 8, 32;
    %load/v 8, v0x8de02f0_0, 4;
    %set/v v0x8ddf518_0, 8, 4;
    %load/v 8, v0x8ddf8b8_0, 480;
    %set/v v0x8ddf398_0, 8, 480;
    %load/v 8, v0x8dd6d60_0, 15;
    %set/v v0x8ddf408_0, 8, 15;
    %fork TD_CPU.alu_rs\x5B1\x5D.getData, S_0x8ddf318;
    %join;
    %load/v 8, v0x8ddf4c8_0, 32;
    %set/v v0x8dd7058_0, 8, 32;
    %load/v 8, v0x8ddf468_0, 4;
    %set/v v0x8dd6e18_0, 8, 4;
    %load/v 8, v0x8dd7820_0, 4;
    %mov 12, 0, 1;
    %cmpi/u 8, 0, 5;
    %mov 8, 4, 1;
    %load/v 9, v0x8dd7820_0, 4;
    %mov 13, 0, 1;
    %cmpi/u 9, 1, 5;
    %or 8, 4, 1;
    %load/v 9, v0x8dd7820_0, 4;
    %mov 13, 0, 1;
    %cmpi/u 9, 2, 5;
    %or 8, 4, 1;
    %jmp/0xz  T_52.10, 8;
    %ix/load 1, 13, 0;
    %mov 4, 0, 1;
    %jmp/1 T_52.12, 4;
    %load/x1p 8, v0x8dd7768_0, 5;
    %jmp T_52.13;
T_52.12 ;
    %mov 8, 2, 5;
T_52.13 ;
; Save base=8 wid=5 in lookaside.
    %set/v v0x8dd7a48_0, 8, 5;
    %load/v 8, v0x8dd7e78_0, 32;
    %set/v v0x8ddf578_0, 8, 32;
    %load/v 8, v0x8dd7930_0, 4;
    %set/v v0x8ddf518_0, 8, 4;
    %load/v 8, v0x8ddf8b8_0, 480;
    %set/v v0x8ddf398_0, 8, 480;
    %load/v 8, v0x8dd6d60_0, 15;
    %set/v v0x8ddf408_0, 8, 15;
    %fork TD_CPU.alu_rs\x5B1\x5D.getData, S_0x8ddf318;
    %join;
    %load/v 8, v0x8ddf4c8_0, 32;
    %set/v v0x8ddfcf8_0, 8, 32;
    %load/v 8, v0x8ddf468_0, 4;
    %set/v v0x8ddfaa8_0, 8, 4;
    %jmp T_52.11;
T_52.10 ;
    %load/v 8, v0x8dd7768_0, 18; Select 18 out of 32 bits
    %mov 26, 0, 14;
    %set/v v0x8ddfcf8_0, 8, 32;
    %movi 8, 15, 5;
    %set/v v0x8ddfaa8_0, 8, 4;
T_52.11 ;
    %delay 1, 0;
    %set/v v0x8de04d0_0, 3, 5;
    %set/v v0x8dd7a48_0, 3, 5;
    %ix/load 0, 1, 0;
    %assign/v0 v0x8dd7c20_0, 0, 0;
T_52.4 ;
    %end;
    .scope S_0x8dde2e0;
t_10 %join;
    %jmp T_52.3;
T_52.2 ;
    %fork t_13, S_0x8ddee58;
    %jmp t_12;
    .scope S_0x8ddee58;
t_13 ;
    %set/v v0x8ddeed8_0, 1, 1;
    %load/v 8, v0x8dd6e18_0, 4;
    %set/v v0x8ddf658_0, 8, 4;
    %load/v 8, v0x8dd7058_0, 32;
    %set/v v0x8ddf6c8_0, 8, 32;
    %load/v 8, v0x8ddf8b8_0, 480;
    %set/v v0x8ddf728_0, 8, 480;
    %load/v 8, v0x8dd6d60_0, 15;
    %set/v v0x8ddf838_0, 8, 15;
    %load/v 8, v0x8ddeed8_0, 1;
    %set/v v0x8ddf788_0, 8, 1;
    %fork TD_CPU.alu_rs\x5B1\x5D.checkAndGetData, S_0x8ddf5d8;
    %join;
    %load/v 8, v0x8ddf658_0, 4;
    %set/v v0x8dd6e18_0, 8, 4;
    %load/v 8, v0x8ddf6c8_0, 32;
    %set/v v0x8dd7058_0, 8, 32;
    %load/v 8, v0x8ddf788_0, 1;
    %set/v v0x8ddeed8_0, 8, 1;
    %load/v 8, v0x8ddfaa8_0, 4;
    %set/v v0x8ddf658_0, 8, 4;
    %load/v 8, v0x8ddfcf8_0, 32;
    %set/v v0x8ddf6c8_0, 8, 32;
    %load/v 8, v0x8ddf8b8_0, 480;
    %set/v v0x8ddf728_0, 8, 480;
    %load/v 8, v0x8dd6d60_0, 15;
    %set/v v0x8ddf838_0, 8, 15;
    %load/v 8, v0x8ddeed8_0, 1;
    %set/v v0x8ddf788_0, 8, 1;
    %fork TD_CPU.alu_rs\x5B1\x5D.checkAndGetData, S_0x8ddf5d8;
    %join;
    %load/v 8, v0x8ddf658_0, 4;
    %set/v v0x8ddfaa8_0, 8, 4;
    %load/v 8, v0x8ddf6c8_0, 32;
    %set/v v0x8ddfcf8_0, 8, 32;
    %load/v 8, v0x8ddf788_0, 1;
    %set/v v0x8ddeed8_0, 8, 1;
    %load/v 8, v0x8ddeed8_0, 1;
    %jmp/0xz  T_52.14, 8;
    %load/v 8, v0x8dd7820_0, 4;
    %cmpi/u 8, 1, 4;
    %jmp/1 T_52.16, 6;
    %cmpi/u 8, 6, 4;
    %jmp/1 T_52.17, 6;
    %cmpi/u 8, 0, 4;
    %jmp/1 T_52.18, 6;
    %cmpi/u 8, 5, 4;
    %jmp/1 T_52.19, 6;
    %cmpi/u 8, 2, 4;
    %jmp/1 T_52.20, 6;
    %cmpi/u 8, 7, 4;
    %jmp/1 T_52.21, 6;
    %jmp T_52.23;
T_52.16 ;
    %delay 1, 0;
    %load/v 8, v0x8dd7058_0, 32;
    %load/v 40, v0x8ddfcf8_0, 32;
    %sub 8, 40, 32;
    %set/v v0x8dd7bd0_0, 8, 32;
    %jmp T_52.23;
T_52.17 ;
    %delay 1, 0;
    %load/v 8, v0x8dd7058_0, 32;
    %load/v 40, v0x8ddfcf8_0, 32;
    %sub 8, 40, 32;
    %set/v v0x8dd7bd0_0, 8, 32;
    %jmp T_52.23;
T_52.18 ;
    %delay 1, 0;
    %load/v 8, v0x8dd7058_0, 32;
    %load/v 40, v0x8ddfcf8_0, 32;
    %add 8, 40, 32;
    %set/v v0x8dd7bd0_0, 8, 32;
    %jmp T_52.23;
T_52.19 ;
    %delay 1, 0;
    %load/v 8, v0x8dd7058_0, 32;
    %load/v 40, v0x8ddfcf8_0, 32;
    %add 8, 40, 32;
    %set/v v0x8dd7bd0_0, 8, 32;
    %jmp T_52.23;
T_52.20 ;
    %delay 31, 0;
    %load/v 8, v0x8dd7058_0, 32;
    %load/v 40, v0x8ddfcf8_0, 32;
    %mul 8, 40, 32;
    %set/v v0x8dd7bd0_0, 8, 32;
    %jmp T_52.23;
T_52.21 ;
    %delay 31, 0;
    %load/v 8, v0x8dd7058_0, 32;
    %load/v 40, v0x8ddfcf8_0, 32;
    %mul 8, 40, 32;
    %set/v v0x8dd7bd0_0, 8, 32;
    %jmp T_52.23;
T_52.23 ;
    %set/v v0x8dd7c20_0, 1, 1;
    %set/v v0x8ddff10_0, 0, 1;
    %delay 13, 0;
    %set/v v0x8dd7c20_0, 0, 1;
    %movi 8, 15, 5;
    %set/v v0x8dd7600_0, 8, 4;
T_52.14 ;
    %end;
    .scope S_0x8dde2e0;
t_12 %join;
T_52.3 ;
T_52.1 ;
    %jmp T_52;
    .thread T_52;
    .scope S_0x8ddc0c0;
T_53 ;
    %set/v v0x8dddec8_0, 3, 5;
    %end;
    .thread T_53;
    .scope S_0x8ddc0c0;
T_54 ;
    %set/v v0x8dddfd0_0, 3, 5;
    %end;
    .thread T_54;
    .scope S_0x8ddc0c0;
T_55 ;
    %wait E_0x8d39190;
    %load/v 8, v0x8dddf70_0, 1;
    %jmp/0xz  T_55.0, 8;
    %ix/load 0, 1, 0;
    %assign/v0 v0x8dddb50_0, 0, 0;
    %movi 8, 15, 5;
    %ix/load 0, 4, 0;
    %assign/v0 v0x8dddd28_0, 0, 8;
    %ix/load 0, 1, 0;
    %assign/v0 v0x8dde020_0, 0, 0;
    %ix/load 0, 32, 0;
    %assign/v0 v0x8dde088_0, 0, 0;
    %jmp T_55.1;
T_55.0 ;
    %load/v 8, v0x8dddb50_0, 1;
    %inv 8, 1;
    %jmp/0xz  T_55.2, 8;
    %fork t_15, S_0x8ddcd18;
    %jmp t_14;
    .scope S_0x8ddcd18;
t_15 ;
    %delay 1, 0;
    %load/v 8, v0x8dddd88_0, 4;
    %mov 12, 0, 1;
    %cmpi/u 8, 2, 5;
    %jmp/0xz  T_55.4, 4;
    %vpi_call 7 51 "$display", $realtime, ": %d receive inst:%b", P_0x8ddc464, v0x8ddde28_0;
    %ix/load 1, 28, 0;
    %mov 4, 0, 1;
    %jmp/1 T_55.6, 4;
    %load/x1p 8, v0x8ddde28_0, 4;
    %jmp T_55.7;
T_55.6 ;
    %mov 8, 2, 4;
T_55.7 ;
; Save base=8 wid=4 in lookaside.
    %set/v v0x8ddde78_0, 8, 4;
    %ix/load 0, 1, 0;
    %assign/v0 v0x8dddb50_0, 0, 1;
    %load/v 8, v0x8ddd7f8_0, 4;
    %ix/load 0, 4, 0;
    %assign/v0 v0x8dddd28_0, 0, 8;
    %ix/load 1, 23, 0;
    %mov 4, 0, 1;
    %jmp/1 T_55.8, 4;
    %load/x1p 8, v0x8ddde28_0, 5;
    %jmp T_55.9;
T_55.8 ;
    %mov 8, 2, 5;
T_55.9 ;
; Save base=8 wid=5 in lookaside.
    %set/v v0x8dddec8_0, 8, 5;
    %load/v 8, v0x8dde0d8_0, 32;
    %set/v v0x8ddd358_0, 8, 32;
    %load/v 8, v0x8ddddd8_0, 4;
    %set/v v0x8ddd2f8_0, 8, 4;
    %load/v 8, v0x8ddd698_0, 480;
    %set/v v0x8ddd178_0, 8, 480;
    %load/v 8, v0x8ddd6f8_0, 15;
    %set/v v0x8ddd1e8_0, 8, 15;
    %fork TD_CPU.alu_rs\x5B2\x5D.getData, S_0x8ddd0f8;
    %join;
    %load/v 8, v0x8ddd2a8_0, 32;
    %set/v v0x8ddd8b8_0, 8, 32;
    %load/v 8, v0x8ddd248_0, 4;
    %set/v v0x8ddd748_0, 8, 4;
    %load/v 8, v0x8ddde78_0, 4;
    %mov 12, 0, 1;
    %cmpi/u 8, 0, 5;
    %mov 8, 4, 1;
    %load/v 9, v0x8ddde78_0, 4;
    %mov 13, 0, 1;
    %cmpi/u 9, 1, 5;
    %or 8, 4, 1;
    %load/v 9, v0x8ddde78_0, 4;
    %mov 13, 0, 1;
    %cmpi/u 9, 2, 5;
    %or 8, 4, 1;
    %jmp/0xz  T_55.10, 8;
    %ix/load 1, 13, 0;
    %mov 4, 0, 1;
    %jmp/1 T_55.12, 4;
    %load/x1p 8, v0x8ddde28_0, 5;
    %jmp T_55.13;
T_55.12 ;
    %mov 8, 2, 5;
T_55.13 ;
; Save base=8 wid=5 in lookaside.
    %set/v v0x8dddfd0_0, 8, 5;
    %load/v 8, v0x8dde210_0, 32;
    %set/v v0x8ddd358_0, 8, 32;
    %load/v 8, v0x8dddf20_0, 4;
    %set/v v0x8ddd2f8_0, 8, 4;
    %load/v 8, v0x8ddd698_0, 480;
    %set/v v0x8ddd178_0, 8, 480;
    %load/v 8, v0x8ddd6f8_0, 15;
    %set/v v0x8ddd1e8_0, 8, 15;
    %fork TD_CPU.alu_rs\x5B2\x5D.getData, S_0x8ddd0f8;
    %join;
    %load/v 8, v0x8ddd2a8_0, 32;
    %set/v v0x8ddd918_0, 8, 32;
    %load/v 8, v0x8ddd248_0, 4;
    %set/v v0x8ddd7a8_0, 8, 4;
    %jmp T_55.11;
T_55.10 ;
    %load/v 8, v0x8ddde28_0, 18; Select 18 out of 32 bits
    %mov 26, 0, 14;
    %set/v v0x8ddd918_0, 8, 32;
    %movi 8, 15, 5;
    %set/v v0x8ddd7a8_0, 8, 4;
T_55.11 ;
    %delay 1, 0;
    %set/v v0x8dddec8_0, 3, 5;
    %set/v v0x8dddfd0_0, 3, 5;
    %ix/load 0, 1, 0;
    %assign/v0 v0x8dde020_0, 0, 0;
T_55.4 ;
    %end;
    .scope S_0x8ddc0c0;
t_14 %join;
    %jmp T_55.3;
T_55.2 ;
    %fork t_17, S_0x8ddcc38;
    %jmp t_16;
    .scope S_0x8ddcc38;
t_17 ;
    %set/v v0x8ddccb8_0, 1, 1;
    %load/v 8, v0x8ddd748_0, 4;
    %set/v v0x8ddd438_0, 8, 4;
    %load/v 8, v0x8ddd8b8_0, 32;
    %set/v v0x8ddd4a8_0, 8, 32;
    %load/v 8, v0x8ddd698_0, 480;
    %set/v v0x8ddd508_0, 8, 480;
    %load/v 8, v0x8ddd6f8_0, 15;
    %set/v v0x8ddd618_0, 8, 15;
    %load/v 8, v0x8ddccb8_0, 1;
    %set/v v0x8ddd568_0, 8, 1;
    %fork TD_CPU.alu_rs\x5B2\x5D.checkAndGetData, S_0x8ddd3b8;
    %join;
    %load/v 8, v0x8ddd438_0, 4;
    %set/v v0x8ddd748_0, 8, 4;
    %load/v 8, v0x8ddd4a8_0, 32;
    %set/v v0x8ddd8b8_0, 8, 32;
    %load/v 8, v0x8ddd568_0, 1;
    %set/v v0x8ddccb8_0, 8, 1;
    %load/v 8, v0x8ddd7a8_0, 4;
    %set/v v0x8ddd438_0, 8, 4;
    %load/v 8, v0x8ddd918_0, 32;
    %set/v v0x8ddd4a8_0, 8, 32;
    %load/v 8, v0x8ddd698_0, 480;
    %set/v v0x8ddd508_0, 8, 480;
    %load/v 8, v0x8ddd6f8_0, 15;
    %set/v v0x8ddd618_0, 8, 15;
    %load/v 8, v0x8ddccb8_0, 1;
    %set/v v0x8ddd568_0, 8, 1;
    %fork TD_CPU.alu_rs\x5B2\x5D.checkAndGetData, S_0x8ddd3b8;
    %join;
    %load/v 8, v0x8ddd438_0, 4;
    %set/v v0x8ddd7a8_0, 8, 4;
    %load/v 8, v0x8ddd4a8_0, 32;
    %set/v v0x8ddd918_0, 8, 32;
    %load/v 8, v0x8ddd568_0, 1;
    %set/v v0x8ddccb8_0, 8, 1;
    %load/v 8, v0x8ddccb8_0, 1;
    %jmp/0xz  T_55.14, 8;
    %load/v 8, v0x8ddde78_0, 4;
    %cmpi/u 8, 1, 4;
    %jmp/1 T_55.16, 6;
    %cmpi/u 8, 6, 4;
    %jmp/1 T_55.17, 6;
    %cmpi/u 8, 0, 4;
    %jmp/1 T_55.18, 6;
    %cmpi/u 8, 5, 4;
    %jmp/1 T_55.19, 6;
    %cmpi/u 8, 2, 4;
    %jmp/1 T_55.20, 6;
    %cmpi/u 8, 7, 4;
    %jmp/1 T_55.21, 6;
    %jmp T_55.23;
T_55.16 ;
    %delay 1, 0;
    %load/v 8, v0x8ddd8b8_0, 32;
    %load/v 40, v0x8ddd918_0, 32;
    %sub 8, 40, 32;
    %set/v v0x8dde088_0, 8, 32;
    %jmp T_55.23;
T_55.17 ;
    %delay 1, 0;
    %load/v 8, v0x8ddd8b8_0, 32;
    %load/v 40, v0x8ddd918_0, 32;
    %sub 8, 40, 32;
    %set/v v0x8dde088_0, 8, 32;
    %jmp T_55.23;
T_55.18 ;
    %delay 1, 0;
    %load/v 8, v0x8ddd8b8_0, 32;
    %load/v 40, v0x8ddd918_0, 32;
    %add 8, 40, 32;
    %set/v v0x8dde088_0, 8, 32;
    %jmp T_55.23;
T_55.19 ;
    %delay 1, 0;
    %load/v 8, v0x8ddd8b8_0, 32;
    %load/v 40, v0x8ddd918_0, 32;
    %add 8, 40, 32;
    %set/v v0x8dde088_0, 8, 32;
    %jmp T_55.23;
T_55.20 ;
    %delay 31, 0;
    %load/v 8, v0x8ddd8b8_0, 32;
    %load/v 40, v0x8ddd918_0, 32;
    %mul 8, 40, 32;
    %set/v v0x8dde088_0, 8, 32;
    %jmp T_55.23;
T_55.21 ;
    %delay 31, 0;
    %load/v 8, v0x8ddd8b8_0, 32;
    %load/v 40, v0x8ddd918_0, 32;
    %mul 8, 40, 32;
    %set/v v0x8dde088_0, 8, 32;
    %jmp T_55.23;
T_55.23 ;
    %set/v v0x8dde020_0, 1, 1;
    %set/v v0x8dddb50_0, 0, 1;
    %delay 13, 0;
    %set/v v0x8dde020_0, 0, 1;
    %movi 8, 15, 5;
    %set/v v0x8dddd28_0, 8, 4;
T_55.14 ;
    %end;
    .scope S_0x8ddc0c0;
t_16 %join;
T_55.3 ;
T_55.1 ;
    %jmp T_55;
    .thread T_55;
    .scope S_0x8dd9ea0;
T_56 ;
    %set/v v0x8ddbca8_0, 3, 5;
    %end;
    .thread T_56;
    .scope S_0x8dd9ea0;
T_57 ;
    %set/v v0x8ddbdb0_0, 3, 5;
    %end;
    .thread T_57;
    .scope S_0x8dd9ea0;
T_58 ;
    %wait E_0x8d39190;
    %load/v 8, v0x8ddbd50_0, 1;
    %jmp/0xz  T_58.0, 8;
    %ix/load 0, 1, 0;
    %assign/v0 v0x8ddb930_0, 0, 0;
    %movi 8, 15, 5;
    %ix/load 0, 4, 0;
    %assign/v0 v0x8ddbb08_0, 0, 8;
    %ix/load 0, 1, 0;
    %assign/v0 v0x8ddbe00_0, 0, 0;
    %ix/load 0, 32, 0;
    %assign/v0 v0x8ddbe68_0, 0, 0;
    %jmp T_58.1;
T_58.0 ;
    %load/v 8, v0x8ddb930_0, 1;
    %inv 8, 1;
    %jmp/0xz  T_58.2, 8;
    %fork t_19, S_0x8ddaaf8;
    %jmp t_18;
    .scope S_0x8ddaaf8;
t_19 ;
    %delay 1, 0;
    %load/v 8, v0x8ddbb68_0, 4;
    %mov 12, 0, 1;
    %cmpi/u 8, 3, 5;
    %jmp/0xz  T_58.4, 4;
    %vpi_call 7 51 "$display", $realtime, ": %d receive inst:%b", P_0x8dda244, v0x8ddbc08_0;
    %ix/load 1, 28, 0;
    %mov 4, 0, 1;
    %jmp/1 T_58.6, 4;
    %load/x1p 8, v0x8ddbc08_0, 4;
    %jmp T_58.7;
T_58.6 ;
    %mov 8, 2, 4;
T_58.7 ;
; Save base=8 wid=4 in lookaside.
    %set/v v0x8ddbc58_0, 8, 4;
    %ix/load 0, 1, 0;
    %assign/v0 v0x8ddb930_0, 0, 1;
    %load/v 8, v0x8ddb5d8_0, 4;
    %ix/load 0, 4, 0;
    %assign/v0 v0x8ddbb08_0, 0, 8;
    %ix/load 1, 23, 0;
    %mov 4, 0, 1;
    %jmp/1 T_58.8, 4;
    %load/x1p 8, v0x8ddbc08_0, 5;
    %jmp T_58.9;
T_58.8 ;
    %mov 8, 2, 5;
T_58.9 ;
; Save base=8 wid=5 in lookaside.
    %set/v v0x8ddbca8_0, 8, 5;
    %load/v 8, v0x8ddbeb8_0, 32;
    %set/v v0x8ddb138_0, 8, 32;
    %load/v 8, v0x8ddbbb8_0, 4;
    %set/v v0x8ddb0d8_0, 8, 4;
    %load/v 8, v0x8ddb478_0, 480;
    %set/v v0x8ddaf58_0, 8, 480;
    %load/v 8, v0x8ddb4d8_0, 15;
    %set/v v0x8ddafc8_0, 8, 15;
    %fork TD_CPU.alu_rs\x5B3\x5D.getData, S_0x8ddaed8;
    %join;
    %load/v 8, v0x8ddb088_0, 32;
    %set/v v0x8ddb698_0, 8, 32;
    %load/v 8, v0x8ddb028_0, 4;
    %set/v v0x8ddb528_0, 8, 4;
    %load/v 8, v0x8ddbc58_0, 4;
    %mov 12, 0, 1;
    %cmpi/u 8, 0, 5;
    %mov 8, 4, 1;
    %load/v 9, v0x8ddbc58_0, 4;
    %mov 13, 0, 1;
    %cmpi/u 9, 1, 5;
    %or 8, 4, 1;
    %load/v 9, v0x8ddbc58_0, 4;
    %mov 13, 0, 1;
    %cmpi/u 9, 2, 5;
    %or 8, 4, 1;
    %jmp/0xz  T_58.10, 8;
    %ix/load 1, 13, 0;
    %mov 4, 0, 1;
    %jmp/1 T_58.12, 4;
    %load/x1p 8, v0x8ddbc08_0, 5;
    %jmp T_58.13;
T_58.12 ;
    %mov 8, 2, 5;
T_58.13 ;
; Save base=8 wid=5 in lookaside.
    %set/v v0x8ddbdb0_0, 8, 5;
    %load/v 8, v0x8ddbff0_0, 32;
    %set/v v0x8ddb138_0, 8, 32;
    %load/v 8, v0x8ddbd00_0, 4;
    %set/v v0x8ddb0d8_0, 8, 4;
    %load/v 8, v0x8ddb478_0, 480;
    %set/v v0x8ddaf58_0, 8, 480;
    %load/v 8, v0x8ddb4d8_0, 15;
    %set/v v0x8ddafc8_0, 8, 15;
    %fork TD_CPU.alu_rs\x5B3\x5D.getData, S_0x8ddaed8;
    %join;
    %load/v 8, v0x8ddb088_0, 32;
    %set/v v0x8ddb6f8_0, 8, 32;
    %load/v 8, v0x8ddb028_0, 4;
    %set/v v0x8ddb588_0, 8, 4;
    %jmp T_58.11;
T_58.10 ;
    %load/v 8, v0x8ddbc08_0, 18; Select 18 out of 32 bits
    %mov 26, 0, 14;
    %set/v v0x8ddb6f8_0, 8, 32;
    %movi 8, 15, 5;
    %set/v v0x8ddb588_0, 8, 4;
T_58.11 ;
    %delay 1, 0;
    %set/v v0x8ddbca8_0, 3, 5;
    %set/v v0x8ddbdb0_0, 3, 5;
    %ix/load 0, 1, 0;
    %assign/v0 v0x8ddbe00_0, 0, 0;
T_58.4 ;
    %end;
    .scope S_0x8dd9ea0;
t_18 %join;
    %jmp T_58.3;
T_58.2 ;
    %fork t_21, S_0x8ddaa18;
    %jmp t_20;
    .scope S_0x8ddaa18;
t_21 ;
    %set/v v0x8ddaa98_0, 1, 1;
    %load/v 8, v0x8ddb528_0, 4;
    %set/v v0x8ddb218_0, 8, 4;
    %load/v 8, v0x8ddb698_0, 32;
    %set/v v0x8ddb288_0, 8, 32;
    %load/v 8, v0x8ddb478_0, 480;
    %set/v v0x8ddb2e8_0, 8, 480;
    %load/v 8, v0x8ddb4d8_0, 15;
    %set/v v0x8ddb3f8_0, 8, 15;
    %load/v 8, v0x8ddaa98_0, 1;
    %set/v v0x8ddb348_0, 8, 1;
    %fork TD_CPU.alu_rs\x5B3\x5D.checkAndGetData, S_0x8ddb198;
    %join;
    %load/v 8, v0x8ddb218_0, 4;
    %set/v v0x8ddb528_0, 8, 4;
    %load/v 8, v0x8ddb288_0, 32;
    %set/v v0x8ddb698_0, 8, 32;
    %load/v 8, v0x8ddb348_0, 1;
    %set/v v0x8ddaa98_0, 8, 1;
    %load/v 8, v0x8ddb588_0, 4;
    %set/v v0x8ddb218_0, 8, 4;
    %load/v 8, v0x8ddb6f8_0, 32;
    %set/v v0x8ddb288_0, 8, 32;
    %load/v 8, v0x8ddb478_0, 480;
    %set/v v0x8ddb2e8_0, 8, 480;
    %load/v 8, v0x8ddb4d8_0, 15;
    %set/v v0x8ddb3f8_0, 8, 15;
    %load/v 8, v0x8ddaa98_0, 1;
    %set/v v0x8ddb348_0, 8, 1;
    %fork TD_CPU.alu_rs\x5B3\x5D.checkAndGetData, S_0x8ddb198;
    %join;
    %load/v 8, v0x8ddb218_0, 4;
    %set/v v0x8ddb588_0, 8, 4;
    %load/v 8, v0x8ddb288_0, 32;
    %set/v v0x8ddb6f8_0, 8, 32;
    %load/v 8, v0x8ddb348_0, 1;
    %set/v v0x8ddaa98_0, 8, 1;
    %load/v 8, v0x8ddaa98_0, 1;
    %jmp/0xz  T_58.14, 8;
    %load/v 8, v0x8ddbc58_0, 4;
    %cmpi/u 8, 1, 4;
    %jmp/1 T_58.16, 6;
    %cmpi/u 8, 6, 4;
    %jmp/1 T_58.17, 6;
    %cmpi/u 8, 0, 4;
    %jmp/1 T_58.18, 6;
    %cmpi/u 8, 5, 4;
    %jmp/1 T_58.19, 6;
    %cmpi/u 8, 2, 4;
    %jmp/1 T_58.20, 6;
    %cmpi/u 8, 7, 4;
    %jmp/1 T_58.21, 6;
    %jmp T_58.23;
T_58.16 ;
    %delay 1, 0;
    %load/v 8, v0x8ddb698_0, 32;
    %load/v 40, v0x8ddb6f8_0, 32;
    %sub 8, 40, 32;
    %set/v v0x8ddbe68_0, 8, 32;
    %jmp T_58.23;
T_58.17 ;
    %delay 1, 0;
    %load/v 8, v0x8ddb698_0, 32;
    %load/v 40, v0x8ddb6f8_0, 32;
    %sub 8, 40, 32;
    %set/v v0x8ddbe68_0, 8, 32;
    %jmp T_58.23;
T_58.18 ;
    %delay 1, 0;
    %load/v 8, v0x8ddb698_0, 32;
    %load/v 40, v0x8ddb6f8_0, 32;
    %add 8, 40, 32;
    %set/v v0x8ddbe68_0, 8, 32;
    %jmp T_58.23;
T_58.19 ;
    %delay 1, 0;
    %load/v 8, v0x8ddb698_0, 32;
    %load/v 40, v0x8ddb6f8_0, 32;
    %add 8, 40, 32;
    %set/v v0x8ddbe68_0, 8, 32;
    %jmp T_58.23;
T_58.20 ;
    %delay 31, 0;
    %load/v 8, v0x8ddb698_0, 32;
    %load/v 40, v0x8ddb6f8_0, 32;
    %mul 8, 40, 32;
    %set/v v0x8ddbe68_0, 8, 32;
    %jmp T_58.23;
T_58.21 ;
    %delay 31, 0;
    %load/v 8, v0x8ddb698_0, 32;
    %load/v 40, v0x8ddb6f8_0, 32;
    %mul 8, 40, 32;
    %set/v v0x8ddbe68_0, 8, 32;
    %jmp T_58.23;
T_58.23 ;
    %set/v v0x8ddbe00_0, 1, 1;
    %set/v v0x8ddb930_0, 0, 1;
    %delay 13, 0;
    %set/v v0x8ddbe00_0, 0, 1;
    %movi 8, 15, 5;
    %set/v v0x8ddbb08_0, 8, 4;
T_58.14 ;
    %end;
    .scope S_0x8dd9ea0;
t_20 %join;
T_58.3 ;
T_58.1 ;
    %jmp T_58;
    .thread T_58;
    .scope S_0x8dd7fb0;
T_59 ;
    %set/v v0x8dd9a88_0, 3, 5;
    %end;
    .thread T_59;
    .scope S_0x8dd7fb0;
T_60 ;
    %set/v v0x8dd9b90_0, 3, 5;
    %end;
    .thread T_60;
    .scope S_0x8dd7fb0;
T_61 ;
    %wait E_0x8d39190;
    %load/v 8, v0x8dd9b30_0, 1;
    %jmp/0xz  T_61.0, 8;
    %ix/load 0, 1, 0;
    %assign/v0 v0x8dd9710_0, 0, 0;
    %movi 8, 15, 5;
    %ix/load 0, 4, 0;
    %assign/v0 v0x8dd98e8_0, 0, 8;
    %ix/load 0, 1, 0;
    %assign/v0 v0x8dd9be0_0, 0, 0;
    %ix/load 0, 32, 0;
    %assign/v0 v0x8dd9c48_0, 0, 0;
    %jmp T_61.1;
T_61.0 ;
    %load/v 8, v0x8dd9710_0, 1;
    %inv 8, 1;
    %jmp/0xz  T_61.2, 8;
    %fork t_23, S_0x8dd88d8;
    %jmp t_22;
    .scope S_0x8dd88d8;
t_23 ;
    %delay 1, 0;
    %load/v 8, v0x8dd9948_0, 4;
    %mov 12, 0, 1;
    %cmpi/u 8, 4, 5;
    %jmp/0xz  T_61.4, 4;
    %vpi_call 7 51 "$display", $realtime, ": %d receive inst:%b", P_0x8dd8354, v0x8dd99e8_0;
    %ix/load 1, 28, 0;
    %mov 4, 0, 1;
    %jmp/1 T_61.6, 4;
    %load/x1p 8, v0x8dd99e8_0, 4;
    %jmp T_61.7;
T_61.6 ;
    %mov 8, 2, 4;
T_61.7 ;
; Save base=8 wid=4 in lookaside.
    %set/v v0x8dd9a38_0, 8, 4;
    %ix/load 0, 1, 0;
    %assign/v0 v0x8dd9710_0, 0, 1;
    %load/v 8, v0x8dd93b8_0, 4;
    %ix/load 0, 4, 0;
    %assign/v0 v0x8dd98e8_0, 0, 8;
    %ix/load 1, 23, 0;
    %mov 4, 0, 1;
    %jmp/1 T_61.8, 4;
    %load/x1p 8, v0x8dd99e8_0, 5;
    %jmp T_61.9;
T_61.8 ;
    %mov 8, 2, 5;
T_61.9 ;
; Save base=8 wid=5 in lookaside.
    %set/v v0x8dd9a88_0, 8, 5;
    %load/v 8, v0x8dd9c98_0, 32;
    %set/v v0x8dd8f18_0, 8, 32;
    %load/v 8, v0x8dd9998_0, 4;
    %set/v v0x8dd8eb8_0, 8, 4;
    %load/v 8, v0x8dd9258_0, 480;
    %set/v v0x8dd8d38_0, 8, 480;
    %load/v 8, v0x8dd92b8_0, 15;
    %set/v v0x8dd8da8_0, 8, 15;
    %fork TD_CPU.alu_rs\x5B4\x5D.getData, S_0x8dd8cb8;
    %join;
    %load/v 8, v0x8dd8e68_0, 32;
    %set/v v0x8dd9478_0, 8, 32;
    %load/v 8, v0x8dd8e08_0, 4;
    %set/v v0x8dd9308_0, 8, 4;
    %load/v 8, v0x8dd9a38_0, 4;
    %mov 12, 0, 1;
    %cmpi/u 8, 0, 5;
    %mov 8, 4, 1;
    %load/v 9, v0x8dd9a38_0, 4;
    %mov 13, 0, 1;
    %cmpi/u 9, 1, 5;
    %or 8, 4, 1;
    %load/v 9, v0x8dd9a38_0, 4;
    %mov 13, 0, 1;
    %cmpi/u 9, 2, 5;
    %or 8, 4, 1;
    %jmp/0xz  T_61.10, 8;
    %ix/load 1, 13, 0;
    %mov 4, 0, 1;
    %jmp/1 T_61.12, 4;
    %load/x1p 8, v0x8dd99e8_0, 5;
    %jmp T_61.13;
T_61.12 ;
    %mov 8, 2, 5;
T_61.13 ;
; Save base=8 wid=5 in lookaside.
    %set/v v0x8dd9b90_0, 8, 5;
    %load/v 8, v0x8dd9dd0_0, 32;
    %set/v v0x8dd8f18_0, 8, 32;
    %load/v 8, v0x8dd9ae0_0, 4;
    %set/v v0x8dd8eb8_0, 8, 4;
    %load/v 8, v0x8dd9258_0, 480;
    %set/v v0x8dd8d38_0, 8, 480;
    %load/v 8, v0x8dd92b8_0, 15;
    %set/v v0x8dd8da8_0, 8, 15;
    %fork TD_CPU.alu_rs\x5B4\x5D.getData, S_0x8dd8cb8;
    %join;
    %load/v 8, v0x8dd8e68_0, 32;
    %set/v v0x8dd94d8_0, 8, 32;
    %load/v 8, v0x8dd8e08_0, 4;
    %set/v v0x8dd9368_0, 8, 4;
    %jmp T_61.11;
T_61.10 ;
    %load/v 8, v0x8dd99e8_0, 18; Select 18 out of 32 bits
    %mov 26, 0, 14;
    %set/v v0x8dd94d8_0, 8, 32;
    %movi 8, 15, 5;
    %set/v v0x8dd9368_0, 8, 4;
T_61.11 ;
    %delay 1, 0;
    %set/v v0x8dd9a88_0, 3, 5;
    %set/v v0x8dd9b90_0, 3, 5;
    %ix/load 0, 1, 0;
    %assign/v0 v0x8dd9be0_0, 0, 0;
T_61.4 ;
    %end;
    .scope S_0x8dd7fb0;
t_22 %join;
    %jmp T_61.3;
T_61.2 ;
    %fork t_25, S_0x8dd87e8;
    %jmp t_24;
    .scope S_0x8dd87e8;
t_25 ;
    %set/v v0x8dd8868_0, 1, 1;
    %load/v 8, v0x8dd9308_0, 4;
    %set/v v0x8dd8ff8_0, 8, 4;
    %load/v 8, v0x8dd9478_0, 32;
    %set/v v0x8dd9068_0, 8, 32;
    %load/v 8, v0x8dd9258_0, 480;
    %set/v v0x8dd90c8_0, 8, 480;
    %load/v 8, v0x8dd92b8_0, 15;
    %set/v v0x8dd91d8_0, 8, 15;
    %load/v 8, v0x8dd8868_0, 1;
    %set/v v0x8dd9128_0, 8, 1;
    %fork TD_CPU.alu_rs\x5B4\x5D.checkAndGetData, S_0x8dd8f78;
    %join;
    %load/v 8, v0x8dd8ff8_0, 4;
    %set/v v0x8dd9308_0, 8, 4;
    %load/v 8, v0x8dd9068_0, 32;
    %set/v v0x8dd9478_0, 8, 32;
    %load/v 8, v0x8dd9128_0, 1;
    %set/v v0x8dd8868_0, 8, 1;
    %load/v 8, v0x8dd9368_0, 4;
    %set/v v0x8dd8ff8_0, 8, 4;
    %load/v 8, v0x8dd94d8_0, 32;
    %set/v v0x8dd9068_0, 8, 32;
    %load/v 8, v0x8dd9258_0, 480;
    %set/v v0x8dd90c8_0, 8, 480;
    %load/v 8, v0x8dd92b8_0, 15;
    %set/v v0x8dd91d8_0, 8, 15;
    %load/v 8, v0x8dd8868_0, 1;
    %set/v v0x8dd9128_0, 8, 1;
    %fork TD_CPU.alu_rs\x5B4\x5D.checkAndGetData, S_0x8dd8f78;
    %join;
    %load/v 8, v0x8dd8ff8_0, 4;
    %set/v v0x8dd9368_0, 8, 4;
    %load/v 8, v0x8dd9068_0, 32;
    %set/v v0x8dd94d8_0, 8, 32;
    %load/v 8, v0x8dd9128_0, 1;
    %set/v v0x8dd8868_0, 8, 1;
    %load/v 8, v0x8dd8868_0, 1;
    %jmp/0xz  T_61.14, 8;
    %load/v 8, v0x8dd9a38_0, 4;
    %cmpi/u 8, 1, 4;
    %jmp/1 T_61.16, 6;
    %cmpi/u 8, 6, 4;
    %jmp/1 T_61.17, 6;
    %cmpi/u 8, 0, 4;
    %jmp/1 T_61.18, 6;
    %cmpi/u 8, 5, 4;
    %jmp/1 T_61.19, 6;
    %cmpi/u 8, 2, 4;
    %jmp/1 T_61.20, 6;
    %cmpi/u 8, 7, 4;
    %jmp/1 T_61.21, 6;
    %jmp T_61.23;
T_61.16 ;
    %delay 1, 0;
    %load/v 8, v0x8dd9478_0, 32;
    %load/v 40, v0x8dd94d8_0, 32;
    %sub 8, 40, 32;
    %set/v v0x8dd9c48_0, 8, 32;
    %jmp T_61.23;
T_61.17 ;
    %delay 1, 0;
    %load/v 8, v0x8dd9478_0, 32;
    %load/v 40, v0x8dd94d8_0, 32;
    %sub 8, 40, 32;
    %set/v v0x8dd9c48_0, 8, 32;
    %jmp T_61.23;
T_61.18 ;
    %delay 1, 0;
    %load/v 8, v0x8dd9478_0, 32;
    %load/v 40, v0x8dd94d8_0, 32;
    %add 8, 40, 32;
    %set/v v0x8dd9c48_0, 8, 32;
    %jmp T_61.23;
T_61.19 ;
    %delay 1, 0;
    %load/v 8, v0x8dd9478_0, 32;
    %load/v 40, v0x8dd94d8_0, 32;
    %add 8, 40, 32;
    %set/v v0x8dd9c48_0, 8, 32;
    %jmp T_61.23;
T_61.20 ;
    %delay 31, 0;
    %load/v 8, v0x8dd9478_0, 32;
    %load/v 40, v0x8dd94d8_0, 32;
    %mul 8, 40, 32;
    %set/v v0x8dd9c48_0, 8, 32;
    %jmp T_61.23;
T_61.21 ;
    %delay 31, 0;
    %load/v 8, v0x8dd9478_0, 32;
    %load/v 40, v0x8dd94d8_0, 32;
    %mul 8, 40, 32;
    %set/v v0x8dd9c48_0, 8, 32;
    %jmp T_61.23;
T_61.23 ;
    %set/v v0x8dd9be0_0, 1, 1;
    %set/v v0x8dd9710_0, 0, 1;
    %delay 13, 0;
    %set/v v0x8dd9be0_0, 0, 1;
    %movi 8, 15, 5;
    %set/v v0x8dd98e8_0, 8, 4;
T_61.14 ;
    %end;
    .scope S_0x8dd7fb0;
t_24 %join;
T_61.3 ;
T_61.1 ;
    %jmp T_61;
    .thread T_61;
    .scope S_0x8dd5728;
T_62 ;
    %set/v v0x8dd78d8_0, 3, 5;
    %end;
    .thread T_62;
    .scope S_0x8dd5728;
T_63 ;
    %set/v v0x8dd7b18_0, 3, 5;
    %end;
    .thread T_63;
    .scope S_0x8dd5728;
T_64 ;
    %wait E_0x8d39190;
    %load/v 8, v0x8dd79e8_0, 1;
    %jmp/0xz  T_64.0, 8;
    %ix/load 0, 1, 0;
    %assign/v0 v0x8dd7358_0, 0, 0;
    %movi 8, 15, 5;
    %ix/load 0, 4, 0;
    %assign/v0 v0x8dd7668_0, 0, 8;
    %ix/load 0, 1, 0;
    %assign/v0 v0x8dd7b68_0, 0, 0;
    %ix/load 0, 32, 0;
    %assign/v0 v0x8dd7ca0_0, 0, 0;
    %jmp T_64.1;
T_64.0 ;
    %load/v 8, v0x8dd7358_0, 1;
    %inv 8, 1;
    %jmp/0xz  T_64.2, 8;
    %fork t_27, S_0x8dd6380;
    %jmp t_26;
    .scope S_0x8dd6380;
t_27 ;
    %delay 1, 0;
    %load/v 8, v0x8dd76c8_0, 4;
    %mov 12, 0, 1;
    %cmpi/u 8, 5, 5;
    %jmp/0xz  T_64.4, 4;
    %vpi_call 7 51 "$display", $realtime, ": %d receive inst:%b", P_0x8dd5acc, v0x8dd77d0_0;
    %ix/load 1, 28, 0;
    %mov 4, 0, 1;
    %jmp/1 T_64.6, 4;
    %load/x1p 8, v0x8dd77d0_0, 4;
    %jmp T_64.7;
T_64.6 ;
    %mov 8, 2, 4;
T_64.7 ;
; Save base=8 wid=4 in lookaside.
    %set/v v0x8dd7888_0, 8, 4;
    %ix/load 0, 1, 0;
    %assign/v0 v0x8dd7358_0, 0, 1;
    %load/v 8, v0x8dd6f30_0, 4;
    %ix/load 0, 4, 0;
    %assign/v0 v0x8dd7668_0, 0, 8;
    %ix/load 1, 23, 0;
    %mov 4, 0, 1;
    %jmp/1 T_64.8, 4;
    %load/x1p 8, v0x8dd77d0_0, 5;
    %jmp T_64.9;
T_64.8 ;
    %mov 8, 2, 5;
T_64.9 ;
; Save base=8 wid=5 in lookaside.
    %set/v v0x8dd78d8_0, 8, 5;
    %load/v 8, v0x8dd7e28_0, 32;
    %set/v v0x8dd69c0_0, 8, 32;
    %load/v 8, v0x8dd7718_0, 4;
    %set/v v0x8dd6960_0, 8, 4;
    %load/v 8, v0x8dd6d00_0, 480;
    %set/v v0x8dd67e0_0, 8, 480;
    %load/v 8, v0x8dd6dc8_0, 15;
    %set/v v0x8dd6850_0, 8, 15;
    %fork TD_CPU.alu_rs\x5B5\x5D.getData, S_0x8dd6760;
    %join;
    %load/v 8, v0x8dd6910_0, 32;
    %set/v v0x8dd70c0_0, 8, 32;
    %load/v 8, v0x8dd68b0_0, 4;
    %set/v v0x8dd6e80_0, 8, 4;
    %load/v 8, v0x8dd7888_0, 4;
    %mov 12, 0, 1;
    %cmpi/u 8, 0, 5;
    %mov 8, 4, 1;
    %load/v 9, v0x8dd7888_0, 4;
    %mov 13, 0, 1;
    %cmpi/u 9, 1, 5;
    %or 8, 4, 1;
    %load/v 9, v0x8dd7888_0, 4;
    %mov 13, 0, 1;
    %cmpi/u 9, 2, 5;
    %or 8, 4, 1;
    %jmp/0xz  T_64.10, 8;
    %ix/load 1, 13, 0;
    %mov 4, 0, 1;
    %jmp/1 T_64.12, 4;
    %load/x1p 8, v0x8dd77d0_0, 5;
    %jmp T_64.13;
T_64.12 ;
    %mov 8, 2, 5;
T_64.13 ;
; Save base=8 wid=5 in lookaside.
    %set/v v0x8dd7b18_0, 8, 5;
    %load/v 8, v0x8dd7ee0_0, 32;
    %set/v v0x8dd69c0_0, 8, 32;
    %load/v 8, v0x8dd7998_0, 4;
    %set/v v0x8dd6960_0, 8, 4;
    %load/v 8, v0x8dd6d00_0, 480;
    %set/v v0x8dd67e0_0, 8, 480;
    %load/v 8, v0x8dd6dc8_0, 15;
    %set/v v0x8dd6850_0, 8, 15;
    %fork TD_CPU.alu_rs\x5B5\x5D.getData, S_0x8dd6760;
    %join;
    %load/v 8, v0x8dd6910_0, 32;
    %set/v v0x8dd7120_0, 8, 32;
    %load/v 8, v0x8dd68b0_0, 4;
    %set/v v0x8dd6ee0_0, 8, 4;
    %jmp T_64.11;
T_64.10 ;
    %load/v 8, v0x8dd77d0_0, 18; Select 18 out of 32 bits
    %mov 26, 0, 14;
    %set/v v0x8dd7120_0, 8, 32;
    %movi 8, 15, 5;
    %set/v v0x8dd6ee0_0, 8, 4;
T_64.11 ;
    %delay 1, 0;
    %set/v v0x8dd78d8_0, 3, 5;
    %set/v v0x8dd7b18_0, 3, 5;
    %ix/load 0, 1, 0;
    %assign/v0 v0x8dd7b68_0, 0, 0;
T_64.4 ;
    %end;
    .scope S_0x8dd5728;
t_26 %join;
    %jmp T_64.3;
T_64.2 ;
    %fork t_29, S_0x8dd6290;
    %jmp t_28;
    .scope S_0x8dd6290;
t_29 ;
    %set/v v0x8dd6310_0, 1, 1;
    %load/v 8, v0x8dd6e80_0, 4;
    %set/v v0x8dd6aa0_0, 8, 4;
    %load/v 8, v0x8dd70c0_0, 32;
    %set/v v0x8dd6b10_0, 8, 32;
    %load/v 8, v0x8dd6d00_0, 480;
    %set/v v0x8dd6b70_0, 8, 480;
    %load/v 8, v0x8dd6dc8_0, 15;
    %set/v v0x8dd6c80_0, 8, 15;
    %load/v 8, v0x8dd6310_0, 1;
    %set/v v0x8dd6bd0_0, 8, 1;
    %fork TD_CPU.alu_rs\x5B5\x5D.checkAndGetData, S_0x8dd6a20;
    %join;
    %load/v 8, v0x8dd6aa0_0, 4;
    %set/v v0x8dd6e80_0, 8, 4;
    %load/v 8, v0x8dd6b10_0, 32;
    %set/v v0x8dd70c0_0, 8, 32;
    %load/v 8, v0x8dd6bd0_0, 1;
    %set/v v0x8dd6310_0, 8, 1;
    %load/v 8, v0x8dd6ee0_0, 4;
    %set/v v0x8dd6aa0_0, 8, 4;
    %load/v 8, v0x8dd7120_0, 32;
    %set/v v0x8dd6b10_0, 8, 32;
    %load/v 8, v0x8dd6d00_0, 480;
    %set/v v0x8dd6b70_0, 8, 480;
    %load/v 8, v0x8dd6dc8_0, 15;
    %set/v v0x8dd6c80_0, 8, 15;
    %load/v 8, v0x8dd6310_0, 1;
    %set/v v0x8dd6bd0_0, 8, 1;
    %fork TD_CPU.alu_rs\x5B5\x5D.checkAndGetData, S_0x8dd6a20;
    %join;
    %load/v 8, v0x8dd6aa0_0, 4;
    %set/v v0x8dd6ee0_0, 8, 4;
    %load/v 8, v0x8dd6b10_0, 32;
    %set/v v0x8dd7120_0, 8, 32;
    %load/v 8, v0x8dd6bd0_0, 1;
    %set/v v0x8dd6310_0, 8, 1;
    %load/v 8, v0x8dd6310_0, 1;
    %jmp/0xz  T_64.14, 8;
    %load/v 8, v0x8dd7888_0, 4;
    %cmpi/u 8, 1, 4;
    %jmp/1 T_64.16, 6;
    %cmpi/u 8, 6, 4;
    %jmp/1 T_64.17, 6;
    %cmpi/u 8, 0, 4;
    %jmp/1 T_64.18, 6;
    %cmpi/u 8, 5, 4;
    %jmp/1 T_64.19, 6;
    %cmpi/u 8, 2, 4;
    %jmp/1 T_64.20, 6;
    %cmpi/u 8, 7, 4;
    %jmp/1 T_64.21, 6;
    %jmp T_64.23;
T_64.16 ;
    %delay 1, 0;
    %load/v 8, v0x8dd70c0_0, 32;
    %load/v 40, v0x8dd7120_0, 32;
    %sub 8, 40, 32;
    %set/v v0x8dd7ca0_0, 8, 32;
    %jmp T_64.23;
T_64.17 ;
    %delay 1, 0;
    %load/v 8, v0x8dd70c0_0, 32;
    %load/v 40, v0x8dd7120_0, 32;
    %sub 8, 40, 32;
    %set/v v0x8dd7ca0_0, 8, 32;
    %jmp T_64.23;
T_64.18 ;
    %delay 1, 0;
    %load/v 8, v0x8dd70c0_0, 32;
    %load/v 40, v0x8dd7120_0, 32;
    %add 8, 40, 32;
    %set/v v0x8dd7ca0_0, 8, 32;
    %jmp T_64.23;
T_64.19 ;
    %delay 1, 0;
    %load/v 8, v0x8dd70c0_0, 32;
    %load/v 40, v0x8dd7120_0, 32;
    %add 8, 40, 32;
    %set/v v0x8dd7ca0_0, 8, 32;
    %jmp T_64.23;
T_64.20 ;
    %delay 31, 0;
    %load/v 8, v0x8dd70c0_0, 32;
    %load/v 40, v0x8dd7120_0, 32;
    %mul 8, 40, 32;
    %set/v v0x8dd7ca0_0, 8, 32;
    %jmp T_64.23;
T_64.21 ;
    %delay 31, 0;
    %load/v 8, v0x8dd70c0_0, 32;
    %load/v 40, v0x8dd7120_0, 32;
    %mul 8, 40, 32;
    %set/v v0x8dd7ca0_0, 8, 32;
    %jmp T_64.23;
T_64.23 ;
    %set/v v0x8dd7b68_0, 1, 1;
    %set/v v0x8dd7358_0, 0, 1;
    %delay 13, 0;
    %set/v v0x8dd7b68_0, 0, 1;
    %movi 8, 15, 5;
    %set/v v0x8dd7668_0, 8, 4;
T_64.14 ;
    %end;
    .scope S_0x8dd5728;
t_28 %join;
T_64.3 ;
T_64.1 ;
    %jmp T_64;
    .thread T_64;
    .scope S_0x8dd3678;
T_65 ;
    %set/v v0x8dd5310_0, 3, 5;
    %end;
    .thread T_65;
    .scope S_0x8dd3678;
T_66 ;
    %set/v v0x8dd5418_0, 3, 5;
    %end;
    .thread T_66;
    .scope S_0x8dd3678;
T_67 ;
    %wait E_0x8d39190;
    %load/v 8, v0x8dd53b8_0, 1;
    %jmp/0xz  T_67.0, 8;
    %ix/load 0, 1, 0;
    %assign/v0 v0x8dd4f98_0, 0, 0;
    %movi 8, 15, 5;
    %ix/load 0, 4, 0;
    %assign/v0 v0x8dd5170_0, 0, 8;
    %ix/load 0, 1, 0;
    %assign/v0 v0x8dd5468_0, 0, 0;
    %ix/load 0, 32, 0;
    %assign/v0 v0x8dd54d0_0, 0, 0;
    %jmp T_67.1;
T_67.0 ;
    %load/v 8, v0x8dd4f98_0, 1;
    %inv 8, 1;
    %jmp/0xz  T_67.2, 8;
    %fork t_31, S_0x8dd4160;
    %jmp t_30;
    .scope S_0x8dd4160;
t_31 ;
    %delay 1, 0;
    %load/v 8, v0x8dd51d0_0, 4;
    %mov 12, 0, 1;
    %cmpi/u 8, 6, 5;
    %jmp/0xz  T_67.4, 4;
    %vpi_call 7 51 "$display", $realtime, ": %d receive inst:%b", P_0x8dd3a1c, v0x8dd5270_0;
    %ix/load 1, 28, 0;
    %mov 4, 0, 1;
    %jmp/1 T_67.6, 4;
    %load/x1p 8, v0x8dd5270_0, 4;
    %jmp T_67.7;
T_67.6 ;
    %mov 8, 2, 4;
T_67.7 ;
; Save base=8 wid=4 in lookaside.
    %set/v v0x8dd52c0_0, 8, 4;
    %ix/load 0, 1, 0;
    %assign/v0 v0x8dd4f98_0, 0, 1;
    %load/v 8, v0x8dd4c40_0, 4;
    %ix/load 0, 4, 0;
    %assign/v0 v0x8dd5170_0, 0, 8;
    %ix/load 1, 23, 0;
    %mov 4, 0, 1;
    %jmp/1 T_67.8, 4;
    %load/x1p 8, v0x8dd5270_0, 5;
    %jmp T_67.9;
T_67.8 ;
    %mov 8, 2, 5;
T_67.9 ;
; Save base=8 wid=5 in lookaside.
    %set/v v0x8dd5310_0, 8, 5;
    %load/v 8, v0x8dd5520_0, 32;
    %set/v v0x8dd47a0_0, 8, 32;
    %load/v 8, v0x8dd5220_0, 4;
    %set/v v0x8dd4740_0, 8, 4;
    %load/v 8, v0x8dd4ae0_0, 480;
    %set/v v0x8dd45c0_0, 8, 480;
    %load/v 8, v0x8dd4b40_0, 15;
    %set/v v0x8dd4630_0, 8, 15;
    %fork TD_CPU.alu_rs\x5B6\x5D.getData, S_0x8dd4540;
    %join;
    %load/v 8, v0x8dd46f0_0, 32;
    %set/v v0x8dd4d00_0, 8, 32;
    %load/v 8, v0x8dd4690_0, 4;
    %set/v v0x8dd4b90_0, 8, 4;
    %load/v 8, v0x8dd52c0_0, 4;
    %mov 12, 0, 1;
    %cmpi/u 8, 0, 5;
    %mov 8, 4, 1;
    %load/v 9, v0x8dd52c0_0, 4;
    %mov 13, 0, 1;
    %cmpi/u 9, 1, 5;
    %or 8, 4, 1;
    %load/v 9, v0x8dd52c0_0, 4;
    %mov 13, 0, 1;
    %cmpi/u 9, 2, 5;
    %or 8, 4, 1;
    %jmp/0xz  T_67.10, 8;
    %ix/load 1, 13, 0;
    %mov 4, 0, 1;
    %jmp/1 T_67.12, 4;
    %load/x1p 8, v0x8dd5270_0, 5;
    %jmp T_67.13;
T_67.12 ;
    %mov 8, 2, 5;
T_67.13 ;
; Save base=8 wid=5 in lookaside.
    %set/v v0x8dd5418_0, 8, 5;
    %load/v 8, v0x8dd5658_0, 32;
    %set/v v0x8dd47a0_0, 8, 32;
    %load/v 8, v0x8dd5368_0, 4;
    %set/v v0x8dd4740_0, 8, 4;
    %load/v 8, v0x8dd4ae0_0, 480;
    %set/v v0x8dd45c0_0, 8, 480;
    %load/v 8, v0x8dd4b40_0, 15;
    %set/v v0x8dd4630_0, 8, 15;
    %fork TD_CPU.alu_rs\x5B6\x5D.getData, S_0x8dd4540;
    %join;
    %load/v 8, v0x8dd46f0_0, 32;
    %set/v v0x8dd4d60_0, 8, 32;
    %load/v 8, v0x8dd4690_0, 4;
    %set/v v0x8dd4bf0_0, 8, 4;
    %jmp T_67.11;
T_67.10 ;
    %load/v 8, v0x8dd5270_0, 18; Select 18 out of 32 bits
    %mov 26, 0, 14;
    %set/v v0x8dd4d60_0, 8, 32;
    %movi 8, 15, 5;
    %set/v v0x8dd4bf0_0, 8, 4;
T_67.11 ;
    %delay 1, 0;
    %set/v v0x8dd5310_0, 3, 5;
    %set/v v0x8dd5418_0, 3, 5;
    %ix/load 0, 1, 0;
    %assign/v0 v0x8dd5468_0, 0, 0;
T_67.4 ;
    %end;
    .scope S_0x8dd3678;
t_30 %join;
    %jmp T_67.3;
T_67.2 ;
    %fork t_33, S_0x8dd4070;
    %jmp t_32;
    .scope S_0x8dd4070;
t_33 ;
    %set/v v0x8dd40f0_0, 1, 1;
    %load/v 8, v0x8dd4b90_0, 4;
    %set/v v0x8dd4880_0, 8, 4;
    %load/v 8, v0x8dd4d00_0, 32;
    %set/v v0x8dd48f0_0, 8, 32;
    %load/v 8, v0x8dd4ae0_0, 480;
    %set/v v0x8dd4950_0, 8, 480;
    %load/v 8, v0x8dd4b40_0, 15;
    %set/v v0x8dd4a60_0, 8, 15;
    %load/v 8, v0x8dd40f0_0, 1;
    %set/v v0x8dd49b0_0, 8, 1;
    %fork TD_CPU.alu_rs\x5B6\x5D.checkAndGetData, S_0x8dd4800;
    %join;
    %load/v 8, v0x8dd4880_0, 4;
    %set/v v0x8dd4b90_0, 8, 4;
    %load/v 8, v0x8dd48f0_0, 32;
    %set/v v0x8dd4d00_0, 8, 32;
    %load/v 8, v0x8dd49b0_0, 1;
    %set/v v0x8dd40f0_0, 8, 1;
    %load/v 8, v0x8dd4bf0_0, 4;
    %set/v v0x8dd4880_0, 8, 4;
    %load/v 8, v0x8dd4d60_0, 32;
    %set/v v0x8dd48f0_0, 8, 32;
    %load/v 8, v0x8dd4ae0_0, 480;
    %set/v v0x8dd4950_0, 8, 480;
    %load/v 8, v0x8dd4b40_0, 15;
    %set/v v0x8dd4a60_0, 8, 15;
    %load/v 8, v0x8dd40f0_0, 1;
    %set/v v0x8dd49b0_0, 8, 1;
    %fork TD_CPU.alu_rs\x5B6\x5D.checkAndGetData, S_0x8dd4800;
    %join;
    %load/v 8, v0x8dd4880_0, 4;
    %set/v v0x8dd4bf0_0, 8, 4;
    %load/v 8, v0x8dd48f0_0, 32;
    %set/v v0x8dd4d60_0, 8, 32;
    %load/v 8, v0x8dd49b0_0, 1;
    %set/v v0x8dd40f0_0, 8, 1;
    %load/v 8, v0x8dd40f0_0, 1;
    %jmp/0xz  T_67.14, 8;
    %load/v 8, v0x8dd52c0_0, 4;
    %cmpi/u 8, 1, 4;
    %jmp/1 T_67.16, 6;
    %cmpi/u 8, 6, 4;
    %jmp/1 T_67.17, 6;
    %cmpi/u 8, 0, 4;
    %jmp/1 T_67.18, 6;
    %cmpi/u 8, 5, 4;
    %jmp/1 T_67.19, 6;
    %cmpi/u 8, 2, 4;
    %jmp/1 T_67.20, 6;
    %cmpi/u 8, 7, 4;
    %jmp/1 T_67.21, 6;
    %jmp T_67.23;
T_67.16 ;
    %delay 1, 0;
    %load/v 8, v0x8dd4d00_0, 32;
    %load/v 40, v0x8dd4d60_0, 32;
    %sub 8, 40, 32;
    %set/v v0x8dd54d0_0, 8, 32;
    %jmp T_67.23;
T_67.17 ;
    %delay 1, 0;
    %load/v 8, v0x8dd4d00_0, 32;
    %load/v 40, v0x8dd4d60_0, 32;
    %sub 8, 40, 32;
    %set/v v0x8dd54d0_0, 8, 32;
    %jmp T_67.23;
T_67.18 ;
    %delay 1, 0;
    %load/v 8, v0x8dd4d00_0, 32;
    %load/v 40, v0x8dd4d60_0, 32;
    %add 8, 40, 32;
    %set/v v0x8dd54d0_0, 8, 32;
    %jmp T_67.23;
T_67.19 ;
    %delay 1, 0;
    %load/v 8, v0x8dd4d00_0, 32;
    %load/v 40, v0x8dd4d60_0, 32;
    %add 8, 40, 32;
    %set/v v0x8dd54d0_0, 8, 32;
    %jmp T_67.23;
T_67.20 ;
    %delay 31, 0;
    %load/v 8, v0x8dd4d00_0, 32;
    %load/v 40, v0x8dd4d60_0, 32;
    %mul 8, 40, 32;
    %set/v v0x8dd54d0_0, 8, 32;
    %jmp T_67.23;
T_67.21 ;
    %delay 31, 0;
    %load/v 8, v0x8dd4d00_0, 32;
    %load/v 40, v0x8dd4d60_0, 32;
    %mul 8, 40, 32;
    %set/v v0x8dd54d0_0, 8, 32;
    %jmp T_67.23;
T_67.23 ;
    %set/v v0x8dd5468_0, 1, 1;
    %set/v v0x8dd4f98_0, 0, 1;
    %delay 13, 0;
    %set/v v0x8dd5468_0, 0, 1;
    %movi 8, 15, 5;
    %set/v v0x8dd5170_0, 8, 4;
T_67.14 ;
    %end;
    .scope S_0x8dd3678;
t_32 %join;
T_67.3 ;
T_67.1 ;
    %jmp T_67;
    .thread T_67;
    .scope S_0x8dd11d8;
T_68 ;
    %set/v v0x8dd3208_0, 3, 5;
    %end;
    .thread T_68;
    .scope S_0x8dd11d8;
T_69 ;
    %set/v v0x8dd3290_0, 3, 5;
    %end;
    .thread T_69;
    .scope S_0x8dd11d8;
T_70 ;
    %wait E_0x8d39190;
    %load/v 8, v0x8dd3348_0, 1;
    %jmp/0xz  T_70.0, 8;
    %ix/load 0, 1, 0;
    %assign/v0 v0x8dd2ca8_0, 0, 0;
    %movi 8, 15, 5;
    %ix/load 0, 4, 0;
    %assign/v0 v0x8dd2ef0_0, 0, 8;
    %ix/load 0, 1, 0;
    %assign/v0 v0x8dd32e0_0, 0, 0;
    %ix/load 0, 32, 0;
    %assign/v0 v0x8dd33d0_0, 0, 0;
    %jmp T_70.1;
T_70.0 ;
    %load/v 8, v0x8dd2ca8_0, 1;
    %inv 8, 1;
    %jmp/0xz  T_70.2, 8;
    %fork t_35, S_0x8dd1db0;
    %jmp t_34;
    .scope S_0x8dd1db0;
t_35 ;
    %delay 1, 0;
    %load/v 8, v0x8dd2f50_0, 4;
    %mov 12, 0, 1;
    %cmpi/u 8, 7, 5;
    %jmp/0xz  T_70.4, 4;
    %vpi_call 7 51 "$display", $realtime, ": %d receive inst:%b", P_0x8dd157c, v0x8dd2ff0_0;
    %ix/load 1, 28, 0;
    %mov 4, 0, 1;
    %jmp/1 T_70.6, 4;
    %load/x1p 8, v0x8dd2ff0_0, 4;
    %jmp T_70.7;
T_70.6 ;
    %mov 8, 2, 4;
T_70.7 ;
; Save base=8 wid=4 in lookaside.
    %set/v v0x8dd3078_0, 8, 4;
    %ix/load 0, 1, 0;
    %assign/v0 v0x8dd2ca8_0, 0, 1;
    %load/v 8, v0x8dd28c8_0, 4;
    %ix/load 0, 4, 0;
    %assign/v0 v0x8dd2ef0_0, 0, 8;
    %ix/load 1, 23, 0;
    %mov 4, 0, 1;
    %jmp/1 T_70.8, 4;
    %load/x1p 8, v0x8dd2ff0_0, 5;
    %jmp T_70.9;
T_70.8 ;
    %mov 8, 2, 5;
T_70.9 ;
; Save base=8 wid=5 in lookaside.
    %set/v v0x8dd3208_0, 8, 5;
    %load/v 8, v0x8dd3558_0, 32;
    %set/v v0x8dd23f0_0, 8, 32;
    %load/v 8, v0x8dd2fa0_0, 4;
    %set/v v0x8dd2390_0, 8, 4;
    %load/v 8, v0x8dd2730_0, 480;
    %set/v v0x8dd2210_0, 8, 480;
    %load/v 8, v0x8dd2790_0, 15;
    %set/v v0x8dd2280_0, 8, 15;
    %fork TD_CPU.alu_rs\x5B7\x5D.getData, S_0x8dd2190;
    %join;
    %load/v 8, v0x8dd2340_0, 32;
    %set/v v0x8dd29d8_0, 8, 32;
    %load/v 8, v0x8dd22e0_0, 4;
    %set/v v0x8dd2818_0, 8, 4;
    %load/v 8, v0x8dd3078_0, 4;
    %mov 12, 0, 1;
    %cmpi/u 8, 0, 5;
    %mov 8, 4, 1;
    %load/v 9, v0x8dd3078_0, 4;
    %mov 13, 0, 1;
    %cmpi/u 9, 1, 5;
    %or 8, 4, 1;
    %load/v 9, v0x8dd3078_0, 4;
    %mov 13, 0, 1;
    %cmpi/u 9, 2, 5;
    %or 8, 4, 1;
    %jmp/0xz  T_70.10, 8;
    %ix/load 1, 13, 0;
    %mov 4, 0, 1;
    %jmp/1 T_70.12, 4;
    %load/x1p 8, v0x8dd2ff0_0, 5;
    %jmp T_70.13;
T_70.12 ;
    %mov 8, 2, 5;
T_70.13 ;
; Save base=8 wid=5 in lookaside.
    %set/v v0x8dd3290_0, 8, 5;
    %load/v 8, v0x8dd35a8_0, 32;
    %set/v v0x8dd23f0_0, 8, 32;
    %load/v 8, v0x8dd3158_0, 4;
    %set/v v0x8dd2390_0, 8, 4;
    %load/v 8, v0x8dd2730_0, 480;
    %set/v v0x8dd2210_0, 8, 480;
    %load/v 8, v0x8dd2790_0, 15;
    %set/v v0x8dd2280_0, 8, 15;
    %fork TD_CPU.alu_rs\x5B7\x5D.getData, S_0x8dd2190;
    %join;
    %load/v 8, v0x8dd2340_0, 32;
    %set/v v0x8dd2a38_0, 8, 32;
    %load/v 8, v0x8dd22e0_0, 4;
    %set/v v0x8dd2878_0, 8, 4;
    %jmp T_70.11;
T_70.10 ;
    %load/v 8, v0x8dd2ff0_0, 18; Select 18 out of 32 bits
    %mov 26, 0, 14;
    %set/v v0x8dd2a38_0, 8, 32;
    %movi 8, 15, 5;
    %set/v v0x8dd2878_0, 8, 4;
T_70.11 ;
    %delay 1, 0;
    %set/v v0x8dd3208_0, 3, 5;
    %set/v v0x8dd3290_0, 3, 5;
    %ix/load 0, 1, 0;
    %assign/v0 v0x8dd32e0_0, 0, 0;
T_70.4 ;
    %end;
    .scope S_0x8dd11d8;
t_34 %join;
    %jmp T_70.3;
T_70.2 ;
    %fork t_37, S_0x8dd1cc0;
    %jmp t_36;
    .scope S_0x8dd1cc0;
t_37 ;
    %set/v v0x8dd1d40_0, 1, 1;
    %load/v 8, v0x8dd2818_0, 4;
    %set/v v0x8dd24d0_0, 8, 4;
    %load/v 8, v0x8dd29d8_0, 32;
    %set/v v0x8dd2540_0, 8, 32;
    %load/v 8, v0x8dd2730_0, 480;
    %set/v v0x8dd25a0_0, 8, 480;
    %load/v 8, v0x8dd2790_0, 15;
    %set/v v0x8dd26b0_0, 8, 15;
    %load/v 8, v0x8dd1d40_0, 1;
    %set/v v0x8dd2600_0, 8, 1;
    %fork TD_CPU.alu_rs\x5B7\x5D.checkAndGetData, S_0x8dd2450;
    %join;
    %load/v 8, v0x8dd24d0_0, 4;
    %set/v v0x8dd2818_0, 8, 4;
    %load/v 8, v0x8dd2540_0, 32;
    %set/v v0x8dd29d8_0, 8, 32;
    %load/v 8, v0x8dd2600_0, 1;
    %set/v v0x8dd1d40_0, 8, 1;
    %load/v 8, v0x8dd2878_0, 4;
    %set/v v0x8dd24d0_0, 8, 4;
    %load/v 8, v0x8dd2a38_0, 32;
    %set/v v0x8dd2540_0, 8, 32;
    %load/v 8, v0x8dd2730_0, 480;
    %set/v v0x8dd25a0_0, 8, 480;
    %load/v 8, v0x8dd2790_0, 15;
    %set/v v0x8dd26b0_0, 8, 15;
    %load/v 8, v0x8dd1d40_0, 1;
    %set/v v0x8dd2600_0, 8, 1;
    %fork TD_CPU.alu_rs\x5B7\x5D.checkAndGetData, S_0x8dd2450;
    %join;
    %load/v 8, v0x8dd24d0_0, 4;
    %set/v v0x8dd2878_0, 8, 4;
    %load/v 8, v0x8dd2540_0, 32;
    %set/v v0x8dd2a38_0, 8, 32;
    %load/v 8, v0x8dd2600_0, 1;
    %set/v v0x8dd1d40_0, 8, 1;
    %load/v 8, v0x8dd1d40_0, 1;
    %jmp/0xz  T_70.14, 8;
    %load/v 8, v0x8dd3078_0, 4;
    %cmpi/u 8, 1, 4;
    %jmp/1 T_70.16, 6;
    %cmpi/u 8, 6, 4;
    %jmp/1 T_70.17, 6;
    %cmpi/u 8, 0, 4;
    %jmp/1 T_70.18, 6;
    %cmpi/u 8, 5, 4;
    %jmp/1 T_70.19, 6;
    %cmpi/u 8, 2, 4;
    %jmp/1 T_70.20, 6;
    %cmpi/u 8, 7, 4;
    %jmp/1 T_70.21, 6;
    %jmp T_70.23;
T_70.16 ;
    %delay 1, 0;
    %load/v 8, v0x8dd29d8_0, 32;
    %load/v 40, v0x8dd2a38_0, 32;
    %sub 8, 40, 32;
    %set/v v0x8dd33d0_0, 8, 32;
    %jmp T_70.23;
T_70.17 ;
    %delay 1, 0;
    %load/v 8, v0x8dd29d8_0, 32;
    %load/v 40, v0x8dd2a38_0, 32;
    %sub 8, 40, 32;
    %set/v v0x8dd33d0_0, 8, 32;
    %jmp T_70.23;
T_70.18 ;
    %delay 1, 0;
    %load/v 8, v0x8dd29d8_0, 32;
    %load/v 40, v0x8dd2a38_0, 32;
    %add 8, 40, 32;
    %set/v v0x8dd33d0_0, 8, 32;
    %jmp T_70.23;
T_70.19 ;
    %delay 1, 0;
    %load/v 8, v0x8dd29d8_0, 32;
    %load/v 40, v0x8dd2a38_0, 32;
    %add 8, 40, 32;
    %set/v v0x8dd33d0_0, 8, 32;
    %jmp T_70.23;
T_70.20 ;
    %delay 31, 0;
    %load/v 8, v0x8dd29d8_0, 32;
    %load/v 40, v0x8dd2a38_0, 32;
    %mul 8, 40, 32;
    %set/v v0x8dd33d0_0, 8, 32;
    %jmp T_70.23;
T_70.21 ;
    %delay 31, 0;
    %load/v 8, v0x8dd29d8_0, 32;
    %load/v 40, v0x8dd2a38_0, 32;
    %mul 8, 40, 32;
    %set/v v0x8dd33d0_0, 8, 32;
    %jmp T_70.23;
T_70.23 ;
    %set/v v0x8dd32e0_0, 1, 1;
    %set/v v0x8dd2ca8_0, 0, 1;
    %delay 13, 0;
    %set/v v0x8dd32e0_0, 0, 1;
    %movi 8, 15, 5;
    %set/v v0x8dd2ef0_0, 8, 4;
T_70.14 ;
    %end;
    .scope S_0x8dd11d8;
t_36 %join;
T_70.3 ;
T_70.1 ;
    %jmp T_70;
    .thread T_70;
    .scope S_0x8dce938;
T_71 ;
    %set/v v0x8dd0c20_0, 3, 5;
    %end;
    .thread T_71;
    .scope S_0x8dce938;
T_72 ;
    %set/v v0x8dd0d58_0, 3, 5;
    %end;
    .thread T_72;
    .scope S_0x8dce938;
T_73 ;
    %set/v v0x8dd0ce0_0, 3, 5;
    %end;
    .thread T_73;
    .scope S_0x8dce938;
T_74 ;
    %set/v v0x8dd0dc8_0, 0, 32;
    %end;
    .thread T_74;
    .scope S_0x8dce938;
T_75 ;
    %set/v v0x8dd0910_0, 0, 32;
    %end;
    .thread T_75;
    .scope S_0x8dce938;
T_76 ;
    %wait E_0x8d39190;
    %load/v 8, v0x8dd0e48_0, 1;
    %jmp/0xz  T_76.0, 8;
    %ix/load 0, 1, 0;
    %assign/v0 v0x8dd07d0_0, 0, 0;
    %movi 8, 15, 5;
    %ix/load 0, 4, 0;
    %assign/v0 v0x8dd09d8_0, 0, 8;
    %ix/load 0, 1, 0;
    %assign/v0 v0x8dd0f20_0, 0, 0;
    %ix/load 0, 32, 0;
    %assign/v0 v0x8dd0dc8_0, 0, 0;
    %jmp T_76.1;
T_76.0 ;
    %load/v 8, v0x8dd07d0_0, 1;
    %inv 8, 1;
    %jmp/0xz  T_76.2, 8;
    %fork t_39, S_0x8dcf760;
    %jmp t_38;
    .scope S_0x8dcf760;
t_39 ;
    %delay 1, 0;
    %load/v 8, v0x8dd0960_0, 4;
    %mov 12, 0, 2;
    %cmpi/u 8, 8, 6;
    %jmp/0xz  T_76.4, 4;
    %vpi_call 8 54 "$display", $realtime, ": %d receive inst:%b", P_0x8dcedf8, v0x8dd0aa8_0;
    %ix/load 0, 1, 0;
    %assign/v0 v0x8dd07d0_0, 0, 1;
    %load/v 8, v0x8dd02c0_0, 4;
    %ix/load 0, 4, 0;
    %assign/v0 v0x8dd09d8_0, 0, 8;
    %ix/load 1, 28, 0;
    %mov 4, 0, 1;
    %jmp/1 T_76.6, 4;
    %load/x1p 8, v0x8dd0aa8_0, 4;
    %jmp T_76.7;
T_76.6 ;
    %mov 8, 2, 4;
T_76.7 ;
; Save base=8 wid=4 in lookaside.
    %set/v v0x8dd0b60_0, 8, 4;
    %ix/load 1, 18, 0;
    %mov 4, 0, 1;
    %jmp/1 T_76.8, 4;
    %load/x1p 8, v0x8dd0aa8_0, 5;
    %jmp T_76.9;
T_76.8 ;
    %mov 8, 2, 5;
T_76.9 ;
; Save base=8 wid=5 in lookaside.
    %set/v v0x8dd0c20_0, 8, 5;
    %ix/load 1, 23, 0;
    %mov 4, 0, 1;
    %jmp/1 T_76.10, 4;
    %load/x1p 8, v0x8dd0aa8_0, 5;
    %jmp T_76.11;
T_76.10 ;
    %mov 8, 2, 5;
T_76.11 ;
; Save base=8 wid=5 in lookaside.
    %set/v v0x8dd0d58_0, 8, 5;
    %load/v 8, v0x8dd1000_0, 32;
    %set/v v0x8dcfda0_0, 8, 32;
    %load/v 8, v0x8dd0bb0_0, 4;
    %set/v v0x8dcfd40_0, 8, 4;
    %load/v 8, v0x8dd00e0_0, 480;
    %set/v v0x8dcfbc0_0, 8, 480;
    %load/v 8, v0x8dd0160_0, 15;
    %set/v v0x8dcfc30_0, 8, 15;
    %fork TD_CPU.store_rs\x5B0\x5D.getData, S_0x8dcfb40;
    %join;
    %load/v 8, v0x8dcfcf0_0, 32;
    %set/v v0x8dd03c0_0, 8, 32;
    %load/v 8, v0x8dcfc90_0, 4;
    %set/v v0x8dd01d0_0, 8, 4;
    %load/v 8, v0x8dd0f90_0, 32;
    %set/v v0x8dcfda0_0, 8, 32;
    %load/v 8, v0x8dd0af8_0, 4;
    %set/v v0x8dcfd40_0, 8, 4;
    %load/v 8, v0x8dd00e0_0, 480;
    %set/v v0x8dcfbc0_0, 8, 480;
    %load/v 8, v0x8dd0160_0, 15;
    %set/v v0x8dcfc30_0, 8, 15;
    %fork TD_CPU.store_rs\x5B0\x5D.getData, S_0x8dcfb40;
    %join;
    %load/v 8, v0x8dcfcf0_0, 32;
    %set/v v0x8dd0438_0, 8, 32;
    %load/v 8, v0x8dcfc90_0, 4;
    %set/v v0x8dd0220_0, 8, 4;
    %load/v 8, v0x8dd0b60_0, 4;
    %mov 12, 0, 1;
    %cmpi/u 8, 9, 5;
    %jmp/0xz  T_76.12, 6;
    %ix/load 1, 13, 0;
    %mov 4, 0, 1;
    %jmp/1 T_76.14, 4;
    %load/x1p 8, v0x8dd0aa8_0, 5;
    %jmp T_76.15;
T_76.14 ;
    %mov 8, 2, 5;
T_76.15 ;
; Save base=8 wid=5 in lookaside.
    %set/v v0x8dd0ce0_0, 8, 5;
    %load/v 8, v0x8dd10e8_0, 32;
    %set/v v0x8dcfda0_0, 8, 32;
    %load/v 8, v0x8dd0c70_0, 4;
    %set/v v0x8dcfd40_0, 8, 4;
    %load/v 8, v0x8dd00e0_0, 480;
    %set/v v0x8dcfbc0_0, 8, 480;
    %load/v 8, v0x8dd0160_0, 15;
    %set/v v0x8dcfc30_0, 8, 15;
    %fork TD_CPU.store_rs\x5B0\x5D.getData, S_0x8dcfb40;
    %join;
    %load/v 8, v0x8dcfcf0_0, 32;
    %set/v v0x8dd0488_0, 8, 32;
    %load/v 8, v0x8dcfc90_0, 4;
    %set/v v0x8dd0270_0, 8, 4;
    %jmp T_76.13;
T_76.12 ;
    %load/v 8, v0x8dd0aa8_0, 18; Select 18 out of 32 bits
    %mov 26, 0, 14;
    %set/v v0x8dd0488_0, 8, 32;
    %movi 8, 15, 5;
    %set/v v0x8dd0270_0, 8, 4;
T_76.13 ;
    %delay 1, 0;
    %set/v v0x8dd0c20_0, 3, 5;
    %set/v v0x8dd0d58_0, 3, 5;
    %set/v v0x8dd0ce0_0, 3, 5;
    %ix/load 0, 1, 0;
    %assign/v0 v0x8dd0f20_0, 0, 0;
T_76.4 ;
    %end;
    .scope S_0x8dce938;
t_38 %join;
    %jmp T_76.3;
T_76.2 ;
    %fork t_41, S_0x8dcf670;
    %jmp t_40;
    .scope S_0x8dcf670;
t_41 ;
    %set/v v0x8dcf6f0_0, 1, 1;
    %load/v 8, v0x8dd0220_0, 4;
    %set/v v0x8dcfe80_0, 8, 4;
    %load/v 8, v0x8dd0438_0, 32;
    %set/v v0x8dcfef0_0, 8, 32;
    %load/v 8, v0x8dd00e0_0, 480;
    %set/v v0x8dcff50_0, 8, 480;
    %load/v 8, v0x8dd0160_0, 15;
    %set/v v0x8dd0060_0, 8, 15;
    %load/v 8, v0x8dcf6f0_0, 1;
    %set/v v0x8dcffb0_0, 8, 1;
    %fork TD_CPU.store_rs\x5B0\x5D.checkAndGetData, S_0x8dcfe00;
    %join;
    %load/v 8, v0x8dcfe80_0, 4;
    %set/v v0x8dd0220_0, 8, 4;
    %load/v 8, v0x8dcfef0_0, 32;
    %set/v v0x8dd0438_0, 8, 32;
    %load/v 8, v0x8dcffb0_0, 1;
    %set/v v0x8dcf6f0_0, 8, 1;
    %load/v 8, v0x8dd0270_0, 4;
    %set/v v0x8dcfe80_0, 8, 4;
    %load/v 8, v0x8dd0488_0, 32;
    %set/v v0x8dcfef0_0, 8, 32;
    %load/v 8, v0x8dd00e0_0, 480;
    %set/v v0x8dcff50_0, 8, 480;
    %load/v 8, v0x8dd0160_0, 15;
    %set/v v0x8dd0060_0, 8, 15;
    %load/v 8, v0x8dcf6f0_0, 1;
    %set/v v0x8dcffb0_0, 8, 1;
    %fork TD_CPU.store_rs\x5B0\x5D.checkAndGetData, S_0x8dcfe00;
    %join;
    %load/v 8, v0x8dcfe80_0, 4;
    %set/v v0x8dd0270_0, 8, 4;
    %load/v 8, v0x8dcfef0_0, 32;
    %set/v v0x8dd0488_0, 8, 32;
    %load/v 8, v0x8dcffb0_0, 1;
    %set/v v0x8dcf6f0_0, 8, 1;
    %load/v 8, v0x8dd01d0_0, 4;
    %set/v v0x8dcfe80_0, 8, 4;
    %load/v 8, v0x8dd03c0_0, 32;
    %set/v v0x8dcfef0_0, 8, 32;
    %load/v 8, v0x8dd00e0_0, 480;
    %set/v v0x8dcff50_0, 8, 480;
    %load/v 8, v0x8dd0160_0, 15;
    %set/v v0x8dd0060_0, 8, 15;
    %load/v 8, v0x8dcf6f0_0, 1;
    %set/v v0x8dcffb0_0, 8, 1;
    %fork TD_CPU.store_rs\x5B0\x5D.checkAndGetData, S_0x8dcfe00;
    %join;
    %load/v 8, v0x8dcfe80_0, 4;
    %set/v v0x8dd01d0_0, 8, 4;
    %load/v 8, v0x8dcfef0_0, 32;
    %set/v v0x8dd03c0_0, 8, 32;
    %load/v 8, v0x8dcffb0_0, 1;
    %set/v v0x8dcf6f0_0, 8, 1;
    %load/v 8, v0x8dcf6f0_0, 1;
    %jmp/0xz  T_76.16, 8;
    %delay 1, 0;
    %load/v 8, v0x8dd0438_0, 32;
    %load/v 40, v0x8dd0488_0, 32;
    %sub 8, 40, 32;
    %set/v v0x8dd0dc8_0, 8, 32;
    %load/v 8, v0x8dd03c0_0, 32;
    %set/v v0x8dd0910_0, 8, 32;
    %set/v v0x8dd0f20_0, 1, 1;
    %set/v v0x8dd07d0_0, 0, 1;
    %delay 13, 0;
    %set/v v0x8dd0f20_0, 0, 1;
    %movi 8, 15, 5;
    %set/v v0x8dd09d8_0, 8, 4;
T_76.16 ;
    %end;
    .scope S_0x8dce938;
t_40 %join;
T_76.3 ;
T_76.1 ;
    %jmp T_76;
    .thread T_76;
    .scope S_0x8d76db8;
T_77 ;
    %set/v v0x8dce528_0, 3, 5;
    %end;
    .thread T_77;
    .scope S_0x8d76db8;
T_78 ;
    %set/v v0x8dce660_0, 3, 5;
    %end;
    .thread T_78;
    .scope S_0x8d76db8;
T_79 ;
    %set/v v0x8dce5e8_0, 3, 5;
    %end;
    .thread T_79;
    .scope S_0x8d76db8;
T_80 ;
    %set/v v0x8dce6b0_0, 0, 32;
    %end;
    .thread T_80;
    .scope S_0x8d76db8;
T_81 ;
    %set/v v0x8dce278_0, 0, 32;
    %end;
    .thread T_81;
    .scope S_0x8d76db8;
T_82 ;
    %wait E_0x8d39190;
    %load/v 8, v0x8dce730_0, 1;
    %jmp/0xz  T_82.0, 8;
    %ix/load 0, 1, 0;
    %assign/v0 v0x8dce128_0, 0, 0;
    %movi 8, 15, 5;
    %ix/load 0, 4, 0;
    %assign/v0 v0x8dce320_0, 0, 8;
    %ix/load 0, 1, 0;
    %assign/v0 v0x8dce808_0, 0, 0;
    %ix/load 0, 32, 0;
    %assign/v0 v0x8dce6b0_0, 0, 0;
    %jmp T_82.1;
T_82.0 ;
    %load/v 8, v0x8dce128_0, 1;
    %inv 8, 1;
    %jmp/0xz  T_82.2, 8;
    %fork t_43, S_0x8dcd038;
    %jmp t_42;
    .scope S_0x8dcd038;
t_43 ;
    %delay 1, 0;
    %load/v 8, v0x8dce3d0_0, 4;
    %mov 12, 0, 2;
    %cmpi/u 8, 9, 6;
    %jmp/0xz  T_82.4, 4;
    %vpi_call 8 54 "$display", $realtime, ": %d receive inst:%b", P_0x8d78338, v0x8dce420_0;
    %ix/load 0, 1, 0;
    %assign/v0 v0x8dce128_0, 0, 1;
    %load/v 8, v0x8dcdbd0_0, 4;
    %ix/load 0, 4, 0;
    %assign/v0 v0x8dce320_0, 0, 8;
    %ix/load 1, 28, 0;
    %mov 4, 0, 1;
    %jmp/1 T_82.6, 4;
    %load/x1p 8, v0x8dce420_0, 4;
    %jmp T_82.7;
T_82.6 ;
    %mov 8, 2, 4;
T_82.7 ;
; Save base=8 wid=4 in lookaside.
    %set/v v0x8dce370_0, 8, 4;
    %ix/load 1, 18, 0;
    %mov 4, 0, 1;
    %jmp/1 T_82.8, 4;
    %load/x1p 8, v0x8dce420_0, 5;
    %jmp T_82.9;
T_82.8 ;
    %mov 8, 2, 5;
T_82.9 ;
; Save base=8 wid=5 in lookaside.
    %set/v v0x8dce528_0, 8, 5;
    %ix/load 1, 23, 0;
    %mov 4, 0, 1;
    %jmp/1 T_82.10, 4;
    %load/x1p 8, v0x8dce420_0, 5;
    %jmp T_82.11;
T_82.10 ;
    %mov 8, 2, 5;
T_82.11 ;
; Save base=8 wid=5 in lookaside.
    %set/v v0x8dce660_0, 8, 5;
    %load/v 8, v0x8dce8e8_0, 32;
    %set/v v0x8dcd690_0, 8, 32;
    %load/v 8, v0x8dce4d8_0, 4;
    %set/v v0x8dcd630_0, 8, 4;
    %load/v 8, v0x8dcd9f0_0, 480;
    %set/v v0x8dcd498_0, 8, 480;
    %load/v 8, v0x8dcda60_0, 15;
    %set/v v0x8dcd508_0, 8, 15;
    %fork TD_CPU.store_rs\x5B1\x5D.getData, S_0x8dcd418;
    %join;
    %load/v 8, v0x8dcd5c8_0, 32;
    %set/v v0x8dcdcb0_0, 8, 32;
    %load/v 8, v0x8dcd568_0, 4;
    %set/v v0x8dcdac0_0, 8, 4;
    %load/v 8, v0x8dce858_0, 32;
    %set/v v0x8dcd690_0, 8, 32;
    %load/v 8, v0x8dce470_0, 4;
    %set/v v0x8dcd630_0, 8, 4;
    %load/v 8, v0x8dcd9f0_0, 480;
    %set/v v0x8dcd498_0, 8, 480;
    %load/v 8, v0x8dcda60_0, 15;
    %set/v v0x8dcd508_0, 8, 15;
    %fork TD_CPU.store_rs\x5B1\x5D.getData, S_0x8dcd418;
    %join;
    %load/v 8, v0x8dcd5c8_0, 32;
    %set/v v0x8dcdd38_0, 8, 32;
    %load/v 8, v0x8dcd568_0, 4;
    %set/v v0x8dcdb20_0, 8, 4;
    %load/v 8, v0x8dce370_0, 4;
    %mov 12, 0, 1;
    %cmpi/u 8, 9, 5;
    %jmp/0xz  T_82.12, 6;
    %ix/load 1, 13, 0;
    %mov 4, 0, 1;
    %jmp/1 T_82.14, 4;
    %load/x1p 8, v0x8dce420_0, 5;
    %jmp T_82.15;
T_82.14 ;
    %mov 8, 2, 5;
T_82.15 ;
; Save base=8 wid=5 in lookaside.
    %set/v v0x8dce5e8_0, 8, 5;
    %load/v 8, v0x8dce9d0_0, 32;
    %set/v v0x8dcd690_0, 8, 32;
    %load/v 8, v0x8dce598_0, 4;
    %set/v v0x8dcd630_0, 8, 4;
    %load/v 8, v0x8dcd9f0_0, 480;
    %set/v v0x8dcd498_0, 8, 480;
    %load/v 8, v0x8dcda60_0, 15;
    %set/v v0x8dcd508_0, 8, 15;
    %fork TD_CPU.store_rs\x5B1\x5D.getData, S_0x8dcd418;
    %join;
    %load/v 8, v0x8dcd5c8_0, 32;
    %set/v v0x8dcdd98_0, 8, 32;
    %load/v 8, v0x8dcd568_0, 4;
    %set/v v0x8dcdb70_0, 8, 4;
    %jmp T_82.13;
T_82.12 ;
    %load/v 8, v0x8dce420_0, 18; Select 18 out of 32 bits
    %mov 26, 0, 14;
    %set/v v0x8dcdd98_0, 8, 32;
    %movi 8, 15, 5;
    %set/v v0x8dcdb70_0, 8, 4;
T_82.13 ;
    %delay 1, 0;
    %set/v v0x8dce528_0, 3, 5;
    %set/v v0x8dce660_0, 3, 5;
    %set/v v0x8dce5e8_0, 3, 5;
    %ix/load 0, 1, 0;
    %assign/v0 v0x8dce808_0, 0, 0;
T_82.4 ;
    %end;
    .scope S_0x8d76db8;
t_42 %join;
    %jmp T_82.3;
T_82.2 ;
    %fork t_45, S_0x8da9810;
    %jmp t_44;
    .scope S_0x8da9810;
t_45 ;
    %set/v v0x8d36078_0, 1, 1;
    %load/v 8, v0x8dcdb20_0, 4;
    %set/v v0x8dcd790_0, 8, 4;
    %load/v 8, v0x8dcdd38_0, 32;
    %set/v v0x8dcd800_0, 8, 32;
    %load/v 8, v0x8dcd9f0_0, 480;
    %set/v v0x8dcd860_0, 8, 480;
    %load/v 8, v0x8dcda60_0, 15;
    %set/v v0x8dcd970_0, 8, 15;
    %load/v 8, v0x8d36078_0, 1;
    %set/v v0x8dcd8c0_0, 8, 1;
    %fork TD_CPU.store_rs\x5B1\x5D.checkAndGetData, S_0x8dcd710;
    %join;
    %load/v 8, v0x8dcd790_0, 4;
    %set/v v0x8dcdb20_0, 8, 4;
    %load/v 8, v0x8dcd800_0, 32;
    %set/v v0x8dcdd38_0, 8, 32;
    %load/v 8, v0x8dcd8c0_0, 1;
    %set/v v0x8d36078_0, 8, 1;
    %load/v 8, v0x8dcdb70_0, 4;
    %set/v v0x8dcd790_0, 8, 4;
    %load/v 8, v0x8dcdd98_0, 32;
    %set/v v0x8dcd800_0, 8, 32;
    %load/v 8, v0x8dcd9f0_0, 480;
    %set/v v0x8dcd860_0, 8, 480;
    %load/v 8, v0x8dcda60_0, 15;
    %set/v v0x8dcd970_0, 8, 15;
    %load/v 8, v0x8d36078_0, 1;
    %set/v v0x8dcd8c0_0, 8, 1;
    %fork TD_CPU.store_rs\x5B1\x5D.checkAndGetData, S_0x8dcd710;
    %join;
    %load/v 8, v0x8dcd790_0, 4;
    %set/v v0x8dcdb70_0, 8, 4;
    %load/v 8, v0x8dcd800_0, 32;
    %set/v v0x8dcdd98_0, 8, 32;
    %load/v 8, v0x8dcd8c0_0, 1;
    %set/v v0x8d36078_0, 8, 1;
    %load/v 8, v0x8dcdac0_0, 4;
    %set/v v0x8dcd790_0, 8, 4;
    %load/v 8, v0x8dcdcb0_0, 32;
    %set/v v0x8dcd800_0, 8, 32;
    %load/v 8, v0x8dcd9f0_0, 480;
    %set/v v0x8dcd860_0, 8, 480;
    %load/v 8, v0x8dcda60_0, 15;
    %set/v v0x8dcd970_0, 8, 15;
    %load/v 8, v0x8d36078_0, 1;
    %set/v v0x8dcd8c0_0, 8, 1;
    %fork TD_CPU.store_rs\x5B1\x5D.checkAndGetData, S_0x8dcd710;
    %join;
    %load/v 8, v0x8dcd790_0, 4;
    %set/v v0x8dcdac0_0, 8, 4;
    %load/v 8, v0x8dcd800_0, 32;
    %set/v v0x8dcdcb0_0, 8, 32;
    %load/v 8, v0x8dcd8c0_0, 1;
    %set/v v0x8d36078_0, 8, 1;
    %load/v 8, v0x8d36078_0, 1;
    %jmp/0xz  T_82.16, 8;
    %delay 1, 0;
    %load/v 8, v0x8dcdd38_0, 32;
    %load/v 40, v0x8dcdd98_0, 32;
    %sub 8, 40, 32;
    %set/v v0x8dce6b0_0, 8, 32;
    %load/v 8, v0x8dcdcb0_0, 32;
    %set/v v0x8dce278_0, 8, 32;
    %set/v v0x8dce808_0, 1, 1;
    %set/v v0x8dce128_0, 0, 1;
    %delay 13, 0;
    %set/v v0x8dce808_0, 0, 1;
    %movi 8, 15, 5;
    %set/v v0x8dce320_0, 8, 4;
T_82.16 ;
    %end;
    .scope S_0x8d76db8;
t_44 %join;
T_82.3 ;
T_82.1 ;
    %jmp T_82;
    .thread T_82;
    .scope S_0x8de2e50;
T_83 ;
    %wait E_0x8de2388;
    %load/v 8, v0x8de4438_0, 1;
    %jmp/0xz  T_83.0, 8;
    %ix/load 0, 15, 0;
    %assign/v0 v0x8de42a8_0, 0, 0;
    %ix/load 0, 480, 0;
    %assign/v0 v0x8de4258_0, 0, 0;
    %ix/load 0, 480, 0;
    %assign/v0 v0x8de41e8_0, 0, 0;
    %jmp T_83.1;
T_83.0 ;
    %fork t_47, S_0x8de39f8;
    %jmp t_46;
    .scope S_0x8de39f8;
t_47 ;
    %set/v v0x8de3a78_0, 0, 480;
    %set/v v0x8de3bf8_0, 0, 15;
    %set/v v0x8de3b48_0, 0, 32;
T_83.2 ;
    %load/v 8, v0x8de3b48_0, 32;
   %cmpi/u 8, 10, 32;
    %jmp/0xz T_83.3, 5;
    %load/v 8, v0x8de42f8_0, 40;
    %set/v v0x8de3f08_0, 8, 40;
    %load/v 8, v0x8de3b48_0, 32;
    %set/v v0x8de3f78_0, 8, 32;
    %fork TD_CPU.data_ctrl.readIndex, S_0x8de3e88;
    %join;
    %load/v  8, v0x8de3fd8_0, 4;
    %set/v v0x8de3ba8_0, 8, 4;
    %load/v 8, v0x8de3ba8_0, 4;
    %mov 12, 0, 2;
    %cmpi/u 8, 15, 6;
    %jmp/0xz  T_83.4, 4;
    %jmp T_83.5;
T_83.4 ;
    %load/v 488, v0x8de43e8_0, 320;
    %set/v v0x8de40b8_0, 488, 320;
    %load/v 488, v0x8de3b48_0, 32;
    %set/v v0x8de4128_0, 488, 32;
    %fork TD_CPU.data_ctrl.readData, S_0x8de4038;
    %join;
    %load/v  488, v0x8de4188_0, 32;
    %mov 8, 488, 32;
    %mov 40, 0, 448;
    %set/v v0x8de3ae8_0, 8, 480;
    %load/v 8, v0x8de3ae8_0, 480;
    %load/v 488, v0x8de3ba8_0, 4;
    %movi 492, 0, 7;
    %muli 488, 32, 11;
    %ix/get 0, 488, 11;
    %shiftl/i0  8, 480;
    %set/v v0x8de3ae8_0, 8, 480;
    %load/v 8, v0x8de3a78_0, 480;
    %load/v 488, v0x8de3ae8_0, 480;
    %or 8, 488, 480;
    %set/v v0x8de3a78_0, 8, 480;
    %load/v 23, v0x8de44b0_0, 10;
    %set/v v0x8de3e28_0, 23, 10;
    %load/v 23, v0x8de3b48_0, 32;
    %set/v v0x8de3d58_0, 23, 32;
    %fork TD_CPU.data_ctrl.readValid, S_0x8de3cd8;
    %join;
    %load/v  23, v0x8de3dc8_0, 1;
    %mov 8, 23, 1;
    %mov 9, 0, 14;
    %set/v v0x8de3c58_0, 8, 15;
    %load/v 8, v0x8de3c58_0, 15;
    %load/v 23, v0x8de3ba8_0, 4;
    %ix/get 0, 23, 4;
    %shiftl/i0  8, 15;
    %set/v v0x8de3c58_0, 8, 15;
    %load/v 8, v0x8de3bf8_0, 15;
    %load/v 23, v0x8de3c58_0, 15;
    %or 8, 23, 15;
    %set/v v0x8de3bf8_0, 8, 15;
T_83.5 ;
    %ix/load 0, 1, 0;
    %load/vp0 8, v0x8de3b48_0, 32;
    %set/v v0x8de3b48_0, 8, 32;
    %jmp T_83.2;
T_83.3 ;
    %load/v 8, v0x8de3a78_0, 480;
    %set/v v0x8de4258_0, 8, 480;
    %load/v 8, v0x8de3bf8_0, 15;
    %set/v v0x8de42a8_0, 8, 15;
    %set/v v0x8de3a78_0, 0, 480;
    %set/v v0x8de3b48_0, 0, 32;
T_83.6 ;
    %load/v 8, v0x8de3b48_0, 32;
   %cmpi/u 8, 2, 32;
    %jmp/0xz T_83.7, 5;
    %load/v 8, v0x8de42f8_0, 40;
    %set/v v0x8de3f08_0, 8, 40;
    %movi 8, 8, 34;
    %load/v 42, v0x8de3b48_0, 32;
    %mov 74, 0, 2;
    %add 8, 42, 34;
    %set/v v0x8de3f78_0, 8, 32;
    %fork TD_CPU.data_ctrl.readIndex, S_0x8de3e88;
    %join;
    %load/v  8, v0x8de3fd8_0, 4;
    %set/v v0x8de3ba8_0, 8, 4;
    %load/v 8, v0x8de3ba8_0, 4;
    %mov 12, 0, 2;
    %cmpi/u 8, 15, 6;
    %jmp/0xz  T_83.8, 4;
    %jmp T_83.9;
T_83.8 ;
    %load/v 488, v0x8de4348_0, 64;
    %movi 552, 0, 256;
    %set/v v0x8de40b8_0, 488, 320;
    %load/v 488, v0x8de3b48_0, 32;
    %set/v v0x8de4128_0, 488, 32;
    %fork TD_CPU.data_ctrl.readData, S_0x8de4038;
    %join;
    %load/v  488, v0x8de4188_0, 32;
    %mov 8, 488, 32;
    %mov 40, 0, 448;
    %set/v v0x8de3ae8_0, 8, 480;
    %load/v 8, v0x8de3ae8_0, 480;
    %load/v 488, v0x8de3ba8_0, 4;
    %movi 492, 0, 7;
    %muli 488, 32, 11;
    %ix/get 0, 488, 11;
    %shiftl/i0  8, 480;
    %set/v v0x8de3ae8_0, 8, 480;
    %load/v 8, v0x8de3a78_0, 480;
    %load/v 488, v0x8de3ae8_0, 480;
    %or 8, 488, 480;
    %set/v v0x8de3a78_0, 8, 480;
T_83.9 ;
    %ix/load 0, 1, 0;
    %load/vp0 8, v0x8de3b48_0, 32;
    %set/v v0x8de3b48_0, 8, 32;
    %jmp T_83.6;
T_83.7 ;
    %load/v 8, v0x8de3a78_0, 480;
    %set/v v0x8de41e8_0, 8, 480;
    %end;
    .scope S_0x8de2e50;
t_46 %join;
T_83.1 ;
    %jmp T_83;
    .thread T_83;
    .scope S_0x8d4f4b8;
T_84 ;
    %delay 5, 0;
    %set/v v0x8de75c0_0, 0, 1;
    %delay 5, 0;
    %set/v v0x8de75c0_0, 1, 1;
    %jmp T_84;
    .thread T_84;
    .scope S_0x8d4f4b8;
T_85 ;
    %fork t_49, S_0x8de2dd0;
    %jmp t_48;
    .scope S_0x8de2dd0;
t_49 ;
    %vpi_call 2 96 "$dumpfile", "CPU2.vcd";
    %vpi_call 2 97 "$dumpvars";
    %vpi_call 2 99 "$monitor", "%g: CDB: 0:<v:%b, d:%h, a:%h>, 1:<v:%b, d:%h, a:%h>, busy: 0:%g, 1:%g", $realtime, &PV<v0x8de71e0_0, 0, 1>, &PV<v0x8de7190_0, 0, 32>, &PV<v0x8de7130_0, 0, 32>, &PV<v0x8de71e0_0, 1, 1>, &PV<v0x8de7190_0, 32, 32>, &PV<v0x8de7130_0, 32, 32>, &PV<v0x8de7570_0, 8, 1>, &PV<v0x8de7570_0, 9, 1>;
    %movi 8, 5, 4;
    %set/v v0x8de7768_0, 8, 4;
    %set/v v0x8de7a80_0, 1, 1;
    %set/v v0x8de7ef8_0, 0, 10;
    %set/v v0x8de2c88_0, 0, 32;
T_85.0 ;
    %load/v 8, v0x8de2c88_0, 32;
   %cmpi/u 8, 15, 32;
    %jmp/0xz T_85.1, 5;
    %movi 8, 15, 5;
    %ix/getv 3, v0x8de2c88_0;
   %jmp/1 t_50, 4;
   %ix/load 1, 0, 0;
   %set/av v0x8de7480, 8, 4;
t_50 ;
    %ix/load 0, 1, 0;
    %load/vp0 8, v0x8de2c88_0, 32;
    %set/v v0x8de2c88_0, 8, 32;
    %jmp T_85.0;
T_85.1 ;
    %delay 10, 0;
    %set/v v0x8de7a80_0, 0, 1;
    %set/v v0x8de2c88_0, 0, 32;
T_85.2 ;
    %load/v 8, v0x8de2c88_0, 32;
   %cmpi/u 8, 32, 32;
    %jmp/0xz T_85.3, 5;
    %delay 10, 0;
    %set/v v0x8de7e18_0, 1, 1;
    %load/v 8, v0x8de2c88_0, 32;
    %set/v v0x8de7e68_0, 8, 5;
    %load/v 8, v0x8de2c88_0, 32;
    %set/v v0x8de7d40_0, 8, 32;
    %ix/load 0, 1, 0;
    %load/vp0 8, v0x8de2c88_0, 32;
    %set/v v0x8de2c88_0, 8, 32;
    %jmp T_85.2;
T_85.3 ;
    %set/v v0x8de7a18_0, 0, 5;
    %movi 8, 1, 5;
    %set/v v0x8de7968_0, 8, 5;
    %movi 8, 2, 5;
    %set/v v0x8de7b40_0, 8, 5;
    %delay 10, 0;
    %set/v v0x8de2c88_0, 0, 32;
T_85.4 ;
    %load/v 8, v0x8de2c88_0, 32;
   %cmpi/u 8, 3, 32;
    %jmp/0xz T_85.5, 5;
    %load/v 8, v0x8de2c88_0, 32;
    %set/v v0x8de7610_0, 8, 4;
    %load/v 8, v0x8de2c88_0, 32;
    %set/v v0x8de74d0_0, 8, 4;
    %load/v 8, v0x8de7a18_0, 5;
    %mov 13, 0, 27;
    %addi 8, 1, 32;
    %set/v v0x8de7a18_0, 8, 5;
    %load/v 8, v0x8de7b40_0, 5;
    %mov 13, 0, 27;
    %addi 8, 1, 32;
    %set/v v0x8de7b40_0, 8, 5;
    %delay 10, 0;
    %ix/load 0, 1, 0;
    %load/vp0 8, v0x8de2c88_0, 32;
    %set/v v0x8de2c88_0, 8, 32;
    %jmp T_85.4;
T_85.5 ;
    %delay 10, 0;
    %set/v v0x8de7610_0, 1, 4;
    %delay 50, 0;
    %vpi_call 2 143 "$finish";
    %end;
    .scope S_0x8d4f4b8;
t_48 %join;
    %jmp T_85;
    .thread T_85;
# The file index is used to find the file name in the following table.
:file_names 10;
    "N/A";
    "<interactive>";
    "CPU.v";
    "./parameters.v";
    "./reg_status.v";
    "./reg_file_RX.v";
    "./CDB_data_controller.v";
    "./ALU_RS.v";
    "./store_RS.v";
    "./def_param.v";
