#! /usr/bin/vvp
:ivl_version "0.9.6 " "(v0_9_6)";
:vpi_time_precision - 10;
:vpi_module "system";
:vpi_module "v2005_math";
:vpi_module "va_math";
S_0x8fa45a0 .scope module, "CPU" "CPU" 2 6;
 .timescale -9 -10;
P_0x8fa6e4c .param/l "ADDER_NUM" 3 35, +C4<011>;
P_0x8fa6e60 .param/l "ALU_ADD" 3 10, C4<0000>;
P_0x8fa6e74 .param/l "ALU_MUL" 3 12, C4<0010>;
P_0x8fa6e88 .param/l "ALU_SUB" 3 11, C4<0001>;
P_0x8fa6e9c .param/l "BLOCK_SIZE" 3 6, +C4<010000>;
P_0x8fa6eb0 .param/l "CACHE_SIZE" 3 7, +C4<010000000000>;
P_0x8fa6ec4 .param/l "FU_INDEX" 3 40, +C4<0100>;
P_0x8fa6ed8 .param/l "FU_NUM" 3 39, +C4<01010>;
P_0x8fa6eec .param/l "INST_ADD" 3 19, C4<0000>;
P_0x8fa6f00 .param/l "INST_ADDI" 3 24, C4<0101>;
P_0x8fa6f14 .param/l "INST_BGE" 3 32, C4<1101>;
P_0x8fa6f28 .param/l "INST_J" 3 30, C4<1011>;
P_0x8fa6f3c .param/l "INST_JR" 3 31, C4<1100>;
P_0x8fa6f50 .param/l "INST_LI" 3 29, C4<1010>;
P_0x8fa6f64 .param/l "INST_LW" 3 22, C4<0011>;
P_0x8fa6f78 .param/l "INST_LWI" 3 27, C4<1000>;
P_0x8fa6f8c .param/l "INST_MUL" 3 21, C4<0010>;
P_0x8fa6fa0 .param/l "INST_MULI" 3 26, C4<0111>;
P_0x8fa6fb4 .param/l "INST_SUB" 3 20, C4<0001>;
P_0x8fa6fc8 .param/l "INST_SUBI" 3 25, C4<0110>;
P_0x8fa6fdc .param/l "INST_SW" 3 23, C4<0100>;
P_0x8fa6ff0 .param/l "INST_SWI" 3 28, C4<1001>;
P_0x8fa7004 .param/l "LOADER_NUM" 3 37, +C4<011>;
P_0x8fa7018 .param/l "MEM_SIZE" 3 2, +C4<010000000000>;
P_0x8fa702c .param/l "MULTER_NUM" 3 36, +C4<010>;
P_0x8fa7040 .param/l "MUL_STALL" 3 43, +C4<011>;
P_0x8fa7054 .param/l "OPCODE_WIDTH" 3 15, +C4<0100>;
P_0x8fa7068 .param/l "RB_INDEX" 3 47, +C4<0100>;
P_0x8fa707c .param/l "RB_SIZE" 3 46, +C4<010000>;
P_0x8fa7090 .param/l "RD_START" 3 17, +C4<010110>;
P_0x8fa70a4 .param/l "READY" 3 41, +C4<01111>;
P_0x8fa70b8 .param/l "REG_FILE_SIZE" 3 4, +C4<0100000>;
P_0x8fa70cc .param/l "REG_INDEX" 3 3, +C4<0101>;
P_0x8fa70e0 .param/l "RS_START" 3 16, +C4<011011>;
P_0x8fa70f4 .param/l "RT_START" 3 18, +C4<010001>;
P_0x8fa7108 .param/l "STORER_NUM" 3 38, +C4<010>;
P_0x8fa711c .param/l "TAG_SIZE" 3 8, +C4<010010>;
P_0x8fa7130 .param/l "WORD_SIZE" 3 1, +C4<0100000>;
L_0x8fcd8f0 .functor BUFZ 32, L_0x8fd5f78, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>;
RS_0x8fa771c .resolv tri, v0x8fccac8_0, v0x8fcf018_0, v0x8fd1598_0, C4<zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz>;
v0x8fd4948_0 .net8 "CDB_data_data", 511 0, RS_0x8fa771c; 3 drivers
RS_0x8fa7734 .resolv tri, v0x8fccb88_0, v0x8fcf0f0_0, v0x8fd16a0_0, C4<zzzzzzzzzzzzzzzz>;
v0x8fd4998_0 .net8 "CDB_data_valid", 15 0, RS_0x8fa7734; 3 drivers
v0x8fd49e8_0 .net "CDB_inst_RBindex", 3 0, v0x8fd4ad8_0; 1 drivers
v0x8fd4a38_0 .net "CDB_inst_fu", 3 0, v0x8fd4cd8_0; 1 drivers
v0x8fd4a88_0 .net "CDB_inst_inst", 31 0, L_0x8fcd8f0; 1 drivers
v0x8fd4ad8_0 .var "RBindex", 3 0;
v0x8fd4b28_0 .net *"_s13", 0 0, C4<0>; 1 drivers
v0x8fd4b78_0 .net *"_s6", 11 0, C4<000000000000>; 1 drivers
v0x8fd4bd8_0 .net *"_s8", 30 0, L_0x8fd5e88; 1 drivers
RS_0x8fa77f4 .resolv tri, L_0x8fd5a38, L_0x8fd5b28, L_0x8fd5be8, C4<zzzzzzzzzz>;
v0x8fd4c38_0 .net8 "busy", 9 0, RS_0x8fa77f4; 3 drivers
v0x8fd4c88_0 .var "clk", 0 0;
v0x8fd4cd8_0 .var "fu", 3 0;
v0x8fd4d38_0 .net "inst", 31 0, L_0x8fd5f78; 1 drivers
v0x8fd4d98_0 .net "numi", 4 0, C4<zzzzz>; 0 drivers
RS_0x8fa78b4 .resolv tri, v0x8fcd2f8_0, v0x8fcf810_0, v0x8fd1e20_0, C4<zzzzz>;
v0x8fd4de8_0 .net8 "numj", 4 0, RS_0x8fa78b4; 3 drivers
RS_0x8fa78cc .resolv tri, v0x8fcd258_0, v0x8fcf8b8_0, v0x8fd1ec8_0, C4<zzzzz>;
v0x8fd4e38_0 .net8 "numk", 4 0, RS_0x8fa78cc; 3 drivers
v0x8fd4ed0_0 .var "op", 3 0;
v0x8fd4f30_0 .net "qi", 3 0, L_0x8fd1fa0; 1 drivers
v0x8fd4fd0_0 .net "qj", 3 0, L_0x8fd5908; 1 drivers
v0x8fd5088_0 .net "qk", 3 0, L_0x8fd59c8; 1 drivers
v0x8fd4f80_0 .var "rd", 4 0;
v0x8fd5198_0 .var "reset", 0 0;
v0x8fd50d8_0 .var "rs", 4 0;
v0x8fd5248_0 .var "rt", 4 0;
v0x8fd51e8_0 .net "vi", 31 0, L_0x8fd1f18; 1 drivers
v0x8fd5300_0 .net "vj", 31 0, L_0x8fd1aa0; 1 drivers
v0x8fd5298_0 .net "vk", 31 0, L_0x8fd5720; 1 drivers
v0x8fd53c0_0 .var "wd_reg", 31 0;
v0x8fd5350_0 .var "wd_status", 3 0;
v0x8fd5488_0 .var "we_reg", 0 0;
v0x8fd5410_0 .var "we_status", 0 0;
v0x8fd5558_0 .var "ws_reg", 4 0;
v0x8fd54d8_0 .var "ws_status", 4 0;
LS_0x8fd5e88_0_0 .concat [ 12 5 5 5], C4<000000000000>, v0x8fd5248_0, v0x8fd4f80_0, v0x8fd50d8_0;
LS_0x8fd5e88_0_4 .concat [ 4 0 0 0], v0x8fd4ed0_0;
L_0x8fd5e88 .concat [ 27 4 0 0], LS_0x8fd5e88_0_0, LS_0x8fd5e88_0_4;
L_0x8fd5f78 .concat [ 31 1 0 0], L_0x8fd5e88, C4<0>;
S_0x8fd2210 .scope module, "status" "reg_status" 2 40, 4 3, S_0x8fa45a0;
 .timescale -9 -10;
P_0x8fd2294 .param/l "ADDER_NUM" 3 35, +C4<011>;
P_0x8fd22a8 .param/l "ALU_ADD" 3 10, C4<0000>;
P_0x8fd22bc .param/l "ALU_MUL" 3 12, C4<0010>;
P_0x8fd22d0 .param/l "ALU_SUB" 3 11, C4<0001>;
P_0x8fd22e4 .param/l "BLOCK_SIZE" 3 6, +C4<010000>;
P_0x8fd22f8 .param/l "CACHE_SIZE" 3 7, +C4<010000000000>;
P_0x8fd230c .param/l "FU_INDEX" 3 40, +C4<0100>;
P_0x8fd2320 .param/l "FU_NUM" 3 39, +C4<01010>;
P_0x8fd2334 .param/l "INST_ADD" 3 19, C4<0000>;
P_0x8fd2348 .param/l "INST_ADDI" 3 24, C4<0101>;
P_0x8fd235c .param/l "INST_BGE" 3 32, C4<1101>;
P_0x8fd2370 .param/l "INST_J" 3 30, C4<1011>;
P_0x8fd2384 .param/l "INST_JR" 3 31, C4<1100>;
P_0x8fd2398 .param/l "INST_LI" 3 29, C4<1010>;
P_0x8fd23ac .param/l "INST_LW" 3 22, C4<0011>;
P_0x8fd23c0 .param/l "INST_LWI" 3 27, C4<1000>;
P_0x8fd23d4 .param/l "INST_MUL" 3 21, C4<0010>;
P_0x8fd23e8 .param/l "INST_MULI" 3 26, C4<0111>;
P_0x8fd23fc .param/l "INST_SUB" 3 20, C4<0001>;
P_0x8fd2410 .param/l "INST_SUBI" 3 25, C4<0110>;
P_0x8fd2424 .param/l "INST_SW" 3 23, C4<0100>;
P_0x8fd2438 .param/l "INST_SWI" 3 28, C4<1001>;
P_0x8fd244c .param/l "LOADER_NUM" 3 37, +C4<011>;
P_0x8fd2460 .param/l "MEM_SIZE" 3 2, +C4<010000000000>;
P_0x8fd2474 .param/l "MULTER_NUM" 3 36, +C4<010>;
P_0x8fd2488 .param/l "MUL_STALL" 3 43, +C4<011>;
P_0x8fd249c .param/l "OPCODE_WIDTH" 3 15, +C4<0100>;
P_0x8fd24b0 .param/l "RB_INDEX" 3 47, +C4<0100>;
P_0x8fd24c4 .param/l "RB_SIZE" 3 46, +C4<010000>;
P_0x8fd24d8 .param/l "RD_START" 3 17, +C4<010110>;
P_0x8fd24ec .param/l "READY" 3 41, +C4<01111>;
P_0x8fd2500 .param/l "REG_FILE_SIZE" 3 4, +C4<0100000>;
P_0x8fd2514 .param/l "REG_INDEX" 3 3, +C4<0101>;
P_0x8fd2528 .param/l "RS_START" 3 16, +C4<011011>;
P_0x8fd253c .param/l "RT_START" 3 18, +C4<010001>;
P_0x8fd2550 .param/l "STORER_NUM" 3 38, +C4<010>;
P_0x8fd2564 .param/l "TAG_SIZE" 3 8, +C4<010010>;
P_0x8fd2578 .param/l "WORD_SIZE" 3 1, +C4<0100000>;
L_0x8fd1fa0 .functor BUFZ 4, L_0x8fd5790, C4<0000>, C4<0000>, C4<0000>;
L_0x8fd5908 .functor BUFZ 4, L_0x8fd58b8, C4<0000>, C4<0000>, C4<0000>;
L_0x8fd59c8 .functor BUFZ 4, L_0x8fd5978, C4<0000>, C4<0000>, C4<0000>;
v0x8fd3f08_0 .net *"_s0", 3 0, L_0x8fd5790; 1 drivers
v0x8fd3f78_0 .net *"_s4", 3 0, L_0x8fd58b8; 1 drivers
v0x8fd3fd8_0 .net *"_s8", 3 0, L_0x8fd5978; 1 drivers
v0x8fd4038_0 .net "clk", 0 0, v0x8fd4c88_0; 1 drivers
v0x8fd40f0_0 .alias "get_num1", 4 0, v0x8fd4d98_0;
v0x8fd4140_0 .alias "get_num2", 4 0, v0x8fd4de8_0;
v0x8fd4218_0 .alias "get_num3", 4 0, v0x8fd4e38_0;
v0x8fd42d0_0 .net "reset", 0 0, v0x8fd5198_0; 1 drivers
v0x8fd4388_0 .alias "status1", 3 0, v0x8fd4f30_0;
v0x8fd43d8_0 .alias "status2", 3 0, v0x8fd4fd0_0;
v0x8fd4428_0 .alias "status3", 3 0, v0x8fd5088_0;
v0x8fd4478 .array "statuses", 0 31, 3 0;
v0x8fd44c8_0 .alias "value1", 31 0, v0x8fd51e8_0;
v0x8fd4518_0 .alias "value2", 31 0, v0x8fd5300_0;
v0x8fd45d0_0 .alias "value3", 31 0, v0x8fd5298_0;
v0x8fd4688_0 .net "write_reg_data", 31 0, v0x8fd53c0_0; 1 drivers
v0x8fd4740_0 .net "write_reg_enable", 0 0, v0x8fd5488_0; 1 drivers
v0x8fd47b0_0 .net "write_reg_src", 4 0, v0x8fd5558_0; 1 drivers
v0x8fd4850_0 .net "write_rs_enable", 0 0, v0x8fd5410_0; 1 drivers
v0x8fd48a0_0 .net "write_rs_src", 4 0, v0x8fd54d8_0; 1 drivers
v0x8fd4800_0 .net "write_rs_status", 3 0, v0x8fd5350_0; 1 drivers
L_0x8fd5790 .array/port v0x8fd4478, C4<zzzzz>;
L_0x8fd58b8 .array/port v0x8fd4478, RS_0x8fa78b4;
L_0x8fd5978 .array/port v0x8fd4478, RS_0x8fa78cc;
S_0x8fd2cc0 .scope module, "registers" "reg_file" 4 22, 5 1, S_0x8fd2210;
 .timescale -9 -10;
P_0x8fd2d44 .param/l "ADDER_NUM" 3 35, +C4<011>;
P_0x8fd2d58 .param/l "ALU_ADD" 3 10, C4<0000>;
P_0x8fd2d6c .param/l "ALU_MUL" 3 12, C4<0010>;
P_0x8fd2d80 .param/l "ALU_SUB" 3 11, C4<0001>;
P_0x8fd2d94 .param/l "BLOCK_SIZE" 3 6, +C4<010000>;
P_0x8fd2da8 .param/l "CACHE_SIZE" 3 7, +C4<010000000000>;
P_0x8fd2dbc .param/l "FU_INDEX" 3 40, +C4<0100>;
P_0x8fd2dd0 .param/l "FU_NUM" 3 39, +C4<01010>;
P_0x8fd2de4 .param/l "INST_ADD" 3 19, C4<0000>;
P_0x8fd2df8 .param/l "INST_ADDI" 3 24, C4<0101>;
P_0x8fd2e0c .param/l "INST_BGE" 3 32, C4<1101>;
P_0x8fd2e20 .param/l "INST_J" 3 30, C4<1011>;
P_0x8fd2e34 .param/l "INST_JR" 3 31, C4<1100>;
P_0x8fd2e48 .param/l "INST_LI" 3 29, C4<1010>;
P_0x8fd2e5c .param/l "INST_LW" 3 22, C4<0011>;
P_0x8fd2e70 .param/l "INST_LWI" 3 27, C4<1000>;
P_0x8fd2e84 .param/l "INST_MUL" 3 21, C4<0010>;
P_0x8fd2e98 .param/l "INST_MULI" 3 26, C4<0111>;
P_0x8fd2eac .param/l "INST_SUB" 3 20, C4<0001>;
P_0x8fd2ec0 .param/l "INST_SUBI" 3 25, C4<0110>;
P_0x8fd2ed4 .param/l "INST_SW" 3 23, C4<0100>;
P_0x8fd2ee8 .param/l "INST_SWI" 3 28, C4<1001>;
P_0x8fd2efc .param/l "LOADER_NUM" 3 37, +C4<011>;
P_0x8fd2f10 .param/l "MEM_SIZE" 3 2, +C4<010000000000>;
P_0x8fd2f24 .param/l "MULTER_NUM" 3 36, +C4<010>;
P_0x8fd2f38 .param/l "MUL_STALL" 3 43, +C4<011>;
P_0x8fd2f4c .param/l "OPCODE_WIDTH" 3 15, +C4<0100>;
P_0x8fd2f60 .param/l "RB_INDEX" 3 47, +C4<0100>;
P_0x8fd2f74 .param/l "RB_SIZE" 3 46, +C4<010000>;
P_0x8fd2f88 .param/l "RD_START" 3 17, +C4<010110>;
P_0x8fd2f9c .param/l "READY" 3 41, +C4<01111>;
P_0x8fd2fb0 .param/l "REG_FILE_SIZE" 3 4, +C4<0100000>;
P_0x8fd2fc4 .param/l "REG_INDEX" 3 3, +C4<0101>;
P_0x8fd2fd8 .param/l "RS_START" 3 16, +C4<011011>;
P_0x8fd2fec .param/l "RT_START" 3 18, +C4<010001>;
P_0x8fd3000 .param/l "STORER_NUM" 3 38, +C4<010>;
P_0x8fd3014 .param/l "TAG_SIZE" 3 8, +C4<010010>;
P_0x8fd3028 .param/l "WORD_SIZE" 3 1, +C4<0100000>;
L_0x8fd1f18 .functor BUFZ 32, L_0x8fd5630, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>;
L_0x8fd1aa0 .functor BUFZ 32, L_0x8fd5680, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>;
L_0x8fd5720 .functor BUFZ 32, L_0x8fd56d0, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>;
v0x8fd3898_0 .net *"_s0", 31 0, L_0x8fd5630; 1 drivers
v0x8fd3908_0 .net *"_s4", 31 0, L_0x8fd5680; 1 drivers
v0x8fd3968_0 .net *"_s8", 31 0, L_0x8fd56d0; 1 drivers
v0x8fd39c8_0 .alias "clk", 0 0, v0x8fd4038_0;
v0x8fd3a18_0 .alias "get_num1", 4 0, v0x8fd4d98_0;
v0x8fd3a68_0 .alias "get_num2", 4 0, v0x8fd4de8_0;
v0x8fd3ab8_0 .alias "get_num3", 4 0, v0x8fd4e38_0;
v0x8fd3b08_0 .var "i", 5 0;
v0x8fd3b90_0 .alias "out1", 31 0, v0x8fd51e8_0;
v0x8fd3bf0_0 .alias "out2", 31 0, v0x8fd5300_0;
v0x8fd3c70_0 .alias "out3", 31 0, v0x8fd5298_0;
v0x8fd3cc0 .array "register", 0 31, 31 0;
v0x8fd3d10_0 .alias "reset_enable", 0 0, v0x8fd42d0_0;
v0x8fd3d60_0 .alias "set_enable", 0 0, v0x8fd4740_0;
v0x8fd3e00_0 .alias "set_num", 4 0, v0x8fd47b0_0;
v0x8fd3e60_0 .alias "set_val", 31 0, v0x8fd4688_0;
L_0x8fd5630 .array/port v0x8fd3cc0, C4<zzzzz>;
L_0x8fd5680 .array/port v0x8fd3cc0, RS_0x8fa78b4;
L_0x8fd56d0 .array/port v0x8fd3cc0, RS_0x8fa78cc;
S_0x8fd2bd0 .scope begin, "rs" "rs" 4 30, 4 30, S_0x8fd2210;
 .timescale -9 -10;
v0x8fd2c50_0 .var "i", 31 0;
S_0x8fd2140 .scope begin, "test" "test" 2 59, 2 59, S_0x8fa45a0;
 .timescale -9 -10;
v0x8fd21c0_0 .var "i", 31 0;
S_0x8fcfac0 .scope module, "alu_rs[0]" "ALU_RS" 2 43, 6 1, S_0x8fa45a0;
 .timescale -9 -10;
P_0x8fcfb44 .param/l "ADDER_NUM" 3 35, +C4<011>;
P_0x8fcfb58 .param/l "ALU_ADD" 3 10, C4<0000>;
P_0x8fcfb6c .param/l "ALU_MUL" 3 12, C4<0010>;
P_0x8fcfb80 .param/l "ALU_SUB" 3 11, C4<0001>;
P_0x8fcfb94 .param/l "BLOCK_SIZE" 3 6, +C4<010000>;
P_0x8fcfba8 .param/l "CACHE_SIZE" 3 7, +C4<010000000000>;
P_0x8fcfbbc .param/l "FU_INDEX" 3 40, +C4<0100>;
P_0x8fcfbd0 .param/l "FU_NUM" 3 39, +C4<01010>;
P_0x8fcfbe4 .param/l "INST_ADD" 3 19, C4<0000>;
P_0x8fcfbf8 .param/l "INST_ADDI" 3 24, C4<0101>;
P_0x8fcfc0c .param/l "INST_BGE" 3 32, C4<1101>;
P_0x8fcfc20 .param/l "INST_J" 3 30, C4<1011>;
P_0x8fcfc34 .param/l "INST_JR" 3 31, C4<1100>;
P_0x8fcfc48 .param/l "INST_LI" 3 29, C4<1010>;
P_0x8fcfc5c .param/l "INST_LW" 3 22, C4<0011>;
P_0x8fcfc70 .param/l "INST_LWI" 3 27, C4<1000>;
P_0x8fcfc84 .param/l "INST_MUL" 3 21, C4<0010>;
P_0x8fcfc98 .param/l "INST_MULI" 3 26, C4<0111>;
P_0x8fcfcac .param/l "INST_SUB" 3 20, C4<0001>;
P_0x8fcfcc0 .param/l "INST_SUBI" 3 25, C4<0110>;
P_0x8fcfcd4 .param/l "INST_SW" 3 23, C4<0100>;
P_0x8fcfce8 .param/l "INST_SWI" 3 28, C4<1001>;
P_0x8fcfcfc .param/l "LOADER_NUM" 3 37, +C4<011>;
P_0x8fcfd10 .param/l "MEM_SIZE" 3 2, +C4<010000000000>;
P_0x8fcfd24 .param/l "MULTER_NUM" 3 36, +C4<010>;
P_0x8fcfd38 .param/l "MUL_STALL" 3 43, +C4<011>;
P_0x8fcfd4c .param/l "OPCODE_WIDTH" 3 15, +C4<0100>;
P_0x8fcfd60 .param/l "RB_INDEX" 3 47, +C4<0100>;
P_0x8fcfd74 .param/l "RB_SIZE" 3 46, +C4<010000>;
P_0x8fcfd88 .param/l "RD_START" 3 17, +C4<010110>;
P_0x8fcfd9c .param/l "READY" 3 41, +C4<01111>;
P_0x8fcfdb0 .param/l "REG_FILE_SIZE" 3 4, +C4<0100000>;
P_0x8fcfdc4 .param/l "REG_INDEX" 3 3, +C4<0101>;
P_0x8fcfdd8 .param/l "RS_START" 3 16, +C4<011011>;
P_0x8fcfdec .param/l "RT_START" 3 18, +C4<010001>;
P_0x8fcfe00 .param/l "STORER_NUM" 3 38, +C4<010>;
P_0x8fcfe14 .param/l "TAG_SIZE" 3 8, +C4<010010>;
P_0x8fcfe28 .param/l "WORD_SIZE" 3 1, +C4<0100000>;
P_0x8fcfe3c .param/l "fuindex" 6 5, +C4<0>;
v0x8fd14d0_0 .alias "CDB_data_data", 511 0, v0x8fd4948_0;
v0x8fd1598_0 .var "CDB_data_data_out", 511 0;
v0x8fd15e8_0 .alias "CDB_data_valid", 15 0, v0x8fd4998_0;
v0x8fd16a0_0 .var "CDB_data_valid_out", 15 0;
v0x8fd1708_0 .var "Qj", 3 0;
v0x8fd1758_0 .var "Qk", 3 0;
v0x8fd17d8_0 .alias "RB_index", 3 0, v0x8fd49e8_0;
v0x8fd1828_0 .var "Vj", 31 0;
v0x8fd18b0_0 .var "Vk", 31 0;
v0x8fd1910_0 .net *"_s3", 0 0, v0x8fd19a0_0; 1 drivers
v0x8fd19a0_0 .var "busy", 0 0;
v0x8fd1a00_0 .alias "busy_out", 9 0, v0x8fd4c38_0;
v0x8fd1a50_0 .alias "clk", 0 0, v0x8fd4038_0;
v0x8fd1ad8_0 .var "dest", 3 0;
v0x8fd1b78_0 .alias "fu", 3 0, v0x8fd4a38_0;
v0x8fd1bc8_0 .alias "inst", 31 0, v0x8fd4a88_0;
v0x8fd1c98_0 .var "op", 3 0;
v0x8fd1cf8_0 .alias "qj", 3 0, v0x8fd4fd0_0;
v0x8fd1d98_0 .alias "qk", 3 0, v0x8fd5088_0;
v0x8fd1e20_0 .var "reg_numj", 4 0;
v0x8fd1ec8_0 .var "reg_numk", 4 0;
v0x8fd1f50_0 .alias "reset", 0 0, v0x8fd42d0_0;
v0x8fd2000_0 .alias "vj", 31 0, v0x8fd5300_0;
v0x8fd2088_0 .alias "vk", 31 0, v0x8fd5298_0;
L_0x8fd5a38 .part/pv v0x8fd19a0_0, 0, 1, 10;
S_0x8fd1270 .scope task, "checkAndGetData" "checkAndGetData" 6 139, 6 139, S_0x8fcfac0;
 .timescale -9 -10;
v0x8fd12f0_0 .var "CDB_data_data", 511 0;
v0x8fd1360_0 .var "CDB_data_valid", 15 0;
v0x8fd13c0_0 .var "Q", 3 0;
v0x8fd1420_0 .var "V", 31 0;
v0x8fd1470_0 .var "ok", 0 0;
TD_CPU.alu_rs\x5B0\x5D.checkAndGetData ;
    %load/v 8, v0x8fd1360_0, 16;
    %set/v v0x8fd0778_0, 8, 16;
    %load/v 8, v0x8fd13c0_0, 4;
    %set/v v0x8fd07e8_0, 8, 4;
    %fork TD_CPU.alu_rs\x5B0\x5D.readValidBus, S_0x8fd06f8;
    %join;
    %load/v  8, v0x8fd0848_0, 1;
    %jmp/0xz  T_0.0, 8;
    %load/v 8, v0x8fd12f0_0, 512;
    %set/v v0x8fd0928_0, 8, 512;
    %load/v 8, v0x8fd13c0_0, 4;
    %set/v v0x8fd0998_0, 8, 4;
    %fork TD_CPU.alu_rs\x5B0\x5D.readDataBus, S_0x8fd08a8;
    %join;
    %load/v  8, v0x8fd09f8_0, 32;
    %set/v v0x8fd1420_0, 8, 32;
    %jmp T_0.1;
T_0.0 ;
    %set/v v0x8fd1470_0, 0, 1;
T_0.1 ;
    %end;
S_0x8fd0f90 .scope task, "getData" "getData" 6 104, 6 104, S_0x8fcfac0;
 .timescale -9 -10;
v0x8fd1010_0 .var "CDB_data_data", 511 0;
v0x8fd1080_0 .var "CDB_data_valid", 15 0;
v0x8fd10e0_0 .var "Q", 3 0;
v0x8fd1140_0 .var "V", 31 0;
v0x8fd1190_0 .var "q", 3 0;
v0x8fd11f0_0 .var "v", 31 0;
TD_CPU.alu_rs\x5B0\x5D.getData ;
    %load/v 8, v0x8fd1190_0, 4;
    %mov 12, 0, 2;
    %cmpi/u 8, 15, 6;
    %jmp/0xz  T_1.2, 4;
    %load/v 8, v0x8fd11f0_0, 32;
    %ix/load 0, 32, 0;
    %assign/v0 v0x8fd1140_0, 0, 8;
    %movi 8, 15, 5;
    %ix/load 0, 4, 0;
    %assign/v0 v0x8fd10e0_0, 0, 8;
    %jmp T_1.3;
T_1.2 ;
    %load/v 8, v0x8fd1080_0, 16;
    %set/v v0x8fd0778_0, 8, 16;
    %load/v 8, v0x8fd1190_0, 4;
    %set/v v0x8fd07e8_0, 8, 4;
    %fork TD_CPU.alu_rs\x5B0\x5D.readValidBus, S_0x8fd06f8;
    %join;
    %load/v  8, v0x8fd0848_0, 1;
    %jmp/0xz  T_1.4, 8;
    %load/v 8, v0x8fd1010_0, 512;
    %set/v v0x8fd0928_0, 8, 512;
    %load/v 8, v0x8fd1190_0, 4;
    %set/v v0x8fd0998_0, 8, 4;
    %fork TD_CPU.alu_rs\x5B0\x5D.readDataBus, S_0x8fd08a8;
    %join;
    %load/v  8, v0x8fd09f8_0, 32;
    %ix/load 0, 32, 0;
    %assign/v0 v0x8fd1140_0, 0, 8;
    %movi 8, 15, 5;
    %ix/load 0, 4, 0;
    %assign/v0 v0x8fd10e0_0, 0, 8;
    %jmp T_1.5;
T_1.4 ;
    %load/v 8, v0x8fd1190_0, 4;
    %ix/load 0, 4, 0;
    %assign/v0 v0x8fd10e0_0, 0, 8;
T_1.5 ;
T_1.3 ;
    %end;
S_0x8fd0cb8 .scope task, "writeData" "writeData" 6 89, 6 89, S_0x8fcfac0;
 .timescale -9 -10;
v0x8fd0d38_0 .var "FF", 31 0;
v0x8fd0da8_0 .var "data", 31 0;
v0x8fd0e08_0 .var "dataBus", 511 0;
v0x8fd0e68_0 .var "dest", 3 0;
v0x8fd0ed0_0 .var "longData", 511 0;
v0x8fd0f30_0 .var "mask", 511 0;
TD_CPU.alu_rs\x5B0\x5D.writeData ;
    %set/v v0x8fd0d38_0, 1, 32;
    %load/v 8, v0x8fd0d38_0, 32;
    %mov 40, 0, 480;
    %load/v 520, v0x8fd0e68_0, 4;
    %movi 524, 0, 7;
    %muli 520, 32, 11;
    %ix/get 0, 520, 11;
    %shiftl/i0  8, 512;
    %inv 8, 512;
    %set/v v0x8fd0f30_0, 8, 512;
    %load/v 8, v0x8fd0da8_0, 32;
    %mov 40, 0, 480;
    %load/v 520, v0x8fd0e68_0, 4;
    %movi 524, 0, 7;
    %muli 520, 32, 11;
    %ix/get 0, 520, 11;
    %shiftl/i0  8, 512;
    %set/v v0x8fd0ed0_0, 8, 512;
    %load/v 8, v0x8fd0e08_0, 512;
    %load/v 520, v0x8fd0f30_0, 512;
    %and 8, 520, 512;
    %load/v 520, v0x8fd0ed0_0, 512;
    %or 8, 520, 512;
    %set/v v0x8fd0e08_0, 8, 512;
    %end;
S_0x8fd0a58 .scope task, "writeValid" "writeValid" 6 76, 6 76, S_0x8fcfac0;
 .timescale -9 -10;
v0x8fd0ad8_0 .var "data", 0 0;
v0x8fd0b48_0 .var "dest", 3 0;
v0x8fd0ba8_0 .var "longData", 3 0;
v0x8fd0c08_0 .var "mask", 3 0;
v0x8fd0c58_0 .var "validBus", 15 0;
TD_CPU.alu_rs\x5B0\x5D.writeValid ;
    %movi 8, 1, 4;
    %ix/getv 0, v0x8fd0b48_0;
    %shiftl/i0  8, 4;
    %inv 8, 4;
    %set/v v0x8fd0c08_0, 8, 4;
    %load/v 8, v0x8fd0ad8_0, 1;
    %mov 9, 0, 3;
    %load/v 12, v0x8fd0b48_0, 4;
    %ix/get 0, 12, 4;
    %shiftl/i0  8, 4;
    %set/v v0x8fd0ba8_0, 8, 4;
    %load/v 8, v0x8fd0ba8_0, 4;
    %mov 12, 0, 12;
    %load/v 24, v0x8fd0c08_0, 4;
    %mov 28, 0, 12;
    %load/v 40, v0x8fd0c58_0, 16;
    %and 24, 40, 16;
    %or 8, 24, 16;
    %set/v v0x8fd0c58_0, 8, 16;
    %end;
S_0x8fd08a8 .scope function, "readDataBus" "readDataBus" 6 123, 6 123, S_0x8fcfac0;
 .timescale -9 -10;
v0x8fd0928_0 .var "CDB_data_data", 511 0;
v0x8fd0998_0 .var "index", 3 0;
v0x8fd09f8_0 .var "readDataBus", 31 0;
TD_CPU.alu_rs\x5B0\x5D.readDataBus ;
    %load/v 8, v0x8fd0928_0, 512;
    %load/v 520, v0x8fd0998_0, 4;
    %movi 524, 0, 7;
    %muli 520, 32, 11;
    %ix/get 0, 520, 11;
    %shiftr/i0  8, 512;
    %set/v v0x8fd09f8_0, 8, 32;
    %end;
S_0x8fd06f8 .scope function, "readValidBus" "readValidBus" 6 131, 6 131, S_0x8fcfac0;
 .timescale -9 -10;
v0x8fd0778_0 .var "CDB_data_valid", 15 0;
v0x8fd07e8_0 .var "index", 3 0;
v0x8fd0848_0 .var "readValidBus", 0 0;
TD_CPU.alu_rs\x5B0\x5D.readValidBus ;
    %load/v 8, v0x8fd0778_0, 16;
    %load/v 24, v0x8fd07e8_0, 4;
    %ix/get 0, 24, 4;
    %shiftr/i0  8, 16;
    %set/v v0x8fd0848_0, 8, 1;
    %end;
S_0x8fd0678 .scope begin, "checkIssue" "checkIssue" 6 38, 6 38, S_0x8fcfac0;
 .timescale -9 -10;
S_0x8fd0598 .scope begin, "execute" "execute" 6 52, 6 52, S_0x8fcfac0;
 .timescale -9 -10;
v0x8fd0618_0 .var "ok", 0 0;
S_0x8fcd558 .scope module, "alu_rs[1]" "ALU_RS" 2 43, 6 1, S_0x8fa45a0;
 .timescale -9 -10;
P_0x8fcd5dc .param/l "ADDER_NUM" 3 35, +C4<011>;
P_0x8fcd5f0 .param/l "ALU_ADD" 3 10, C4<0000>;
P_0x8fcd604 .param/l "ALU_MUL" 3 12, C4<0010>;
P_0x8fcd618 .param/l "ALU_SUB" 3 11, C4<0001>;
P_0x8fcd62c .param/l "BLOCK_SIZE" 3 6, +C4<010000>;
P_0x8fcd640 .param/l "CACHE_SIZE" 3 7, +C4<010000000000>;
P_0x8fcd654 .param/l "FU_INDEX" 3 40, +C4<0100>;
P_0x8fcd668 .param/l "FU_NUM" 3 39, +C4<01010>;
P_0x8fcd67c .param/l "INST_ADD" 3 19, C4<0000>;
P_0x8fcd690 .param/l "INST_ADDI" 3 24, C4<0101>;
P_0x8fcd6a4 .param/l "INST_BGE" 3 32, C4<1101>;
P_0x8fcd6b8 .param/l "INST_J" 3 30, C4<1011>;
P_0x8fcd6cc .param/l "INST_JR" 3 31, C4<1100>;
P_0x8fcd6e0 .param/l "INST_LI" 3 29, C4<1010>;
P_0x8fcd6f4 .param/l "INST_LW" 3 22, C4<0011>;
P_0x8fcd708 .param/l "INST_LWI" 3 27, C4<1000>;
P_0x8fcd71c .param/l "INST_MUL" 3 21, C4<0010>;
P_0x8fcd730 .param/l "INST_MULI" 3 26, C4<0111>;
P_0x8fcd744 .param/l "INST_SUB" 3 20, C4<0001>;
P_0x8fcd758 .param/l "INST_SUBI" 3 25, C4<0110>;
P_0x8fcd76c .param/l "INST_SW" 3 23, C4<0100>;
P_0x8fcd780 .param/l "INST_SWI" 3 28, C4<1001>;
P_0x8fcd794 .param/l "LOADER_NUM" 3 37, +C4<011>;
P_0x8fcd7a8 .param/l "MEM_SIZE" 3 2, +C4<010000000000>;
P_0x8fcd7bc .param/l "MULTER_NUM" 3 36, +C4<010>;
P_0x8fcd7d0 .param/l "MUL_STALL" 3 43, +C4<011>;
P_0x8fcd7e4 .param/l "OPCODE_WIDTH" 3 15, +C4<0100>;
P_0x8fcd7f8 .param/l "RB_INDEX" 3 47, +C4<0100>;
P_0x8fcd80c .param/l "RB_SIZE" 3 46, +C4<010000>;
P_0x8fcd820 .param/l "RD_START" 3 17, +C4<010110>;
P_0x8fcd834 .param/l "READY" 3 41, +C4<01111>;
P_0x8fcd848 .param/l "REG_FILE_SIZE" 3 4, +C4<0100000>;
P_0x8fcd85c .param/l "REG_INDEX" 3 3, +C4<0101>;
P_0x8fcd870 .param/l "RS_START" 3 16, +C4<011011>;
P_0x8fcd884 .param/l "RT_START" 3 18, +C4<010001>;
P_0x8fcd898 .param/l "STORER_NUM" 3 38, +C4<010>;
P_0x8fcd8ac .param/l "TAG_SIZE" 3 8, +C4<010010>;
P_0x8fcd8c0 .param/l "WORD_SIZE" 3 1, +C4<0100000>;
P_0x8fcd8d4 .param/l "fuindex" 6 5, +C4<0>;
v0x8fcefb8_0 .alias "CDB_data_data", 511 0, v0x8fd4948_0;
v0x8fcf018_0 .var "CDB_data_data_out", 511 0;
v0x8fcf068_0 .alias "CDB_data_valid", 15 0, v0x8fd4998_0;
v0x8fcf0f0_0 .var "CDB_data_valid_out", 15 0;
v0x8fcf158_0 .var "Qj", 3 0;
v0x8fcf1a8_0 .var "Qk", 3 0;
v0x8fcf208_0 .alias "RB_index", 3 0, v0x8fd49e8_0;
v0x8fcf258_0 .var "Vj", 31 0;
v0x8fcf2d0_0 .var "Vk", 31 0;
v0x8fcf330_0 .net *"_s3", 0 0, v0x8fcf3c0_0; 1 drivers
v0x8fcf3c0_0 .var "busy", 0 0;
v0x8fcf420_0 .alias "busy_out", 9 0, v0x8fd4c38_0;
v0x8fcf4a8_0 .alias "clk", 0 0, v0x8fd4038_0;
v0x8fcf518_0 .var "dest", 3 0;
v0x8fcf5a8_0 .alias "fu", 3 0, v0x8fd4a38_0;
v0x8fcf618_0 .alias "inst", 31 0, v0x8fd4a88_0;
v0x8fcf6d0_0 .var "op", 3 0;
v0x8fcf720_0 .alias "qj", 3 0, v0x8fd4fd0_0;
v0x8fcf7c0_0 .alias "qk", 3 0, v0x8fd5088_0;
v0x8fcf810_0 .var "reg_numj", 4 0;
v0x8fcf8b8_0 .var "reg_numk", 4 0;
v0x8fcf908_0 .alias "reset", 0 0, v0x8fd42d0_0;
v0x8fcf9b8_0 .alias "vj", 31 0, v0x8fd5300_0;
v0x8fcfa08_0 .alias "vk", 31 0, v0x8fd5298_0;
L_0x8fd5b28 .part/pv v0x8fcf3c0_0, 0, 1, 10;
S_0x8fced58 .scope task, "checkAndGetData" "checkAndGetData" 6 139, 6 139, S_0x8fcd558;
 .timescale -9 -10;
v0x8fcedd8_0 .var "CDB_data_data", 511 0;
v0x8fcee48_0 .var "CDB_data_valid", 15 0;
v0x8fceea8_0 .var "Q", 3 0;
v0x8fcef08_0 .var "V", 31 0;
v0x8fcef58_0 .var "ok", 0 0;
TD_CPU.alu_rs\x5B1\x5D.checkAndGetData ;
    %load/v 8, v0x8fcee48_0, 16;
    %set/v v0x8fce260_0, 8, 16;
    %load/v 8, v0x8fceea8_0, 4;
    %set/v v0x8fce2d0_0, 8, 4;
    %fork TD_CPU.alu_rs\x5B1\x5D.readValidBus, S_0x8fce1e0;
    %join;
    %load/v  8, v0x8fce330_0, 1;
    %jmp/0xz  T_6.6, 8;
    %load/v 8, v0x8fcedd8_0, 512;
    %set/v v0x8fce410_0, 8, 512;
    %load/v 8, v0x8fceea8_0, 4;
    %set/v v0x8fce480_0, 8, 4;
    %fork TD_CPU.alu_rs\x5B1\x5D.readDataBus, S_0x8fce390;
    %join;
    %load/v  8, v0x8fce4e0_0, 32;
    %set/v v0x8fcef08_0, 8, 32;
    %jmp T_6.7;
T_6.6 ;
    %set/v v0x8fcef58_0, 0, 1;
T_6.7 ;
    %end;
S_0x8fcea78 .scope task, "getData" "getData" 6 104, 6 104, S_0x8fcd558;
 .timescale -9 -10;
v0x8fceaf8_0 .var "CDB_data_data", 511 0;
v0x8fceb68_0 .var "CDB_data_valid", 15 0;
v0x8fcebc8_0 .var "Q", 3 0;
v0x8fcec28_0 .var "V", 31 0;
v0x8fcec78_0 .var "q", 3 0;
v0x8fcecd8_0 .var "v", 31 0;
TD_CPU.alu_rs\x5B1\x5D.getData ;
    %load/v 8, v0x8fcec78_0, 4;
    %mov 12, 0, 2;
    %cmpi/u 8, 15, 6;
    %jmp/0xz  T_7.8, 4;
    %load/v 8, v0x8fcecd8_0, 32;
    %ix/load 0, 32, 0;
    %assign/v0 v0x8fcec28_0, 0, 8;
    %movi 8, 15, 5;
    %ix/load 0, 4, 0;
    %assign/v0 v0x8fcebc8_0, 0, 8;
    %jmp T_7.9;
T_7.8 ;
    %load/v 8, v0x8fceb68_0, 16;
    %set/v v0x8fce260_0, 8, 16;
    %load/v 8, v0x8fcec78_0, 4;
    %set/v v0x8fce2d0_0, 8, 4;
    %fork TD_CPU.alu_rs\x5B1\x5D.readValidBus, S_0x8fce1e0;
    %join;
    %load/v  8, v0x8fce330_0, 1;
    %jmp/0xz  T_7.10, 8;
    %load/v 8, v0x8fceaf8_0, 512;
    %set/v v0x8fce410_0, 8, 512;
    %load/v 8, v0x8fcec78_0, 4;
    %set/v v0x8fce480_0, 8, 4;
    %fork TD_CPU.alu_rs\x5B1\x5D.readDataBus, S_0x8fce390;
    %join;
    %load/v  8, v0x8fce4e0_0, 32;
    %ix/load 0, 32, 0;
    %assign/v0 v0x8fcec28_0, 0, 8;
    %movi 8, 15, 5;
    %ix/load 0, 4, 0;
    %assign/v0 v0x8fcebc8_0, 0, 8;
    %jmp T_7.11;
T_7.10 ;
    %load/v 8, v0x8fcec78_0, 4;
    %ix/load 0, 4, 0;
    %assign/v0 v0x8fcebc8_0, 0, 8;
T_7.11 ;
T_7.9 ;
    %end;
S_0x8fce7a0 .scope task, "writeData" "writeData" 6 89, 6 89, S_0x8fcd558;
 .timescale -9 -10;
v0x8fce820_0 .var "FF", 31 0;
v0x8fce890_0 .var "data", 31 0;
v0x8fce8f0_0 .var "dataBus", 511 0;
v0x8fce950_0 .var "dest", 3 0;
v0x8fce9b8_0 .var "longData", 511 0;
v0x8fcea18_0 .var "mask", 511 0;
TD_CPU.alu_rs\x5B1\x5D.writeData ;
    %set/v v0x8fce820_0, 1, 32;
    %load/v 8, v0x8fce820_0, 32;
    %mov 40, 0, 480;
    %load/v 520, v0x8fce950_0, 4;
    %movi 524, 0, 7;
    %muli 520, 32, 11;
    %ix/get 0, 520, 11;
    %shiftl/i0  8, 512;
    %inv 8, 512;
    %set/v v0x8fcea18_0, 8, 512;
    %load/v 8, v0x8fce890_0, 32;
    %mov 40, 0, 480;
    %load/v 520, v0x8fce950_0, 4;
    %movi 524, 0, 7;
    %muli 520, 32, 11;
    %ix/get 0, 520, 11;
    %shiftl/i0  8, 512;
    %set/v v0x8fce9b8_0, 8, 512;
    %load/v 8, v0x8fce8f0_0, 512;
    %load/v 520, v0x8fcea18_0, 512;
    %and 8, 520, 512;
    %load/v 520, v0x8fce9b8_0, 512;
    %or 8, 520, 512;
    %set/v v0x8fce8f0_0, 8, 512;
    %end;
S_0x8fce540 .scope task, "writeValid" "writeValid" 6 76, 6 76, S_0x8fcd558;
 .timescale -9 -10;
v0x8fce5c0_0 .var "data", 0 0;
v0x8fce630_0 .var "dest", 3 0;
v0x8fce690_0 .var "longData", 3 0;
v0x8fce6f0_0 .var "mask", 3 0;
v0x8fce740_0 .var "validBus", 15 0;
TD_CPU.alu_rs\x5B1\x5D.writeValid ;
    %movi 8, 1, 4;
    %ix/getv 0, v0x8fce630_0;
    %shiftl/i0  8, 4;
    %inv 8, 4;
    %set/v v0x8fce6f0_0, 8, 4;
    %load/v 8, v0x8fce5c0_0, 1;
    %mov 9, 0, 3;
    %load/v 12, v0x8fce630_0, 4;
    %ix/get 0, 12, 4;
    %shiftl/i0  8, 4;
    %set/v v0x8fce690_0, 8, 4;
    %load/v 8, v0x8fce690_0, 4;
    %mov 12, 0, 12;
    %load/v 24, v0x8fce6f0_0, 4;
    %mov 28, 0, 12;
    %load/v 40, v0x8fce740_0, 16;
    %and 24, 40, 16;
    %or 8, 24, 16;
    %set/v v0x8fce740_0, 8, 16;
    %end;
S_0x8fce390 .scope function, "readDataBus" "readDataBus" 6 123, 6 123, S_0x8fcd558;
 .timescale -9 -10;
v0x8fce410_0 .var "CDB_data_data", 511 0;
v0x8fce480_0 .var "index", 3 0;
v0x8fce4e0_0 .var "readDataBus", 31 0;
TD_CPU.alu_rs\x5B1\x5D.readDataBus ;
    %load/v 8, v0x8fce410_0, 512;
    %load/v 520, v0x8fce480_0, 4;
    %movi 524, 0, 7;
    %muli 520, 32, 11;
    %ix/get 0, 520, 11;
    %shiftr/i0  8, 512;
    %set/v v0x8fce4e0_0, 8, 32;
    %end;
S_0x8fce1e0 .scope function, "readValidBus" "readValidBus" 6 131, 6 131, S_0x8fcd558;
 .timescale -9 -10;
v0x8fce260_0 .var "CDB_data_valid", 15 0;
v0x8fce2d0_0 .var "index", 3 0;
v0x8fce330_0 .var "readValidBus", 0 0;
TD_CPU.alu_rs\x5B1\x5D.readValidBus ;
    %load/v 8, v0x8fce260_0, 16;
    %load/v 24, v0x8fce2d0_0, 4;
    %ix/get 0, 24, 4;
    %shiftr/i0  8, 16;
    %set/v v0x8fce330_0, 8, 1;
    %end;
S_0x8fce160 .scope begin, "checkIssue" "checkIssue" 6 38, 6 38, S_0x8fcd558;
 .timescale -9 -10;
S_0x8fce080 .scope begin, "execute" "execute" 6 52, 6 52, S_0x8fcd558;
 .timescale -9 -10;
v0x8fce100_0 .var "ok", 0 0;
S_0x8fa3560 .scope module, "alu_rs[2]" "ALU_RS" 2 43, 6 1, S_0x8fa45a0;
 .timescale -9 -10;
P_0x8fa714c .param/l "ADDER_NUM" 3 35, +C4<011>;
P_0x8fa7160 .param/l "ALU_ADD" 3 10, C4<0000>;
P_0x8fa7174 .param/l "ALU_MUL" 3 12, C4<0010>;
P_0x8fa7188 .param/l "ALU_SUB" 3 11, C4<0001>;
P_0x8fa719c .param/l "BLOCK_SIZE" 3 6, +C4<010000>;
P_0x8fa71b0 .param/l "CACHE_SIZE" 3 7, +C4<010000000000>;
P_0x8fa71c4 .param/l "FU_INDEX" 3 40, +C4<0100>;
P_0x8fa71d8 .param/l "FU_NUM" 3 39, +C4<01010>;
P_0x8fa71ec .param/l "INST_ADD" 3 19, C4<0000>;
P_0x8fa7200 .param/l "INST_ADDI" 3 24, C4<0101>;
P_0x8fa7214 .param/l "INST_BGE" 3 32, C4<1101>;
P_0x8fa7228 .param/l "INST_J" 3 30, C4<1011>;
P_0x8fa723c .param/l "INST_JR" 3 31, C4<1100>;
P_0x8fa7250 .param/l "INST_LI" 3 29, C4<1010>;
P_0x8fa7264 .param/l "INST_LW" 3 22, C4<0011>;
P_0x8fa7278 .param/l "INST_LWI" 3 27, C4<1000>;
P_0x8fa728c .param/l "INST_MUL" 3 21, C4<0010>;
P_0x8fa72a0 .param/l "INST_MULI" 3 26, C4<0111>;
P_0x8fa72b4 .param/l "INST_SUB" 3 20, C4<0001>;
P_0x8fa72c8 .param/l "INST_SUBI" 3 25, C4<0110>;
P_0x8fa72dc .param/l "INST_SW" 3 23, C4<0100>;
P_0x8fa72f0 .param/l "INST_SWI" 3 28, C4<1001>;
P_0x8fa7304 .param/l "LOADER_NUM" 3 37, +C4<011>;
P_0x8fa7318 .param/l "MEM_SIZE" 3 2, +C4<010000000000>;
P_0x8fa732c .param/l "MULTER_NUM" 3 36, +C4<010>;
P_0x8fa7340 .param/l "MUL_STALL" 3 43, +C4<011>;
P_0x8fa7354 .param/l "OPCODE_WIDTH" 3 15, +C4<0100>;
P_0x8fa7368 .param/l "RB_INDEX" 3 47, +C4<0100>;
P_0x8fa737c .param/l "RB_SIZE" 3 46, +C4<010000>;
P_0x8fa7390 .param/l "RD_START" 3 17, +C4<010110>;
P_0x8fa73a4 .param/l "READY" 3 41, +C4<01111>;
P_0x8fa73b8 .param/l "REG_FILE_SIZE" 3 4, +C4<0100000>;
P_0x8fa73cc .param/l "REG_INDEX" 3 3, +C4<0101>;
P_0x8fa73e0 .param/l "RS_START" 3 16, +C4<011011>;
P_0x8fa73f4 .param/l "RT_START" 3 18, +C4<010001>;
P_0x8fa7408 .param/l "STORER_NUM" 3 38, +C4<010>;
P_0x8fa741c .param/l "TAG_SIZE" 3 8, +C4<010010>;
P_0x8fa7430 .param/l "WORD_SIZE" 3 1, +C4<0100000>;
P_0x8fa7444 .param/l "fuindex" 6 5, +C4<0>;
v0x8fcca58_0 .alias "CDB_data_data", 511 0, v0x8fd4948_0;
v0x8fccac8_0 .var "CDB_data_data_out", 511 0;
v0x8fccb38_0 .alias "CDB_data_valid", 15 0, v0x8fd4998_0;
v0x8fccb88_0 .var "CDB_data_valid_out", 15 0;
v0x8fccc10_0 .var "Qj", 3 0;
v0x8fccc60_0 .var "Qk", 3 0;
v0x8fcccd0_0 .alias "RB_index", 3 0, v0x8fd49e8_0;
v0x8fccd30_0 .var "Vj", 31 0;
v0x8fccdb8_0 .var "Vk", 31 0;
v0x8fcce18_0 .net *"_s3", 0 0, v0x8fccea8_0; 1 drivers
v0x8fccea8_0 .var "busy", 0 0;
v0x8fccf08_0 .alias "busy_out", 9 0, v0x8fd4c38_0;
v0x8fccfa0_0 .alias "clk", 0 0, v0x8fd4038_0;
v0x8fcd000_0 .var "dest", 3 0;
v0x8fcd0a0_0 .alias "fu", 3 0, v0x8fd4a38_0;
v0x8fcd100_0 .alias "inst", 31 0, v0x8fd4a88_0;
v0x8fcd1a8_0 .var "op", 3 0;
v0x8fcd208_0 .alias "qj", 3 0, v0x8fd4fd0_0;
v0x8fcd2a8_0 .alias "qk", 3 0, v0x8fd5088_0;
v0x8fcd2f8_0 .var "reg_numj", 4 0;
v0x8fcd258_0 .var "reg_numk", 4 0;
v0x8fcd3a0_0 .alias "reset", 0 0, v0x8fd42d0_0;
v0x8fcd450_0 .alias "vj", 31 0, v0x8fd5300_0;
v0x8fcd4a0_0 .alias "vk", 31 0, v0x8fd5298_0;
E_0x8fa3258/0 .event edge, v0x8fcd3a0_0;
E_0x8fa3258/1 .event posedge, v0x8fccfa0_0;
E_0x8fa3258 .event/or E_0x8fa3258/0, E_0x8fa3258/1;
L_0x8fd5be8 .part/pv v0x8fccea8_0, 0, 1, 10;
S_0x8fcc7f8 .scope task, "checkAndGetData" "checkAndGetData" 6 139, 6 139, S_0x8fa3560;
 .timescale -9 -10;
v0x8fcc878_0 .var "CDB_data_data", 511 0;
v0x8fcc8e8_0 .var "CDB_data_valid", 15 0;
v0x8fcc948_0 .var "Q", 3 0;
v0x8fcc9a8_0 .var "V", 31 0;
v0x8fcc9f8_0 .var "ok", 0 0;
TD_CPU.alu_rs\x5B2\x5D.checkAndGetData ;
    %load/v 8, v0x8fcc8e8_0, 16;
    %set/v v0x8fcbcc8_0, 8, 16;
    %load/v 8, v0x8fcc948_0, 4;
    %set/v v0x8fcbd38_0, 8, 4;
    %fork TD_CPU.alu_rs\x5B2\x5D.readValidBus, S_0x8fcbc48;
    %join;
    %load/v  8, v0x8fcbd98_0, 1;
    %jmp/0xz  T_12.12, 8;
    %load/v 8, v0x8fcc878_0, 512;
    %set/v v0x8fcbe78_0, 8, 512;
    %load/v 8, v0x8fcc948_0, 4;
    %set/v v0x8fcbee8_0, 8, 4;
    %fork TD_CPU.alu_rs\x5B2\x5D.readDataBus, S_0x8fcbdf8;
    %join;
    %load/v  8, v0x8fcbf48_0, 32;
    %set/v v0x8fcc9a8_0, 8, 32;
    %jmp T_12.13;
T_12.12 ;
    %set/v v0x8fcc9f8_0, 0, 1;
T_12.13 ;
    %end;
S_0x8fcc518 .scope task, "getData" "getData" 6 104, 6 104, S_0x8fa3560;
 .timescale -9 -10;
v0x8fcc598_0 .var "CDB_data_data", 511 0;
v0x8fcc608_0 .var "CDB_data_valid", 15 0;
v0x8fcc668_0 .var "Q", 3 0;
v0x8fcc6c8_0 .var "V", 31 0;
v0x8fcc718_0 .var "q", 3 0;
v0x8fcc778_0 .var "v", 31 0;
TD_CPU.alu_rs\x5B2\x5D.getData ;
    %load/v 8, v0x8fcc718_0, 4;
    %mov 12, 0, 2;
    %cmpi/u 8, 15, 6;
    %jmp/0xz  T_13.14, 4;
    %load/v 8, v0x8fcc778_0, 32;
    %ix/load 0, 32, 0;
    %assign/v0 v0x8fcc6c8_0, 0, 8;
    %movi 8, 15, 5;
    %ix/load 0, 4, 0;
    %assign/v0 v0x8fcc668_0, 0, 8;
    %jmp T_13.15;
T_13.14 ;
    %load/v 8, v0x8fcc608_0, 16;
    %set/v v0x8fcbcc8_0, 8, 16;
    %load/v 8, v0x8fcc718_0, 4;
    %set/v v0x8fcbd38_0, 8, 4;
    %fork TD_CPU.alu_rs\x5B2\x5D.readValidBus, S_0x8fcbc48;
    %join;
    %load/v  8, v0x8fcbd98_0, 1;
    %jmp/0xz  T_13.16, 8;
    %load/v 8, v0x8fcc598_0, 512;
    %set/v v0x8fcbe78_0, 8, 512;
    %load/v 8, v0x8fcc718_0, 4;
    %set/v v0x8fcbee8_0, 8, 4;
    %fork TD_CPU.alu_rs\x5B2\x5D.readDataBus, S_0x8fcbdf8;
    %join;
    %load/v  8, v0x8fcbf48_0, 32;
    %ix/load 0, 32, 0;
    %assign/v0 v0x8fcc6c8_0, 0, 8;
    %movi 8, 15, 5;
    %ix/load 0, 4, 0;
    %assign/v0 v0x8fcc668_0, 0, 8;
    %jmp T_13.17;
T_13.16 ;
    %load/v 8, v0x8fcc718_0, 4;
    %ix/load 0, 4, 0;
    %assign/v0 v0x8fcc668_0, 0, 8;
T_13.17 ;
T_13.15 ;
    %end;
S_0x8fcc220 .scope task, "writeData" "writeData" 6 89, 6 89, S_0x8fa3560;
 .timescale -9 -10;
v0x8fcc2a0_0 .var "FF", 31 0;
v0x8fcc310_0 .var "data", 31 0;
v0x8fcc370_0 .var "dataBus", 511 0;
v0x8fcc3d0_0 .var "dest", 3 0;
v0x8fcc438_0 .var "longData", 511 0;
v0x8fcc498_0 .var "mask", 511 0;
TD_CPU.alu_rs\x5B2\x5D.writeData ;
    %set/v v0x8fcc2a0_0, 1, 32;
    %load/v 8, v0x8fcc2a0_0, 32;
    %mov 40, 0, 480;
    %load/v 520, v0x8fcc3d0_0, 4;
    %movi 524, 0, 7;
    %muli 520, 32, 11;
    %ix/get 0, 520, 11;
    %shiftl/i0  8, 512;
    %inv 8, 512;
    %set/v v0x8fcc498_0, 8, 512;
    %load/v 8, v0x8fcc310_0, 32;
    %mov 40, 0, 480;
    %load/v 520, v0x8fcc3d0_0, 4;
    %movi 524, 0, 7;
    %muli 520, 32, 11;
    %ix/get 0, 520, 11;
    %shiftl/i0  8, 512;
    %set/v v0x8fcc438_0, 8, 512;
    %load/v 8, v0x8fcc370_0, 512;
    %load/v 520, v0x8fcc498_0, 512;
    %and 8, 520, 512;
    %load/v 520, v0x8fcc438_0, 512;
    %or 8, 520, 512;
    %set/v v0x8fcc370_0, 8, 512;
    %end;
S_0x8fcbfa8 .scope task, "writeValid" "writeValid" 6 76, 6 76, S_0x8fa3560;
 .timescale -9 -10;
v0x8fcc028_0 .var "data", 0 0;
v0x8fcc098_0 .var "dest", 3 0;
v0x8fcc0f8_0 .var "longData", 3 0;
v0x8fcc158_0 .var "mask", 3 0;
v0x8fcc1c0_0 .var "validBus", 15 0;
TD_CPU.alu_rs\x5B2\x5D.writeValid ;
    %movi 8, 1, 4;
    %ix/getv 0, v0x8fcc098_0;
    %shiftl/i0  8, 4;
    %inv 8, 4;
    %set/v v0x8fcc158_0, 8, 4;
    %load/v 8, v0x8fcc028_0, 1;
    %mov 9, 0, 3;
    %load/v 12, v0x8fcc098_0, 4;
    %ix/get 0, 12, 4;
    %shiftl/i0  8, 4;
    %set/v v0x8fcc0f8_0, 8, 4;
    %load/v 8, v0x8fcc0f8_0, 4;
    %mov 12, 0, 12;
    %load/v 24, v0x8fcc158_0, 4;
    %mov 28, 0, 12;
    %load/v 40, v0x8fcc1c0_0, 16;
    %and 24, 40, 16;
    %or 8, 24, 16;
    %set/v v0x8fcc1c0_0, 8, 16;
    %end;
S_0x8fcbdf8 .scope function, "readDataBus" "readDataBus" 6 123, 6 123, S_0x8fa3560;
 .timescale -9 -10;
v0x8fcbe78_0 .var "CDB_data_data", 511 0;
v0x8fcbee8_0 .var "index", 3 0;
v0x8fcbf48_0 .var "readDataBus", 31 0;
TD_CPU.alu_rs\x5B2\x5D.readDataBus ;
    %load/v 8, v0x8fcbe78_0, 512;
    %load/v 520, v0x8fcbee8_0, 4;
    %movi 524, 0, 7;
    %muli 520, 32, 11;
    %ix/get 0, 520, 11;
    %shiftr/i0  8, 512;
    %set/v v0x8fcbf48_0, 8, 32;
    %end;
S_0x8fcbc48 .scope function, "readValidBus" "readValidBus" 6 131, 6 131, S_0x8fa3560;
 .timescale -9 -10;
v0x8fcbcc8_0 .var "CDB_data_valid", 15 0;
v0x8fcbd38_0 .var "index", 3 0;
v0x8fcbd98_0 .var "readValidBus", 0 0;
TD_CPU.alu_rs\x5B2\x5D.readValidBus ;
    %load/v 8, v0x8fcbcc8_0, 16;
    %load/v 24, v0x8fcbd38_0, 4;
    %ix/get 0, 24, 4;
    %shiftr/i0  8, 16;
    %set/v v0x8fcbd98_0, 8, 1;
    %end;
S_0x8fcbbc8 .scope begin, "checkIssue" "checkIssue" 6 38, 6 38, S_0x8fa3560;
 .timescale -9 -10;
S_0x8fa3c90 .scope begin, "execute" "execute" 6 52, 6 52, S_0x8fa3560;
 .timescale -9 -10;
v0x8f8ace8_0 .var "ok", 0 0;
    .scope S_0x8fd2cc0;
T_18 ;
    %wait E_0x8fa3258;
    %load/v 8, v0x8fd3d10_0, 1;
    %jmp/0xz  T_18.0, 8;
    %set/v v0x8fd3b08_0, 0, 6;
T_18.2 ;
    %load/v 8, v0x8fd3b08_0, 6;
    %mov 14, 0, 2;
   %cmpi/u 8, 32, 8;
    %jmp/0xz T_18.3, 5;
    %ix/getv 3, v0x8fd3b08_0;
    %jmp/1 t_0, 4;
    %ix/load 0, 32, 0; word width
    %ix/load 1, 0, 0; part off
    %assign/av v0x8fd3cc0, 0, 0;
t_0 ;
    %load/v 8, v0x8fd3b08_0, 6;
    %mov 14, 0, 26;
    %addi 8, 1, 32;
    %set/v v0x8fd3b08_0, 8, 6;
    %jmp T_18.2;
T_18.3 ;
    %jmp T_18.1;
T_18.0 ;
    %load/v 8, v0x8fd3d60_0, 1;
    %jmp/0xz  T_18.4, 8;
    %load/v 8, v0x8fd3e60_0, 32;
    %ix/getv 3, v0x8fd3e00_0;
    %jmp/1 t_1, 4;
    %ix/load 0, 32, 0; word width
    %ix/load 1, 0, 0; part off
    %assign/av v0x8fd3cc0, 0, 8;
t_1 ;
T_18.4 ;
T_18.1 ;
    %jmp T_18;
    .thread T_18;
    .scope S_0x8fd2210;
T_19 ;
    %wait E_0x8fa3258;
    %fork t_3, S_0x8fd2bd0;
    %jmp t_2;
    .scope S_0x8fd2bd0;
t_3 ;
    %load/v 8, v0x8fd42d0_0, 1;
    %jmp/0xz  T_19.0, 8;
    %set/v v0x8fd2c50_0, 0, 32;
T_19.2 ;
    %load/v 8, v0x8fd2c50_0, 32;
   %cmpi/u 8, 32, 32;
    %jmp/0xz T_19.3, 5;
    %movi 8, 15, 5;
    %ix/getv 3, v0x8fd2c50_0;
   %jmp/1 t_4, 4;
   %ix/load 1, 0, 0;
   %set/av v0x8fd4478, 8, 4;
t_4 ;
    %ix/load 0, 1, 0;
    %load/vp0 8, v0x8fd2c50_0, 32;
    %set/v v0x8fd2c50_0, 8, 32;
    %jmp T_19.2;
T_19.3 ;
    %jmp T_19.1;
T_19.0 ;
    %load/v 8, v0x8fd4850_0, 1;
    %jmp/0xz  T_19.4, 8;
    %load/v 8, v0x8fd4800_0, 4;
    %ix/getv 3, v0x8fd48a0_0;
    %jmp/1 t_5, 4;
    %ix/load 0, 4, 0; word width
    %ix/load 1, 0, 0; part off
    %assign/av v0x8fd4478, 0, 8;
t_5 ;
T_19.4 ;
T_19.1 ;
    %end;
    .scope S_0x8fd2210;
t_2 %join;
    %jmp T_19;
    .thread T_19;
    .scope S_0x8fcfac0;
T_20 ;
    %wait E_0x8fa3258;
    %load/v 8, v0x8fd1f50_0, 1;
    %jmp/0xz  T_20.0, 8;
    %ix/load 0, 1, 0;
    %assign/v0 v0x8fd19a0_0, 0, 0;
    %jmp T_20.1;
T_20.0 ;
    %load/v 8, v0x8fd19a0_0, 1;
    %inv 8, 1;
    %jmp/0xz  T_20.2, 8;
    %fork t_7, S_0x8fd0678;
    %jmp t_6;
    .scope S_0x8fd0678;
t_7 ;
    %delay 1, 0;
    %load/v 8, v0x8fd1b78_0, 4;
    %mov 12, 0, 1;
    %cmpi/u 8, 0, 5;
    %jmp/0xz  T_20.4, 4;
    %ix/load 0, 1, 0;
    %assign/v0 v0x8fd19a0_0, 0, 1;
    %load/v 8, v0x8fd17d8_0, 4;
    %ix/load 0, 4, 0;
    %assign/v0 v0x8fd1ad8_0, 0, 8;
    %ix/load 1, 28, 0;
    %mov 4, 0, 1;
    %jmp/1 T_20.6, 4;
    %load/x1p 8, v0x8fd1bc8_0, 4;
    %jmp T_20.7;
T_20.6 ;
    %mov 8, 2, 4;
T_20.7 ;
; Save base=8 wid=4 in lookaside.
    %ix/load 0, 4, 0;
    %assign/v0 v0x8fd1c98_0, 0, 8;
    %ix/load 1, 23, 0;
    %mov 4, 0, 1;
    %jmp/1 T_20.8, 4;
    %load/x1p 8, v0x8fd1bc8_0, 5;
    %jmp T_20.9;
T_20.8 ;
    %mov 8, 2, 5;
T_20.9 ;
; Save base=8 wid=5 in lookaside.
    %set/v v0x8fd1e20_0, 8, 5;
    %ix/load 1, 13, 0;
    %mov 4, 0, 1;
    %jmp/1 T_20.10, 4;
    %load/x1p 8, v0x8fd1bc8_0, 5;
    %jmp T_20.11;
T_20.10 ;
    %mov 8, 2, 5;
T_20.11 ;
; Save base=8 wid=5 in lookaside.
    %set/v v0x8fd1ec8_0, 8, 5;
    %load/v 8, v0x8fd2000_0, 32;
    %set/v v0x8fd11f0_0, 8, 32;
    %load/v 8, v0x8fd1cf8_0, 4;
    %set/v v0x8fd1190_0, 8, 4;
    %load/v 8, v0x8fd14d0_0, 512;
    %set/v v0x8fd1010_0, 8, 512;
    %load/v 8, v0x8fd15e8_0, 16;
    %set/v v0x8fd1080_0, 8, 16;
    %fork TD_CPU.alu_rs\x5B0\x5D.getData, S_0x8fd0f90;
    %join;
    %load/v 8, v0x8fd1140_0, 32;
    %set/v v0x8fd1828_0, 8, 32;
    %load/v 8, v0x8fd10e0_0, 4;
    %set/v v0x8fd1708_0, 8, 4;
    %load/v 8, v0x8fd2088_0, 32;
    %set/v v0x8fd11f0_0, 8, 32;
    %load/v 8, v0x8fd1d98_0, 4;
    %set/v v0x8fd1190_0, 8, 4;
    %load/v 8, v0x8fd14d0_0, 512;
    %set/v v0x8fd1010_0, 8, 512;
    %load/v 8, v0x8fd15e8_0, 16;
    %set/v v0x8fd1080_0, 8, 16;
    %fork TD_CPU.alu_rs\x5B0\x5D.getData, S_0x8fd0f90;
    %join;
    %load/v 8, v0x8fd1140_0, 32;
    %set/v v0x8fd18b0_0, 8, 32;
    %load/v 8, v0x8fd10e0_0, 4;
    %set/v v0x8fd1758_0, 8, 4;
    %load/v 8, v0x8fd17d8_0, 4;
    %set/v v0x8fd0b48_0, 8, 4;
    %set/v v0x8fd0ad8_0, 0, 1;
    %fork TD_CPU.alu_rs\x5B0\x5D.writeValid, S_0x8fd0a58;
    %join;
    %load/v 8, v0x8fd0c58_0, 16;
    %set/v v0x8fd16a0_0, 8, 16;
T_20.4 ;
    %end;
    .scope S_0x8fcfac0;
t_6 %join;
    %jmp T_20.3;
T_20.2 ;
    %fork t_9, S_0x8fd0598;
    %jmp t_8;
    .scope S_0x8fd0598;
t_9 ;
    %set/v v0x8fd0618_0, 1, 1;
    %load/v 8, v0x8fd1708_0, 4;
    %set/v v0x8fd13c0_0, 8, 4;
    %load/v 8, v0x8fd14d0_0, 512;
    %set/v v0x8fd12f0_0, 8, 512;
    %load/v 8, v0x8fd15e8_0, 16;
    %set/v v0x8fd1360_0, 8, 16;
    %fork TD_CPU.alu_rs\x5B0\x5D.checkAndGetData, S_0x8fd1270;
    %join;
    %load/v 8, v0x8fd1420_0, 32;
    %set/v v0x8fd1828_0, 8, 32;
    %load/v 8, v0x8fd1470_0, 1;
    %set/v v0x8fd0618_0, 8, 1;
    %load/v 8, v0x8fd1758_0, 4;
    %set/v v0x8fd13c0_0, 8, 4;
    %load/v 8, v0x8fd14d0_0, 512;
    %set/v v0x8fd12f0_0, 8, 512;
    %load/v 8, v0x8fd15e8_0, 16;
    %set/v v0x8fd1360_0, 8, 16;
    %fork TD_CPU.alu_rs\x5B0\x5D.checkAndGetData, S_0x8fd1270;
    %join;
    %load/v 8, v0x8fd1420_0, 32;
    %set/v v0x8fd18b0_0, 8, 32;
    %load/v 8, v0x8fd1470_0, 1;
    %set/v v0x8fd0618_0, 8, 1;
    %load/v 8, v0x8fd0618_0, 1;
    %jmp/0xz  T_20.12, 8;
    %load/v 8, v0x8fd1c98_0, 4;
    %cmpi/u 8, 1, 4;
    %jmp/1 T_20.14, 6;
    %cmpi/u 8, 0, 4;
    %jmp/1 T_20.15, 6;
    %cmpi/u 8, 2, 4;
    %jmp/1 T_20.16, 6;
    %jmp T_20.17;
T_20.14 ;
    %delay 5, 0;
    %load/v 8, v0x8fd1ad8_0, 4;
    %set/v v0x8fd0b48_0, 8, 4;
    %set/v v0x8fd0ad8_0, 1, 1;
    %fork TD_CPU.alu_rs\x5B0\x5D.writeValid, S_0x8fd0a58;
    %join;
    %load/v 8, v0x8fd0c58_0, 16;
    %set/v v0x8fd16a0_0, 8, 16;
    %load/v 8, v0x8fd1ad8_0, 4;
    %set/v v0x8fd0e68_0, 8, 4;
    %load/v 8, v0x8fd1828_0, 32;
    %load/v 40, v0x8fd18b0_0, 32;
    %sub 8, 40, 32;
    %set/v v0x8fd0da8_0, 8, 32;
    %fork TD_CPU.alu_rs\x5B0\x5D.writeData, S_0x8fd0cb8;
    %join;
    %load/v 8, v0x8fd0e08_0, 512;
    %set/v v0x8fd1598_0, 8, 512;
    %jmp T_20.17;
T_20.15 ;
    %delay 5, 0;
    %load/v 8, v0x8fd1ad8_0, 4;
    %set/v v0x8fd0b48_0, 8, 4;
    %set/v v0x8fd0ad8_0, 1, 1;
    %fork TD_CPU.alu_rs\x5B0\x5D.writeValid, S_0x8fd0a58;
    %join;
    %load/v 8, v0x8fd0c58_0, 16;
    %set/v v0x8fd16a0_0, 8, 16;
    %load/v 8, v0x8fd1ad8_0, 4;
    %set/v v0x8fd0e68_0, 8, 4;
    %load/v 8, v0x8fd1828_0, 32;
    %load/v 40, v0x8fd18b0_0, 32;
    %add 8, 40, 32;
    %set/v v0x8fd0da8_0, 8, 32;
    %fork TD_CPU.alu_rs\x5B0\x5D.writeData, S_0x8fd0cb8;
    %join;
    %load/v 8, v0x8fd0e08_0, 512;
    %set/v v0x8fd1598_0, 8, 512;
    %jmp T_20.17;
T_20.16 ;
    %delay 35, 0;
    %load/v 8, v0x8fd1ad8_0, 4;
    %set/v v0x8fd0b48_0, 8, 4;
    %set/v v0x8fd0ad8_0, 1, 1;
    %fork TD_CPU.alu_rs\x5B0\x5D.writeValid, S_0x8fd0a58;
    %join;
    %load/v 8, v0x8fd0c58_0, 16;
    %set/v v0x8fd16a0_0, 8, 16;
    %load/v 8, v0x8fd1ad8_0, 4;
    %set/v v0x8fd0e68_0, 8, 4;
    %load/v 8, v0x8fd1828_0, 32;
    %load/v 40, v0x8fd18b0_0, 32;
    %mul 8, 40, 32;
    %set/v v0x8fd0da8_0, 8, 32;
    %fork TD_CPU.alu_rs\x5B0\x5D.writeData, S_0x8fd0cb8;
    %join;
    %load/v 8, v0x8fd0e08_0, 512;
    %set/v v0x8fd1598_0, 8, 512;
    %jmp T_20.17;
T_20.17 ;
T_20.12 ;
    %end;
    .scope S_0x8fcfac0;
t_8 %join;
T_20.3 ;
T_20.1 ;
    %jmp T_20;
    .thread T_20;
    .scope S_0x8fcd558;
T_21 ;
    %wait E_0x8fa3258;
    %load/v 8, v0x8fcf908_0, 1;
    %jmp/0xz  T_21.0, 8;
    %ix/load 0, 1, 0;
    %assign/v0 v0x8fcf3c0_0, 0, 0;
    %jmp T_21.1;
T_21.0 ;
    %load/v 8, v0x8fcf3c0_0, 1;
    %inv 8, 1;
    %jmp/0xz  T_21.2, 8;
    %fork t_11, S_0x8fce160;
    %jmp t_10;
    .scope S_0x8fce160;
t_11 ;
    %delay 1, 0;
    %load/v 8, v0x8fcf5a8_0, 4;
    %mov 12, 0, 1;
    %cmpi/u 8, 0, 5;
    %jmp/0xz  T_21.4, 4;
    %ix/load 0, 1, 0;
    %assign/v0 v0x8fcf3c0_0, 0, 1;
    %load/v 8, v0x8fcf208_0, 4;
    %ix/load 0, 4, 0;
    %assign/v0 v0x8fcf518_0, 0, 8;
    %ix/load 1, 28, 0;
    %mov 4, 0, 1;
    %jmp/1 T_21.6, 4;
    %load/x1p 8, v0x8fcf618_0, 4;
    %jmp T_21.7;
T_21.6 ;
    %mov 8, 2, 4;
T_21.7 ;
; Save base=8 wid=4 in lookaside.
    %ix/load 0, 4, 0;
    %assign/v0 v0x8fcf6d0_0, 0, 8;
    %ix/load 1, 23, 0;
    %mov 4, 0, 1;
    %jmp/1 T_21.8, 4;
    %load/x1p 8, v0x8fcf618_0, 5;
    %jmp T_21.9;
T_21.8 ;
    %mov 8, 2, 5;
T_21.9 ;
; Save base=8 wid=5 in lookaside.
    %set/v v0x8fcf810_0, 8, 5;
    %ix/load 1, 13, 0;
    %mov 4, 0, 1;
    %jmp/1 T_21.10, 4;
    %load/x1p 8, v0x8fcf618_0, 5;
    %jmp T_21.11;
T_21.10 ;
    %mov 8, 2, 5;
T_21.11 ;
; Save base=8 wid=5 in lookaside.
    %set/v v0x8fcf8b8_0, 8, 5;
    %load/v 8, v0x8fcf9b8_0, 32;
    %set/v v0x8fcecd8_0, 8, 32;
    %load/v 8, v0x8fcf720_0, 4;
    %set/v v0x8fcec78_0, 8, 4;
    %load/v 8, v0x8fcefb8_0, 512;
    %set/v v0x8fceaf8_0, 8, 512;
    %load/v 8, v0x8fcf068_0, 16;
    %set/v v0x8fceb68_0, 8, 16;
    %fork TD_CPU.alu_rs\x5B1\x5D.getData, S_0x8fcea78;
    %join;
    %load/v 8, v0x8fcec28_0, 32;
    %set/v v0x8fcf258_0, 8, 32;
    %load/v 8, v0x8fcebc8_0, 4;
    %set/v v0x8fcf158_0, 8, 4;
    %load/v 8, v0x8fcfa08_0, 32;
    %set/v v0x8fcecd8_0, 8, 32;
    %load/v 8, v0x8fcf7c0_0, 4;
    %set/v v0x8fcec78_0, 8, 4;
    %load/v 8, v0x8fcefb8_0, 512;
    %set/v v0x8fceaf8_0, 8, 512;
    %load/v 8, v0x8fcf068_0, 16;
    %set/v v0x8fceb68_0, 8, 16;
    %fork TD_CPU.alu_rs\x5B1\x5D.getData, S_0x8fcea78;
    %join;
    %load/v 8, v0x8fcec28_0, 32;
    %set/v v0x8fcf2d0_0, 8, 32;
    %load/v 8, v0x8fcebc8_0, 4;
    %set/v v0x8fcf1a8_0, 8, 4;
    %load/v 8, v0x8fcf208_0, 4;
    %set/v v0x8fce630_0, 8, 4;
    %set/v v0x8fce5c0_0, 0, 1;
    %fork TD_CPU.alu_rs\x5B1\x5D.writeValid, S_0x8fce540;
    %join;
    %load/v 8, v0x8fce740_0, 16;
    %set/v v0x8fcf0f0_0, 8, 16;
T_21.4 ;
    %end;
    .scope S_0x8fcd558;
t_10 %join;
    %jmp T_21.3;
T_21.2 ;
    %fork t_13, S_0x8fce080;
    %jmp t_12;
    .scope S_0x8fce080;
t_13 ;
    %set/v v0x8fce100_0, 1, 1;
    %load/v 8, v0x8fcf158_0, 4;
    %set/v v0x8fceea8_0, 8, 4;
    %load/v 8, v0x8fcefb8_0, 512;
    %set/v v0x8fcedd8_0, 8, 512;
    %load/v 8, v0x8fcf068_0, 16;
    %set/v v0x8fcee48_0, 8, 16;
    %fork TD_CPU.alu_rs\x5B1\x5D.checkAndGetData, S_0x8fced58;
    %join;
    %load/v 8, v0x8fcef08_0, 32;
    %set/v v0x8fcf258_0, 8, 32;
    %load/v 8, v0x8fcef58_0, 1;
    %set/v v0x8fce100_0, 8, 1;
    %load/v 8, v0x8fcf1a8_0, 4;
    %set/v v0x8fceea8_0, 8, 4;
    %load/v 8, v0x8fcefb8_0, 512;
    %set/v v0x8fcedd8_0, 8, 512;
    %load/v 8, v0x8fcf068_0, 16;
    %set/v v0x8fcee48_0, 8, 16;
    %fork TD_CPU.alu_rs\x5B1\x5D.checkAndGetData, S_0x8fced58;
    %join;
    %load/v 8, v0x8fcef08_0, 32;
    %set/v v0x8fcf2d0_0, 8, 32;
    %load/v 8, v0x8fcef58_0, 1;
    %set/v v0x8fce100_0, 8, 1;
    %load/v 8, v0x8fce100_0, 1;
    %jmp/0xz  T_21.12, 8;
    %load/v 8, v0x8fcf6d0_0, 4;
    %cmpi/u 8, 1, 4;
    %jmp/1 T_21.14, 6;
    %cmpi/u 8, 0, 4;
    %jmp/1 T_21.15, 6;
    %cmpi/u 8, 2, 4;
    %jmp/1 T_21.16, 6;
    %jmp T_21.17;
T_21.14 ;
    %delay 5, 0;
    %load/v 8, v0x8fcf518_0, 4;
    %set/v v0x8fce630_0, 8, 4;
    %set/v v0x8fce5c0_0, 1, 1;
    %fork TD_CPU.alu_rs\x5B1\x5D.writeValid, S_0x8fce540;
    %join;
    %load/v 8, v0x8fce740_0, 16;
    %set/v v0x8fcf0f0_0, 8, 16;
    %load/v 8, v0x8fcf518_0, 4;
    %set/v v0x8fce950_0, 8, 4;
    %load/v 8, v0x8fcf258_0, 32;
    %load/v 40, v0x8fcf2d0_0, 32;
    %sub 8, 40, 32;
    %set/v v0x8fce890_0, 8, 32;
    %fork TD_CPU.alu_rs\x5B1\x5D.writeData, S_0x8fce7a0;
    %join;
    %load/v 8, v0x8fce8f0_0, 512;
    %set/v v0x8fcf018_0, 8, 512;
    %jmp T_21.17;
T_21.15 ;
    %delay 5, 0;
    %load/v 8, v0x8fcf518_0, 4;
    %set/v v0x8fce630_0, 8, 4;
    %set/v v0x8fce5c0_0, 1, 1;
    %fork TD_CPU.alu_rs\x5B1\x5D.writeValid, S_0x8fce540;
    %join;
    %load/v 8, v0x8fce740_0, 16;
    %set/v v0x8fcf0f0_0, 8, 16;
    %load/v 8, v0x8fcf518_0, 4;
    %set/v v0x8fce950_0, 8, 4;
    %load/v 8, v0x8fcf258_0, 32;
    %load/v 40, v0x8fcf2d0_0, 32;
    %add 8, 40, 32;
    %set/v v0x8fce890_0, 8, 32;
    %fork TD_CPU.alu_rs\x5B1\x5D.writeData, S_0x8fce7a0;
    %join;
    %load/v 8, v0x8fce8f0_0, 512;
    %set/v v0x8fcf018_0, 8, 512;
    %jmp T_21.17;
T_21.16 ;
    %delay 35, 0;
    %load/v 8, v0x8fcf518_0, 4;
    %set/v v0x8fce630_0, 8, 4;
    %set/v v0x8fce5c0_0, 1, 1;
    %fork TD_CPU.alu_rs\x5B1\x5D.writeValid, S_0x8fce540;
    %join;
    %load/v 8, v0x8fce740_0, 16;
    %set/v v0x8fcf0f0_0, 8, 16;
    %load/v 8, v0x8fcf518_0, 4;
    %set/v v0x8fce950_0, 8, 4;
    %load/v 8, v0x8fcf258_0, 32;
    %load/v 40, v0x8fcf2d0_0, 32;
    %mul 8, 40, 32;
    %set/v v0x8fce890_0, 8, 32;
    %fork TD_CPU.alu_rs\x5B1\x5D.writeData, S_0x8fce7a0;
    %join;
    %load/v 8, v0x8fce8f0_0, 512;
    %set/v v0x8fcf018_0, 8, 512;
    %jmp T_21.17;
T_21.17 ;
T_21.12 ;
    %end;
    .scope S_0x8fcd558;
t_12 %join;
T_21.3 ;
T_21.1 ;
    %jmp T_21;
    .thread T_21;
    .scope S_0x8fa3560;
T_22 ;
    %wait E_0x8fa3258;
    %load/v 8, v0x8fcd3a0_0, 1;
    %jmp/0xz  T_22.0, 8;
    %ix/load 0, 1, 0;
    %assign/v0 v0x8fccea8_0, 0, 0;
    %jmp T_22.1;
T_22.0 ;
    %load/v 8, v0x8fccea8_0, 1;
    %inv 8, 1;
    %jmp/0xz  T_22.2, 8;
    %fork t_15, S_0x8fcbbc8;
    %jmp t_14;
    .scope S_0x8fcbbc8;
t_15 ;
    %delay 1, 0;
    %load/v 8, v0x8fcd0a0_0, 4;
    %mov 12, 0, 1;
    %cmpi/u 8, 0, 5;
    %jmp/0xz  T_22.4, 4;
    %ix/load 0, 1, 0;
    %assign/v0 v0x8fccea8_0, 0, 1;
    %load/v 8, v0x8fcccd0_0, 4;
    %ix/load 0, 4, 0;
    %assign/v0 v0x8fcd000_0, 0, 8;
    %ix/load 1, 28, 0;
    %mov 4, 0, 1;
    %jmp/1 T_22.6, 4;
    %load/x1p 8, v0x8fcd100_0, 4;
    %jmp T_22.7;
T_22.6 ;
    %mov 8, 2, 4;
T_22.7 ;
; Save base=8 wid=4 in lookaside.
    %ix/load 0, 4, 0;
    %assign/v0 v0x8fcd1a8_0, 0, 8;
    %ix/load 1, 23, 0;
    %mov 4, 0, 1;
    %jmp/1 T_22.8, 4;
    %load/x1p 8, v0x8fcd100_0, 5;
    %jmp T_22.9;
T_22.8 ;
    %mov 8, 2, 5;
T_22.9 ;
; Save base=8 wid=5 in lookaside.
    %set/v v0x8fcd2f8_0, 8, 5;
    %ix/load 1, 13, 0;
    %mov 4, 0, 1;
    %jmp/1 T_22.10, 4;
    %load/x1p 8, v0x8fcd100_0, 5;
    %jmp T_22.11;
T_22.10 ;
    %mov 8, 2, 5;
T_22.11 ;
; Save base=8 wid=5 in lookaside.
    %set/v v0x8fcd258_0, 8, 5;
    %load/v 8, v0x8fcd450_0, 32;
    %set/v v0x8fcc778_0, 8, 32;
    %load/v 8, v0x8fcd208_0, 4;
    %set/v v0x8fcc718_0, 8, 4;
    %load/v 8, v0x8fcca58_0, 512;
    %set/v v0x8fcc598_0, 8, 512;
    %load/v 8, v0x8fccb38_0, 16;
    %set/v v0x8fcc608_0, 8, 16;
    %fork TD_CPU.alu_rs\x5B2\x5D.getData, S_0x8fcc518;
    %join;
    %load/v 8, v0x8fcc6c8_0, 32;
    %set/v v0x8fccd30_0, 8, 32;
    %load/v 8, v0x8fcc668_0, 4;
    %set/v v0x8fccc10_0, 8, 4;
    %load/v 8, v0x8fcd4a0_0, 32;
    %set/v v0x8fcc778_0, 8, 32;
    %load/v 8, v0x8fcd2a8_0, 4;
    %set/v v0x8fcc718_0, 8, 4;
    %load/v 8, v0x8fcca58_0, 512;
    %set/v v0x8fcc598_0, 8, 512;
    %load/v 8, v0x8fccb38_0, 16;
    %set/v v0x8fcc608_0, 8, 16;
    %fork TD_CPU.alu_rs\x5B2\x5D.getData, S_0x8fcc518;
    %join;
    %load/v 8, v0x8fcc6c8_0, 32;
    %set/v v0x8fccdb8_0, 8, 32;
    %load/v 8, v0x8fcc668_0, 4;
    %set/v v0x8fccc60_0, 8, 4;
    %load/v 8, v0x8fcccd0_0, 4;
    %set/v v0x8fcc098_0, 8, 4;
    %set/v v0x8fcc028_0, 0, 1;
    %fork TD_CPU.alu_rs\x5B2\x5D.writeValid, S_0x8fcbfa8;
    %join;
    %load/v 8, v0x8fcc1c0_0, 16;
    %set/v v0x8fccb88_0, 8, 16;
T_22.4 ;
    %end;
    .scope S_0x8fa3560;
t_14 %join;
    %jmp T_22.3;
T_22.2 ;
    %fork t_17, S_0x8fa3c90;
    %jmp t_16;
    .scope S_0x8fa3c90;
t_17 ;
    %set/v v0x8f8ace8_0, 1, 1;
    %load/v 8, v0x8fccc10_0, 4;
    %set/v v0x8fcc948_0, 8, 4;
    %load/v 8, v0x8fcca58_0, 512;
    %set/v v0x8fcc878_0, 8, 512;
    %load/v 8, v0x8fccb38_0, 16;
    %set/v v0x8fcc8e8_0, 8, 16;
    %fork TD_CPU.alu_rs\x5B2\x5D.checkAndGetData, S_0x8fcc7f8;
    %join;
    %load/v 8, v0x8fcc9a8_0, 32;
    %set/v v0x8fccd30_0, 8, 32;
    %load/v 8, v0x8fcc9f8_0, 1;
    %set/v v0x8f8ace8_0, 8, 1;
    %load/v 8, v0x8fccc60_0, 4;
    %set/v v0x8fcc948_0, 8, 4;
    %load/v 8, v0x8fcca58_0, 512;
    %set/v v0x8fcc878_0, 8, 512;
    %load/v 8, v0x8fccb38_0, 16;
    %set/v v0x8fcc8e8_0, 8, 16;
    %fork TD_CPU.alu_rs\x5B2\x5D.checkAndGetData, S_0x8fcc7f8;
    %join;
    %load/v 8, v0x8fcc9a8_0, 32;
    %set/v v0x8fccdb8_0, 8, 32;
    %load/v 8, v0x8fcc9f8_0, 1;
    %set/v v0x8f8ace8_0, 8, 1;
    %load/v 8, v0x8f8ace8_0, 1;
    %jmp/0xz  T_22.12, 8;
    %load/v 8, v0x8fcd1a8_0, 4;
    %cmpi/u 8, 1, 4;
    %jmp/1 T_22.14, 6;
    %cmpi/u 8, 0, 4;
    %jmp/1 T_22.15, 6;
    %cmpi/u 8, 2, 4;
    %jmp/1 T_22.16, 6;
    %jmp T_22.17;
T_22.14 ;
    %delay 5, 0;
    %load/v 8, v0x8fcd000_0, 4;
    %set/v v0x8fcc098_0, 8, 4;
    %set/v v0x8fcc028_0, 1, 1;
    %fork TD_CPU.alu_rs\x5B2\x5D.writeValid, S_0x8fcbfa8;
    %join;
    %load/v 8, v0x8fcc1c0_0, 16;
    %set/v v0x8fccb88_0, 8, 16;
    %load/v 8, v0x8fcd000_0, 4;
    %set/v v0x8fcc3d0_0, 8, 4;
    %load/v 8, v0x8fccd30_0, 32;
    %load/v 40, v0x8fccdb8_0, 32;
    %sub 8, 40, 32;
    %set/v v0x8fcc310_0, 8, 32;
    %fork TD_CPU.alu_rs\x5B2\x5D.writeData, S_0x8fcc220;
    %join;
    %load/v 8, v0x8fcc370_0, 512;
    %set/v v0x8fccac8_0, 8, 512;
    %jmp T_22.17;
T_22.15 ;
    %delay 5, 0;
    %load/v 8, v0x8fcd000_0, 4;
    %set/v v0x8fcc098_0, 8, 4;
    %set/v v0x8fcc028_0, 1, 1;
    %fork TD_CPU.alu_rs\x5B2\x5D.writeValid, S_0x8fcbfa8;
    %join;
    %load/v 8, v0x8fcc1c0_0, 16;
    %set/v v0x8fccb88_0, 8, 16;
    %load/v 8, v0x8fcd000_0, 4;
    %set/v v0x8fcc3d0_0, 8, 4;
    %load/v 8, v0x8fccd30_0, 32;
    %load/v 40, v0x8fccdb8_0, 32;
    %add 8, 40, 32;
    %set/v v0x8fcc310_0, 8, 32;
    %fork TD_CPU.alu_rs\x5B2\x5D.writeData, S_0x8fcc220;
    %join;
    %load/v 8, v0x8fcc370_0, 512;
    %set/v v0x8fccac8_0, 8, 512;
    %jmp T_22.17;
T_22.16 ;
    %delay 35, 0;
    %load/v 8, v0x8fcd000_0, 4;
    %set/v v0x8fcc098_0, 8, 4;
    %set/v v0x8fcc028_0, 1, 1;
    %fork TD_CPU.alu_rs\x5B2\x5D.writeValid, S_0x8fcbfa8;
    %join;
    %load/v 8, v0x8fcc1c0_0, 16;
    %set/v v0x8fccb88_0, 8, 16;
    %load/v 8, v0x8fcd000_0, 4;
    %set/v v0x8fcc3d0_0, 8, 4;
    %load/v 8, v0x8fccd30_0, 32;
    %load/v 40, v0x8fccdb8_0, 32;
    %mul 8, 40, 32;
    %set/v v0x8fcc310_0, 8, 32;
    %fork TD_CPU.alu_rs\x5B2\x5D.writeData, S_0x8fcc220;
    %join;
    %load/v 8, v0x8fcc370_0, 512;
    %set/v v0x8fccac8_0, 8, 512;
    %jmp T_22.17;
T_22.17 ;
T_22.12 ;
    %end;
    .scope S_0x8fa3560;
t_16 %join;
T_22.3 ;
T_22.1 ;
    %jmp T_22;
    .thread T_22;
    .scope S_0x8fa45a0;
T_23 ;
    %delay 5, 0;
    %set/v v0x8fd4c88_0, 0, 1;
    %delay 5, 0;
    %set/v v0x8fd4c88_0, 1, 1;
    %jmp T_23;
    .thread T_23;
    .scope S_0x8fa45a0;
T_24 ;
    %fork t_19, S_0x8fd2140;
    %jmp t_18;
    .scope S_0x8fd2140;
t_19 ;
    %vpi_call 2 62 "$monitor", "%g: inst: %h_%h_%h_%h, j <%g, %g>, k <%g, %g>, CDB: 0 <%g, %g>, 1 <%g, %g>, 2 <%g, %g>, busy: 0:%g, 1:%g, 2:%g", $realtime, v0x8fd4ed0_0, v0x8fd50d8_0, v0x8fd4f80_0, v0x8fd5248_0, v0x8fd5300_0, v0x8fd4fd0_0, v0x8fd5298_0, v0x8fd5088_0, &PV<v0x8fd4948_0, 0, 32>, &PV<v0x8fd4998_0, 0, 1>, &PV<v0x8fd4948_0, 32, 32>, &PV<v0x8fd4998_0, 1, 1>, &PV<v0x8fd4948_0, 64, 32>, &PV<v0x8fd4998_0, 2, 1>, &PV<v0x8fd4c38_0, 0, 1>, &PV<v0x8fd4c38_0, 1, 1>, &PV<v0x8fd4c38_0, 2, 1>;
    %set/v v0x8fd4ed0_0, 0, 4;
    %set/v v0x8fd5198_0, 1, 1;
    %delay 10, 0;
    %set/v v0x8fd5198_0, 0, 1;
    %set/v v0x8fd21c0_0, 0, 32;
T_24.0 ;
    %load/v 8, v0x8fd21c0_0, 32;
   %cmpi/u 8, 32, 32;
    %jmp/0xz T_24.1, 5;
    %delay 10, 0;
    %set/v v0x8fd5488_0, 1, 1;
    %load/v 8, v0x8fd21c0_0, 32;
    %set/v v0x8fd5558_0, 8, 5;
    %load/v 8, v0x8fd21c0_0, 32;
    %set/v v0x8fd53c0_0, 8, 32;
    %set/v v0x8fd5410_0, 1, 1;
    %load/v 8, v0x8fd21c0_0, 32;
    %movi 40, 10, 32;
    %mod 8, 40, 32;
    %set/v v0x8fd5350_0, 8, 4;
    %load/v 8, v0x8fd21c0_0, 32;
    %set/v v0x8fd5558_0, 8, 5;
    %ix/load 0, 1, 0;
    %load/vp0 8, v0x8fd21c0_0, 32;
    %set/v v0x8fd21c0_0, 8, 32;
    %jmp T_24.0;
T_24.1 ;
    %set/v v0x8fd50d8_0, 0, 5;
    %movi 8, 1, 5;
    %set/v v0x8fd4f80_0, 8, 5;
    %movi 8, 2, 5;
    %set/v v0x8fd5248_0, 8, 5;
    %set/v v0x8fd21c0_0, 0, 32;
T_24.2 ;
    %load/v 8, v0x8fd21c0_0, 32;
   %cmpi/u 8, 3, 32;
    %jmp/0xz T_24.3, 5;
    %delay 10, 0;
    %load/v 8, v0x8fd21c0_0, 32;
    %set/v v0x8fd4cd8_0, 8, 4;
    %load/v 8, v0x8fd21c0_0, 32;
    %set/v v0x8fd4ad8_0, 8, 4;
    %load/v 8, v0x8fd50d8_0, 5;
    %mov 13, 0, 27;
    %addi 8, 1, 32;
    %set/v v0x8fd50d8_0, 8, 5;
    %load/v 8, v0x8fd5248_0, 5;
    %mov 13, 0, 27;
    %addi 8, 1, 32;
    %set/v v0x8fd5248_0, 8, 5;
    %ix/load 0, 1, 0;
    %load/vp0 8, v0x8fd21c0_0, 32;
    %set/v v0x8fd21c0_0, 8, 32;
    %jmp T_24.2;
T_24.3 ;
    %delay 200, 0;
    %vpi_call 2 92 "$finish";
    %end;
    .scope S_0x8fa45a0;
t_18 %join;
    %jmp T_24;
    .thread T_24;
# The file index is used to find the file name in the following table.
:file_names 7;
    "N/A";
    "<interactive>";
    "CPU.v";
    "./parameters.v";
    "./reg_status.v";
    "./reg_file_RX.v";
    "./ALU_RS.v";
